<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>408</title>
    <url>/blog/2022/082b671a33.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7a8c862ed69b4f59efcfc7e7fd07be97ead825e1e500b3b679807d8c3b79e6fd"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>C++中string、char *、char[]、const char*的转换</title>
    <url>/blog/2022/066dcc5737.html</url>
    <content><![CDATA[<blockquote>
<p>在C++中string、const char*、 char* 、char[]四者类型经常会需要转化。</p>
</blockquote>
<!-- toc -->
<h2 id="转化方法"><a class="markdownIt-Anchor" href="#转化方法"></a> 转化方法</h2>
<blockquote>
<ol>
<li>char*转string：可以直接赋值。</li>
<li>char[]转string：可以直接赋值。</li>
<li>char*转char[]：不能直接赋值，可以循环char*字符串逐个字符赋值,也可以使用strcpy_s等函数。</li>
<li>string转char[]:不能直接赋值，可以循环char*字符串逐个字符赋值,也可以使用strcpy_s等函数</li>
<li>string转char*:调用string对象的c_str函数或data函数或copy函数。</li>
<li>char[]转char*:直接赋值即可。<br>
使用时，要对源格式和目标格式进行初始化。源格式赋值为具体的内容，目标格式赋值为空。</li>
</ol>
</blockquote>
<p><img src="https://s2.loli.net/2022/06/08/75fiJavz1NIknOC.png" alt="20220608193144"></p>
<p>总结如下：<br>
A. 变成string,直接赋值。<br>
B. char[]变成别的，直接赋值。<br>
C. char*变const char*容易，const char*变char*麻烦。&lt;const_cast&gt;&lt;char*&gt;(const char*);<br>
D. string变char*要通过const char*中转。<br>
E. 变成char[]。string逐个赋值，char* const char* strncpy_s()</p>
<h2 id="c和c中char和string区别"><a class="markdownIt-Anchor" href="#c和c中char和string区别"></a> C和C++中char和string区别</h2>
<p>在C语言中，string 是定义一个字符串，存储的是一段如“abcd”的数据，而且最后还有一个结束符’\0’;</p>
<p>char 是定义一个字符，存储一个字符，占一个字节。</p>
<p>在C++中，string有两种，一种是字符串char[]，另外一种是封装好的字符串类，要区别理解。例如’a’是char, "a"是char string，这两者都是普通的字符和字符串，和C语言中没什么不同值得注意的是后者包含两个字符，末尾有一个隐身的’\0’</p>
<p>而 string str = “a” 是C++ 封装好的string。C<ins>中的char string和string不是一回事。当用到了"string"这个关键词，就不是普通的字符串，而是用到了封装后的类。<br>
在C</ins>中，char仍然是一个primitive type（原始类型），而string已经经过封装，成为了一个class（类）用到它时，我们需要 #include <string>，它是C++ Standard Library （C++标准库）的一部分。</string></p>
<blockquote>
<p>参考：<br>
<a href="https://blog.csdn.net/yejinxiong001/article/details/78436310">c/c++中string与char的区别</a><br>
<a href="https://blog.csdn.net/hebbely/article/details/79577880">C++中string、char *、char[]、const char*的转换</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>C++中STL常用库函数</title>
    <url>/blog/2022/06b47eaf04.html</url>
    <content><![CDATA[<blockquote>
<p>总结下C++中STL常用函数</p>
</blockquote>
<!-- toc -->
<h3 id="sort快排"><a class="markdownIt-Anchor" href="#sort快排"></a> sort()快排</h3>
<p>函数原型：<code>sort(起始地址, 末尾地址, cmp)</code>,其中cmp是可以自己定义的函数名,默认递增排列</p>
<p>cmp函数示例:</p>
<pre class="highlight"><code class="C++"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-type">int</span> &amp;a, <span class="hljs-type">int</span> &amp;b)</span></span>{
    <span class="hljs-keyword">return</span> a &gt; b;
}
</code></pre>
<h3 id="reverse逆置"><a class="markdownIt-Anchor" href="#reverse逆置"></a> reverse()逆置</h3>
<p>函数原型：<code>reverse(起始地址, 末尾地址)</code></p>
<h3 id="stoi"><a class="markdownIt-Anchor" href="#stoi"></a> stoi()</h3>
<p>函数原型:<code>stoi(string类型)</code><br>
将string类型转换为int类型</p>
<h3 id="unique去重"><a class="markdownIt-Anchor" href="#unique去重"></a> unique()去重</h3>
<p>函数原型：<code>unique(起始地址, 末尾地址, fun)</code>;其中fun为自定义的函数名。</p>
<p>注意：unique函数去重并不是真正的去重，它是不断的将后面不重复的元素覆盖前面重复的元素，最后返回最后一个不重复的元素的地址。</p>
<h3 id="二分查找函数"><a class="markdownIt-Anchor" href="#二分查找函数"></a> 二分查找函数</h3>
<p><code>lower_bound(起始地址, 末尾地址, target)</code>：查找第一个大于等于target目标值的位置</p>
<p><code>upper_bound(起始地址, 末尾地址, target)</code>：查找第一个大于target目标值的位置</p>
<p><code>binary_search(起始地址, 末尾地址, target)</code>：查找target是否存在于数组或vector中，找到返回true，否则返回false</p>
<h3 id="字符串查找函数"><a class="markdownIt-Anchor" href="#字符串查找函数"></a> 字符串查找函数</h3>
<p><code>s1.find(s2)</code>：在s1字符串中查找s2，查找到返回第一个字符的位置，查找失败返回s1.npos</p>
<p><code>set.count(a)</code>：本来是计算a出现的次数，但是由于集合中是没有重复元素的，于是count函数也就被作为查找函数了，因为a只能出现1次或者0次，查找成功，返回1；查找失败返回0.</p>
<p><code>map.find()</code>：主要用于查找key是否存在map中，不存在返回map.end()，用法和set一样</p>
<h3 id="vector"><a class="markdownIt-Anchor" href="#vector"></a> vector</h3>
<blockquote>
<p>vector, 变长数组，倍增的思想</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回元素个数</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">clear()</td>
<td style="text-align:center">清空</td>
</tr>
<tr>
<td style="text-align:center">front()/back()</td>
<td style="text-align:center">访问第一个元素/最后一个元素</td>
</tr>
<tr>
<td style="text-align:center">push_back()/pop_back()</td>
<td style="text-align:center">插入/弹出最后一个元素</td>
</tr>
<tr>
<td style="text-align:center">begin()/end()</td>
<td style="text-align:center">开始元素迭代器/结尾元素迭代器</td>
</tr>
</tbody>
</table>
<h3 id="pairint-int"><a class="markdownIt-Anchor" href="#pairint-int"></a> pair&lt;int, int&gt;</h3>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">first</td>
<td style="text-align:center">第一个元素</td>
</tr>
<tr>
<td style="text-align:center">second</td>
<td style="text-align:center">第二个元素</td>
</tr>
</tbody>
</table>
<h3 id="string字符串"><a class="markdownIt-Anchor" href="#string字符串"></a> string，字符串</h3>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()/length()</td>
<td style="text-align:center">返回字符串长度</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">clear()</td>
<td style="text-align:center">清空</td>
</tr>
<tr>
<td style="text-align:center">substr(起始下标，(子串长度))</td>
<td style="text-align:center">返回子串</td>
</tr>
<tr>
<td style="text-align:center">c_str()</td>
<td style="text-align:center">返回字符串所在字符数组的起始地址</td>
</tr>
</tbody>
</table>
<h3 id="queue-队列"><a class="markdownIt-Anchor" href="#queue-队列"></a> queue, 队列</h3>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回队列长度</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">push()</td>
<td style="text-align:center">向队尾插入一个元素</td>
</tr>
<tr>
<td style="text-align:center">front()</td>
<td style="text-align:center">返回队头元素</td>
</tr>
<tr>
<td style="text-align:center">back()</td>
<td style="text-align:center">返回队尾元素</td>
</tr>
<tr>
<td style="text-align:center">pop()</td>
<td style="text-align:center">弹出队头元素</td>
</tr>
</tbody>
</table>
<h3 id="priority_queue"><a class="markdownIt-Anchor" href="#priority_queue"></a> priority_queue</h3>
<blockquote>
<p>优先队列，默认是大根堆</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回队列长度</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">push()</td>
<td style="text-align:center">插入一个元素</td>
</tr>
<tr>
<td style="text-align:center">top()</td>
<td style="text-align:center">返回堆顶元素</td>
</tr>
<tr>
<td style="text-align:center">pop()</td>
<td style="text-align:center">弹出堆顶元素</td>
</tr>
</tbody>
</table>
<p>定义成小根堆的方式：</p>
<pre class="highlight"><code class="C++">priority_queue&lt;<span class="hljs-type">int</span>, vector&lt;<span class="hljs-type">int</span>&gt;, greater&lt;<span class="hljs-type">int</span>&gt;&gt; q;
</code></pre>
<h3 id="stack-栈"><a class="markdownIt-Anchor" href="#stack-栈"></a> stack, 栈</h3>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回栈长度</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">push()</td>
<td style="text-align:center">向栈顶插入一个元素</td>
</tr>
<tr>
<td style="text-align:center">top()</td>
<td style="text-align:center">返回栈顶元素</td>
</tr>
<tr>
<td style="text-align:center">pop()</td>
<td style="text-align:center">弹出栈顶元素</td>
</tr>
</tbody>
</table>
<h3 id="deque-双端队列"><a class="markdownIt-Anchor" href="#deque-双端队列"></a> deque, 双端队列</h3>
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回队列长度</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">返回是否为空</td>
</tr>
<tr>
<td style="text-align:center">clear()</td>
<td style="text-align:center">清空队列</td>
</tr>
<tr>
<td style="text-align:center">front()/back()</td>
<td style="text-align:center">返回队头元素</td>
</tr>
<tr>
<td style="text-align:center">push_back()/pop_back()</td>
<td style="text-align:center">插入/弹出最后一个元素</td>
</tr>
<tr>
<td style="text-align:center">push_front()/pop_front()</td>
<td style="text-align:center">插入/弹出第一个元素</td>
</tr>
<tr>
<td style="text-align:center">begin()/end()</td>
<td style="text-align:center">开始元素迭代器/结尾元素迭代器</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++数组的机理</title>
    <url>/blog/2023/0445fbc665.html</url>
    <content><![CDATA[<h2 id="深入理解c二维数组"><a class="markdownIt-Anchor" href="#深入理解c二维数组"></a> 深入理解C++二维数组</h2>
<blockquote>
<p>提问：定义一个3 * 3的数组arr，值分别为1~9，问arr[0][5]的值为多少？</p>
</blockquote>
<p>首先定义一个二维数组，然后获取其地址：</p>
<pre class="highlight"><code class="c++"><span class="hljs-type">int</span> arr[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] = {<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>};
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) {
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">3</span>; j++) {
        std::cout &lt;&lt; <span class="hljs-string">"arr["</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">"]["</span> &lt;&lt; j &lt;&lt; <span class="hljs-string">"] = "</span> &lt;&lt; arr[i][j] &lt;&lt; <span class="hljs-string">", address = "</span> &lt;&lt; &amp;arr[i][j] &lt;&lt; std::endl;
    }
}
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407150212.png" alt="20230407150212"></p>
<p>通过打印地址发现每个元素地址之间差4，也就是一个int的长度(一般情况下int型变量为4个字节)，而且地址也是连续的，说明申请了一个二维数组，然后申请了一段连续的地址空间来存放这些数据。</p>
<p>然后我们打印一下arr、arr[0]、arr[0][0]的地址：</p>
<pre class="highlight"><code class="c++">std::cout &lt;&lt; <span class="hljs-string">"Address of arr: "</span> &lt;&lt; &amp;arr &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"Address of arr[0]: "</span> &lt;&lt; &amp;arr[<span class="hljs-number">0</span>] &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"Address of arr[0][0]: "</span> &lt;&lt; &amp;arr[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] &lt;&lt; std::endl;
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407150901.png" alt="20230407150901"></p>
<p>可以看出，三者地址是一样的，这说明三者都指向数组起始地址，变量名<code>arr</code>也就是数组的起始地址，那么arr是什么数据类型呢？</p>
<p>打印一下arr、arr + 1、 arr + 2、arr[0]、arr[1]、arr[2]的地址:</p>
<pre class="highlight"><code class="c++">    <span class="hljs-comment">// 打印arr的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr: "</span> &lt;&lt; arr &lt;&lt; std::endl;

    <span class="hljs-comment">// 打印arr + 1的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr + 1: "</span> &lt;&lt; arr + <span class="hljs-number">1</span> &lt;&lt; std::endl;

    <span class="hljs-comment">// 打印arr + 2的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr + 2: "</span> &lt;&lt; arr + <span class="hljs-number">2</span> &lt;&lt; std::endl;

    <span class="hljs-comment">// 打印arr[0]的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr[0]: "</span> &lt;&lt; arr[<span class="hljs-number">0</span>] &lt;&lt; std::endl;

    <span class="hljs-comment">// 打印arr[1]的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr[1]: "</span> &lt;&lt; arr[<span class="hljs-number">1</span>] &lt;&lt; std::endl;

    <span class="hljs-comment">// 打印arr[2]的地址</span>
    std::cout &lt;&lt; <span class="hljs-string">"Address of arr[2]: "</span> &lt;&lt; arr[<span class="hljs-number">2</span>] &lt;&lt; std::endl;
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407151423.png" alt="20230407151423"></p>
<p>显而易见，arr + n 等价于 arr[n],arr[n]是指针类型，那么arr就是比arr[n]多一维的维指针</p>
<p>再来看一下arr[0][0]、arr[1][0]、arr[2][0]的地址和值（前面已经打印出来）：</p>
<pre class="highlight"><code class="c++"><span class="hljs-comment">// 打印arr[0][0]、arr[1][0]、arr[2][0]的地址和值</span>
std::cout &lt;&lt; <span class="hljs-string">"Address of arr[0][0]: "</span> &lt;&lt; &amp;arr[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">", value = "</span> &lt;&lt; arr[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"Address of arr[1][0]: "</span> &lt;&lt; &amp;arr[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">", value = "</span> &lt;&lt; arr[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"Address of arr[2][0]: "</span> &lt;&lt; &amp;arr[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">", value = "</span> &lt;&lt; arr[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] &lt;&lt; std::endl;
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407152029.png" alt="20230407152029"></p>
<p>可以看到和上述arr[n]地址一样，表示的每一行第一列的值，显而易见arr[n]指向的就是每行首元素的地址，也就是一维指针，那么arr就是二维指针，来验证一下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-type">int</span> *p = a;　<span class="hljs-comment">// 不通过</span>
</code></pre>
<p>实验发现报错，继续看</p>
<pre class="highlight"><code class="c++"><span class="hljs-type">int</span>* p = *arr;
std::cout &lt;&lt; <span class="hljs-string">"Address of p: "</span> &lt;&lt; p &lt;&lt; <span class="hljs-string">", Address of arr: "</span> &lt;&lt; arr &lt;&lt; std::endl;
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407152833.png" alt="20230407152833"></p>
<pre class="highlight"><code class="C++">std::cout &lt;&lt; <span class="hljs-string">"the value of p is: "</span> &lt;&lt; p &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"the value of *p is: "</span> &lt;&lt; *p &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"the value of p+1 is: "</span> &lt;&lt; p+<span class="hljs-number">1</span> &lt;&lt; std::endl;
std::cout &lt;&lt; <span class="hljs-string">"the value of *(p+1) is: "</span> &lt;&lt; *(p+<span class="hljs-number">1</span>) &lt;&lt; std::endl;

std::cout &lt;&lt; <span class="hljs-string">"a[1][1] inferred from p : "</span> &lt;&lt; *(p+<span class="hljs-number">1</span>*<span class="hljs-number">3</span>+<span class="hljs-number">1</span>) &lt;&lt; std::endl;
</code></pre>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407153004.png" alt="20230407153004"></p>
<p>对a解引用后确实是一个地址，所以可以定义指针，并且可以用加偏移量的方式得到a[1][1]</p>
<p>对于二维数组arr[i][j],a[m][n]表示其中的一个值:</p>
<ul>
<li>arr[m][n] == *(*(arr + m) + n) == *(*arr + m * i + j)</li>
</ul>
<p>总的来说数组的本质还是由指针封装起来的数据类型，所以从根本上来说可以从地址上解决，遇到一些奇奇怪怪的问题也可以由地址来解决，比如本文的问题：</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230407154547.png" alt="20230407154547"></p>
<p>另外，数组可以越界，这是C++所决定的，想要不越界只能人为的去限制</p>
]]></content>
  </entry>
  <entry>
    <title>Git常用指令</title>
    <url>/blog/2023/044b8db958.html</url>
    <content><![CDATA[<ul>
<li>创建仓库
<ul>
<li>git clone &lt;url&gt; [directory]</li>
<li>git init</li>
<li>git config --global <a href="http://user.name">user.name</a> ‘你的用户名’</li>
<li>git config --global user.email ‘你的邮箱’</li>
<li>git remote add origin &lt;远程仓库&gt;</li>
<li>git add
<ul>
<li>git add .:添加所有</li>
<li>git add &lt;文件名&gt;：添加指定文件</li>
</ul>
</li>
<li>git commit -m “message”</li>
<li>git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</li>
<li>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</li>
</ul>
</li>
<li>基本指令
<ul>
<li>git config：配置信息</li>
<li>git remote -v：查看当前关联的远程主机地址</li>
<li>git remote rm origin：删除远程地址</li>
<li>git add：添加文件到缓存命令</li>
<li>git status：查看文件的状态命令
<ul>
<li>git diff：尚未缓存的改动</li>
<li>git diff --cached：查看已缓存的改动</li>
<li>git diff HEAD：查看已缓存的与未缓存的所有改动</li>
<li>git diff --stat：显示摘要而非整个</li>
</ul>
</li>
<li>git diff：查看更新的详细信息命令</li>
<li>git commit：提交命令
<ul>
<li>git commit -m “第一次版本提交”</li>
<li>git commit -am “第一次版本提交”</li>
</ul>
</li>
<li>git reset HEAD：取消缓存命令
<ul>
<li>git reset HEAD test.txt</li>
</ul>
</li>
<li>git rm：删除命令</li>
<li>git mv：移动或重命名命令</li>
</ul>
</li>
<li>分支
<ul>
<li>git branch：查看分支命令</li>
<li>git branch (branchname)：创建分支命令</li>
<li>git checkout (branchname)：切换分支命令</li>
<li>git merge：合并分支命令</li>
<li>git branch -d (branchname)：删除分支命令</li>
</ul>
</li>
<li>标签
<ul>
<li>可以使用 git tag -a vx.x来创建一个标签。a 选项意为"创建一个带注解的标签"。 不用 -a 选项也可以执行的，但它不会记录这标签是啥时候打的，谁打的，也不会让你添加个标签的注解</li>
<li>git tag：查看标签</li>
</ul>
</li>
<li>log
<ul>
<li>git log：查看记录
<ul>
<li>–oneline ：查看历史记录的简洁版本</li>
<li>–graph ：查看历史中什么时候出现了分支、合并</li>
<li>–reverse ：逆向显示所有日志</li>
<li>–author ：查找指定用户的提交日志</li>
<li>–since、–before、 --until、–after： 指定帅选日期</li>
<li>–no-merges ：选项以隐藏合并提交</li>
<li>查看提交版本，如果想要回退到指定版本只需使用<code>git checkout 版本ID</code>即可，版本ID在<code>git log</code>之后会显示每个版本的ID</li>
<li><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230419192806.png" alt="20230419192806"></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Hexo+Github搭建自己的博客</title>
    <url>/blog/2021/03711.html</url>
    <content><![CDATA[<p>​今天算是把自己的简易博客给搭建了起来，虽然说很丑，很多地方优化还没做好，功能也不太全，但是，做事情嘛，总是要一步步来的，哪有一蹴而就的事情，自己慢慢摸索，踩了许多坑之后，也把这其中的原理摸索了个七七八八，虽然说要我写个主题是天大的难题，但是理解博客的架构，以及github的用法也是很容易的，甚至就连命令也因为出错太多，四处填坑而记得些常用的，所以说做事情别人教给自己的和自己摸索的是完全不一样的，当然这个摸索也是在其他大佬教程和错误修正基础之上摸索的，并不是“白手起家”，废话不多说，进入正题，记录一些我自己的搭建过程，也是那些像我一样的小白提供一个同样水平的教程，绝对包教包会，首先我们先来了解一下他们的工作原理，通俗理解，如有不对，欢迎指正。</p>
<h2 id="关于github"><a class="markdownIt-Anchor" href="#关于github"></a> 关于Github</h2>
<p>​首先关于Github，本质上讲就是一个比较通用的代码托管平台。你可以将自己做的项目之类balabala的都放在里面，取用方便，最重要的是他完全免费，是一个很好的托管平台，做一些比较大的项目也可以多人协作（扯远了），回来说我们的博客，你可以在Github上面建立一个或者多个仓库，名字可以任意取，这些仓库本质没有区别，Github还为每个仓库提供一个页面还有主题（当然主体比较单一，还比较<s>漂亮</s>chou），当然你也可以选择自己搭配喜欢的主题。唯一不同之处就是Github给每个用户提供一个域名（<a href="http://username.github.io">username.github.io</a>），当你的仓库以这个格式命名的时候，他就会默认这个仓库的界面就是你的网站主界面，其他的仓库就是他的子目录，就这么点区别，举个栗子，我的用户名是Test，那么我的网站主界面就是<a href="https://Test.github.io">https://Test.github.io</a>， <a href="http://xn--Test-p35fra5gr24c3pqk5bwvktkmh0miw9c3c2c.github.io">他所代表的仓库名字就是Test.github.io</a>，如果我还有一个仓库名字是Blog，那么这个仓库的主界面就要用<a href="https://Test.github.io/Blog">https://Test.github.io/Blog</a> 打开，这样说就很简单易懂了吧，其他区别完全没有，名字你可随便改，当你给哪个仓库命名为username.github.io时，默认打开就是这个仓库主界面（当然站点配置也要改，不然会出错的）。</p>
<h2 id="关于git"><a class="markdownIt-Anchor" href="#关于git"></a> 关于Git</h2>
<p>​Git本身就是一个工具，这里我们用它来实现我们的各种命令，大致可以等同于命令行，可以用Git来安装各种插件，实现命令，这里不多介绍，后面过程中你就会明白。</p>
<h2 id="关于hexo"><a class="markdownIt-Anchor" href="#关于hexo"></a> 关于Hexo</h2>
<p>​我们所使用的主题以及大部分插件都由Hexo提供，你可以把它理解为一家衣服店铺，我们来挑选我们喜欢的衣服（theme），同时它也提供裁裤腿，钉扣子（插件）服务，这样就可以理解了吧。</p>
<h2 id="流程"><a class="markdownIt-Anchor" href="#流程"></a> 流程</h2>
<p>​简单介绍一下流程，非常简单。首先我们建立一个仓库以便我们能够放一些我们主题的配置文件在里面，当然仓库名字就要命名为username.github.io格式了，这样我们的主页面才会使我们配置的那样，然后我们需要在本地也创建一个仓库，在里面把我们平时用的代码等等都放在里面，然后把本地仓库和远程仓库连接，再把本地文件代码上传就可以得到我们想要的简洁漂亮的网站了，是不是很简单呢。</p>
<h2 id="具体步骤"><a class="markdownIt-Anchor" href="#具体步骤"></a> 具体步骤</h2>
<h3 id="仓库搭建"><a class="markdownIt-Anchor" href="#仓库搭建"></a> 仓库搭建</h3>
<p>仓库搭建可以参考一下这位大佬的博客：<a href="https://godweiyang.com/2018/04/13/hexo-blog/">超详细Hexo+Github博客搭建小白教程</a></p>
<p>讲得非常详细，我就不再介绍了，做点其他有用的东西。</p>
<h3 id="网站配置"><a class="markdownIt-Anchor" href="#网站配置"></a> 网站配置</h3>
<p>在你的本地文件夹里面会有一个_config.yml文件，这个就是你的网站的配置文件了，可以在里面配置你的网站名字，图标等等，基本上你想到的都可以在里面设置，具体每一项对应那个部分，hexo官网很详细，也不再多补充，可以参考<a href="https://hexo.io/zh-cn/docs/configuration">Hexo文档</a>，里面没有的话<a href="https://www.baidu.com/">百度一下，你就知道</a>，总的来说，不难要善用搜索引擎。</p>
<h3 id="主题更换"><a class="markdownIt-Anchor" href="#主题更换"></a> 主题更换</h3>
<p>主题选择的话可以从<a href="https://hexo.io/themes/index.html">Themes|Hexo</a>上选你喜欢的，具体步骤里面每个主题作者都会介绍，大致过程是一样的，不管你是clone也好，下载zip主题文件也好，要保证你的主题文件夹在themes文件夹下面，然后回到你的网站的文件夹里面找到_config.yml配置文件，在里面找到theme，将其更改为你的主题，比如说我的是<a href="https://shen-yu.gitee.io/2019/ayer/">Ayer</a>，就是这样</p>
<p><img src="https://i.loli.net/2021/04/07/c58fxSXgOuYEDka.png" alt="image-20210407212409875"></p>
<p>然后基本上就可以了，之后需要做的就是一些优化工作，讲几点大家会遇到的关键的：</p>
<ul>
<li>会有两个_config.yml文件，一个位于你网站的页面，是你网站的配置文件，另一个是在你的主题文件夹里面，两个名字一样，但是千万不要弄混，不要修改错文件，这两个都是配置文件，所以名字相同，但是配置的对象不一样，这点明白，应该就很简单了。</li>
<li>更换主题的步骤基本上就是theme后面换上你的主题名字，然后在安装你的主题所需要的插件，比如说你的网站想要有一个播放器小图标，但是你不给安装插件，就算主题配置里面作者配置的再全，也不可能有用，所以说要按照主题安装说明安装插件（在网站主页面右键Git Bush Here),然后修改主题配置文件就可以</li>
<li>格式极其重要，修改配置问件事要注意中间要有一个空格才能有效<img src="https://i.loli.net/2021/04/07/NYXb42JR18uTphm.png" alt="image-20210407214015182">注意注释前也要有空格</li>
<li>最后放两张我的文件夹，以便大家区分两个配置文件，看不懂的话可以看文件夹上方的路径，路径也看不懂那就没办法了</li>
<li>主文件夹<img src="https://i.loli.net/2021/04/07/BsuyYMQEZJPoDfF.png" alt="image-20210407214254076"></li>
<li>主题页<img src="https://i.loli.net/2021/04/07/EzaDdKH7URk5B6O.png" alt="image-20210407214413945"></li>
<li>最后一点：不要怕出错，实践出真知，搞这个东西没错一段时间是没有游戏体验的，你懂的，这也是一个学习的过程，所以不要急，慢慢来，涨涨姿势，等到把雏形弄出来再慢慢搞UI也不迟。</li>
</ul>
<p>最后欢迎大家补充，有地方不懂得可以留言，也可以发邮件，看到会回复的，祝大家能尽快拥有自己的网站</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode笔记-KMP</title>
    <url>/blog/2022/06e8411ac8.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<p>字符串操作主要考虑格式的转换。</p>
<h2 id="实现strstr"><a class="markdownIt-Anchor" href="#实现strstr"></a> 实现strStr()</h2>
<p><a href="https://leetcode.cn/problems/implement-strstr/">LeetCode题目链接</a></p>
<p>KMP的经典思想就是:当出现字符串不匹配时，可以记录一部分之前已经匹配的文本内容，利用这些信息避免从头再去做匹配。</p>
<p><a href="https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html">KMP精讲文字版</a></p>
<p><a href="https://www.bilibili.com/video/BV1PD4y1o7nd/?spm_id_from=pageDriver&amp;vd_source=0febcf63c24b3fda1cd2c47a2078ae54">KMP精讲视频</a></p>
<h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2>
<h3 id="构造next数组"><a class="markdownIt-Anchor" href="#构造next数组"></a> 构造next数组</h3>
<blockquote>
<p>next数组的本质就是前缀后缀相同的字符位数表<br>
实现方式常见的有减一、右移和保持不变三种，但是本质都是一样的，只在细微地方有区别，本文采用减一方式，其他方式代码详见<a href="https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html#%E5%89%8D%E7%BC%80%E8%A1%A8-%E4%B8%8D%E5%87%8F%E4%B8%80-c-%E5%AE%9E%E7%8E%B0">前缀表（不减一）C++实现</a></p>
</blockquote>
<p>我们定义一个函数getNext来构建next数组，函数参数为指向next数组的指针，和一个字符串。 代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getNext</span><span class="hljs-params">(<span class="hljs-type">int</span>* next, <span class="hljs-type">const</span> string&amp; s)</span>
</span></code></pre>
<p>构造next数组其实就是计算模式串s，前缀表的过程。 主要有如下三步：</p>
<ol>
<li>初始化</li>
<li>处理前后缀不相同的情况</li>
<li>处理前后缀相同的情况</li>
</ol>
<p>接下来我们详解详解一下。</p>
<p><strong>初始化：</strong><br>
定义两个指针i和j，j指向前缀末尾位置，i指向后缀末尾位置。</p>
<p>然后还要对next数组进行初始化赋值，如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-type">int</span> j = <span class="hljs-number">-1</span>;
next[<span class="hljs-number">0</span>] = j;
</code></pre>
<p>j 为什么要初始化为 -1呢，因为之前说过 前缀表要统一减一的操作仅仅是其中的一种实现，我们这里选择j初始化为-1，下文我还会给出j不初始化为-1的实现代码。</p>
<p>next[i] 表示 i（包括i）之前最长相等的前后缀长度（其实就是j）</p>
<p>所以初始化next[0] = j 。</p>
<p>处理前后缀不相同的情况<br>
因为j初始化为-1，那么i就从1开始，进行s[i] 与 s[j+1]的比较。</p>
<p>所以遍历模式串s的循环下标i 要从 1开始，代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) {
</code></pre>
<p>如果 s[i] 与 s[j+1]不相同，也就是遇到 前后缀末尾不相同的情况，就要向前回退。</p>
<p>怎么回退呢？</p>
<p>next[j]就是记录着j（包括j）之前的子串的相同前后缀的长度。</p>
<p>那么 s[i] 与 s[j+1] 不相同，就要找 j+1前一个元素在next数组里的值（就是next[j]）。</p>
<p>所以，处理前后缀不相同的情况代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; s[i] != s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 前后缀不相同了</span>
    j = next[j]; <span class="hljs-comment">// 向前回退</span>
}
</code></pre>
<p>处理前后缀相同的情况<br>
如果 s[i] 与 s[j + 1] 相同，那么就同时向后移动i 和j 说明找到了相同的前后缀，同时还要将j（前缀的长度）赋给next[i], 因为next[i]要记录相同前后缀的长度。</p>
<p>代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">if</span> (s[i] == s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 找到相同的前后缀</span>
    j++;
}
next[i] = j;
</code></pre>
<p>最后整体构建next数组的函数代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getNext</span><span class="hljs-params">(<span class="hljs-type">int</span>* next, <span class="hljs-type">const</span> string&amp; s)</span></span>{
    <span class="hljs-type">int</span> j = <span class="hljs-number">-1</span>;
    next[<span class="hljs-number">0</span>] = j;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 注意i从1开始</span>
        <span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; s[i] != s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 前后缀不相同了</span>
            j = next[j]; <span class="hljs-comment">// 向前回退</span>
        }
        <span class="hljs-keyword">if</span> (s[i] == s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 找到相同的前后缀</span>
            j++;
        }
        next[i] = j; <span class="hljs-comment">// 将j（前缀的长度）赋给next[i]</span>
    }
}
</code></pre>
<p>代码构造next数组的逻辑流程动画如下：</p>
<p>得到了next数组之后，就要用这个来做匹配了。</p>
<p><img src="https://code-thinking.cdn.bcebos.com/gifs/KMP%E7%B2%BE%E8%AE%B23.gif" alt=""></p>
<h3 id="使用next数组来做匹配"><a class="markdownIt-Anchor" href="#使用next数组来做匹配"></a> 使用next数组来做匹配</h3>
<p>在文本串s里 找是否出现过模式串t。</p>
<p>定义两个下标j 指向模式串起始位置，i指向文本串起始位置。</p>
<p>那么j初始值依然为-1，为什么呢？ 依然因为next数组里记录的起始位置为-1。</p>
<p>i就从0开始，遍历文本串，代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) 
</code></pre>
<p>接下来就是 s[i] 与 t[j + 1] （因为j从-1开始的） 进行比较。</p>
<p>如果 s[i] 与 t[j + 1] 不相同，j就要从next数组里寻找下一个匹配的位置。</p>
<p>代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">while</span>(j &gt;= <span class="hljs-number">0</span> &amp;&amp; s[i] != t[j + <span class="hljs-number">1</span>]) {
    j = next[j];
}
</code></pre>
<p>如果 s[i] 与 t[j + 1] 相同，那么i 和 j 同时向后移动， 代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">if</span> (s[i] == t[j + <span class="hljs-number">1</span>]) {
    j++; <span class="hljs-comment">// i的增加在for循环里</span>
}
</code></pre>
<p>如何判断在文本串s里出现了模式串t呢，如果j指向了模式串t的末尾，那么就说明模式串t完全匹配文本串s里的某个子串了。</p>
<p>本题要在文本串字符串中找出模式串出现的第一个位置 (从0开始)，所以返回当前在文本串匹配模式串的位置i 减去 模式串的长度，就是文本串字符串中出现模式串的第一个位置。</p>
<p>代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">if</span> (j == (t.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>) ) {
    <span class="hljs-keyword">return</span> (i - t.<span class="hljs-built_in">size</span>() + <span class="hljs-number">1</span>);
}
</code></pre>
<p>那么使用next数组，用模式串匹配文本串的整体代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-type">int</span> j = <span class="hljs-number">-1</span>; <span class="hljs-comment">// 因为next数组里记录的起始位置为-1</span>
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 注意i就从0开始</span>
    <span class="hljs-keyword">while</span>(j &gt;= <span class="hljs-number">0</span> &amp;&amp; s[i] != t[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 不匹配</span>
        j = next[j]; <span class="hljs-comment">// j 寻找之前匹配的位置</span>
    }
    <span class="hljs-keyword">if</span> (s[i] == t[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 匹配，j和i同时向后移动</span>
        j++; <span class="hljs-comment">// i的增加在for循环里</span>
    }
    <span class="hljs-keyword">if</span> (j == (t.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>) ) { <span class="hljs-comment">// 文本串s里出现了模式串t</span>
        <span class="hljs-keyword">return</span> (i - t.<span class="hljs-built_in">size</span>() + <span class="hljs-number">1</span>);
    }
}
</code></pre>
<p>此时所有逻辑的代码都已经写出来了，力扣 28.实现strStr 题目的整体代码如下：</p>
<h3 id="前缀表统一减一-c代码实现"><a class="markdownIt-Anchor" href="#前缀表统一减一-c代码实现"></a> 前缀表统一减一 C++代码实现</h3>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getNext</span><span class="hljs-params">(<span class="hljs-type">int</span>* next, <span class="hljs-type">const</span> string&amp; s)</span> </span>{
        <span class="hljs-type">int</span> j = <span class="hljs-number">-1</span>;
        next[<span class="hljs-number">0</span>] = j;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 注意i从1开始</span>
            <span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; s[i] != s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 前后缀不相同了</span>
                j = next[j]; <span class="hljs-comment">// 向前回退</span>
            }
            <span class="hljs-keyword">if</span> (s[i] == s[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 找到相同的前后缀</span>
                j++;
            }
            next[i] = j; <span class="hljs-comment">// 将j（前缀的长度）赋给next[i]</span>
        }
    }
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">strStr</span><span class="hljs-params">(string haystack, string needle)</span> </span>{
        <span class="hljs-keyword">if</span> (needle.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>) {
            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
        }
        <span class="hljs-type">int</span> next[needle.<span class="hljs-built_in">size</span>()];
        <span class="hljs-built_in">getNext</span>(next, needle);
        <span class="hljs-type">int</span> j = <span class="hljs-number">-1</span>; <span class="hljs-comment">// // 因为next数组里记录的起始位置为-1</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; haystack.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 注意i就从0开始</span>
            <span class="hljs-keyword">while</span>(j &gt;= <span class="hljs-number">0</span> &amp;&amp; haystack[i] != needle[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 不匹配</span>
                j = next[j]; <span class="hljs-comment">// j 寻找之前匹配的位置</span>
            }
            <span class="hljs-keyword">if</span> (haystack[i] == needle[j + <span class="hljs-number">1</span>]) { <span class="hljs-comment">// 匹配，j和i同时向后移动</span>
                j++; <span class="hljs-comment">// i的增加在for循环里</span>
            }
            <span class="hljs-keyword">if</span> (j == (needle.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>) ) { <span class="hljs-comment">// 文本串s里出现了模式串t</span>
                <span class="hljs-keyword">return</span> (i - needle.<span class="hljs-built_in">size</span>() + <span class="hljs-number">1</span>);
            }
        }
        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
    }
};
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-二叉树</title>
    <url>/blog/2022/0621aed2ac.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h2 id="树的基本知识"><a class="markdownIt-Anchor" href="#树的基本知识"></a> 树的基本知识</h2>
<ol>
<li>节点：包含一个数据元素及若干指向子树分支的信息</li>
<li>节点的度：一个节点拥有子树的数目称为节点的度</li>
<li>叶子节点：也称为终端节点，没有子树的节点或者度为零的节点</li>
<li>分支节点：也称为非终端节点，度不为零的节点称为非终端节点</li>
<li>树的度：树中所有节点的度的最大值</li>
<li>节点的层次：从根节点开始，假设根节点为第1层，根节点的子节点为第2层，依此类推，如果某一个节点位于第L层，则其子节点位于第L+1层</li>
<li>树的深度：也称为树的高度，树中所有节点的层次最大值称为树的深度</li>
<li>有序树：如果树中各棵子树的次序是有先后次序，则称该树为有序树</li>
<li>无序树：如果树中各棵子树的次序没有先后次序，则称该树为无序树</li>
<li>森林：由m（m≥0）棵互不相交的树构成一片森林。如果把一棵非空的树的根节点删除，则该树就变成了一片森林，森林中的树由原来根节点的各棵子树构成</li>
</ol>
<h2 id="树的基本性质"><a class="markdownIt-Anchor" href="#树的基本性质"></a> 树的基本性质</h2>
<ol>
<li>二叉树的第i层上至多有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>（</mtext><mi>i</mi><mo>≥</mo><mn>1</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">2^(i-1)（i≥1）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span></span></span></span>个节点</li>
<li>深度为h的二叉树中至多含有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^h - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个节点</li>
<li>若在任意一棵二叉树中，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个叶子节点，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个度为2的节点，则必有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_0 = n_2 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li>具有n个节点的满二叉树深为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log_2 (n + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li>若对一棵有n个节点的完全二叉树进行顺序编号（1≤i≤n），那么，对于编号为i（i≥1）的节点：
<ul>
<li>当i=1时，该节点为根，它无双亲节点</li>
<li>当i&gt;1时，该节点的双亲节点的编号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>i</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{i}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.200664em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>若2i≤n，则有编号为2i的左节点，否则没有左节点</li>
<li>若2i+1≤n，则有编号为2i+1的右节点，否则没有右节点</li>
</ul>
</li>
</ol>
<h2 id="二叉树"><a class="markdownIt-Anchor" href="#二叉树"></a> 二叉树</h2>
<h3 id="二叉树的种类"><a class="markdownIt-Anchor" href="#二叉树的种类"></a> 二叉树的种类</h3>
<p>二叉树有两种主要的形式：满二叉树和完全二叉树。</p>
<h4 id="满二叉树"><a class="markdownIt-Anchor" href="#满二叉树"></a> 满二叉树</h4>
<p><strong>满二叉树：</strong> 如果一棵二叉树只有<strong>度</strong> (简单理解为孩子节点个数)为0的结点和度为2的结点，并且度为0的结点在同一层上，则这棵二叉树为满二叉树。</p>
<p>如图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/20200806185805576.png" width="600"> </p>
<p>这棵二叉树为满二叉树，也可以说<strong>深度</strong> (就是有几层)为k，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个节点的二叉树，比如本图，4层，那么4层的满二叉树就有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>4</mn></msup><mo>−</mo><mn>1</mn><mo>=</mo><mn>15</mn></mrow><annotation encoding="application/x-tex">2^4 - 1 = 15</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span></span></span></span>个节点</p>
<h4 id="完全二叉树"><a class="markdownIt-Anchor" href="#完全二叉树"></a> 完全二叉树</h4>
<blockquote>
<p>在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mtext>&nbsp;&nbsp;</mtext><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>h</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1~&nbsp;2^(h-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace nobreak">&nbsp;</span><span class="mord">&nbsp;</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> &nbsp;个节点。</p>
</blockquote>
<p><strong>优先级队列其实是一个堆，而堆就是一棵完全二叉树，同时保证父子节点的顺序关系。</strong></p>
<h4 id="二叉搜索树"><a class="markdownIt-Anchor" href="#二叉搜索树"></a> 二叉搜索树</h4>
<p>二叉搜索树是有数值的树，<strong>二叉搜索树是一个有序树</strong>，它有一下几条性质：</p>
<ul>
<li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值</li>
<li>若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值</li>
<li>它的左、右子树也分别为二叉排序树</li>
</ul>
<p>eg：<br>
<img src="https://img-blog.csdnimg.cn/20200806190304693.png" width="600"> </p>
<h4 id="平衡二叉搜索树"><a class="markdownIt-Anchor" href="#平衡二叉搜索树"></a> 平衡二叉搜索树</h4>
<blockquote>
<p>平衡二叉搜索树：又被称为AVL（Adelson-Velsky and&nbsp;Landis）树，且具有以下性质：</p>
<blockquote>
<p>它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。(递归定义)</p>
</blockquote>
</blockquote>
<p>如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20200806190511967.png" width="600"> </p>
<p>最后一棵 不是平衡二叉树，因为它的左右两个子树的高度差的绝对值超过了1。</p>
<p><strong>C++中map、set、multimap，multiset的底层实现都是平衡二叉搜索树</strong>，所以map、set的增删操作时间时间复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">log n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>，而unordered_map、unordered_set，unordered_map、unordered_map底层实现是哈希表。</p>
<h3 id="二叉树的存储方式"><a class="markdownIt-Anchor" href="#二叉树的存储方式"></a> 二叉树的存储方式</h3>
<blockquote>
<p>二叉树可以链式存储，也可以顺序存储</p>
</blockquote>
<p>链式存储用指针， 顺序存储用数组。</p>
<p>顾名思义就是顺序存储的元素在内存是连续分布的，而链式存储则是通过指针把分布在散落在各个地址的节点串联一起。</p>
<p>链式存储如图：</p>
<p><img src="https://img-blog.csdnimg.cn/2020092019554618.png" width="600"> </p>
<p>顺序存储呢其实就是用数组来存储二叉树，顺序存储的方式如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20200920200429452.png" width="600"> </p>
<p>用数组来存储二叉树如何遍历的呢？</p>
<p><strong>如果父节点的数组下标是 i，那么它的左孩子就是 i * 2 + 1，右孩子就是 i * 2 + 2。</strong></p>
<p>但是用链式表示的二叉树，更有利于理解，所以一般都是用链式存储二叉树。</p>
<p><strong>所以大家要了解，用数组依然可以表示二叉树。</strong></p>
<h3 id="二叉树的遍历方式"><a class="markdownIt-Anchor" href="#二叉树的遍历方式"></a> 二叉树的遍历方式</h3>
<p>二叉树主要有两种遍历方式：</p>
<ol>
<li>深度优先遍历：先往深走，遇到叶子节点再往回走。</li>
<li>广度优先遍历(层级遍历)：一层一层的去遍历。</li>
</ol>
<p><strong>这两种遍历是图论中最基本的两种遍历方式</strong><br>
那么从深度优先遍历和广度优先遍历进一步拓展，才有如下遍历方式：</p>
<ul>
<li>深度优先遍历
<ul>
<li>前序遍历（递归法，迭代法）</li>
<li>中序遍历（递归法，迭代法）</li>
<li>后序遍历（递归法，迭代法）</li>
</ul>
</li>
<li>广度优先遍历
<ul>
<li>层次遍历（迭代法）</li>
</ul>
</li>
</ul>
<p><strong>这里前中后，其实指的就是中间节点的遍历顺序</strong>，只要记住 前中后序指的就是中间节点的位置就可以了。</p>
<p>看如下中间节点的顺序，就可以发现，中间节点的顺序就是所谓的遍历方式</p>
<ul>
<li>前序遍历：中左右</li>
<li>中序遍历：左中右</li>
<li>后序遍历：左右中</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200806191109896.png" width="600"> </p>
<p><strong>栈其实就是递归的一种实现结构</strong>，也就说前中后序遍历的逻辑其实都是可以借助栈使用非递归的方式来实现的。</p>
<p>而广度优先遍历的实现一般使用队列来实现，这也是队列先进先出的特点所决定的，因为需要先进先出的结构，才能一层一层的来遍历二叉树。</p>
<h3 id="二叉树的代码实现"><a class="markdownIt-Anchor" href="#二叉树的代码实现"></a> 二叉树的代码实现</h3>
<p>C++代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">TreeNode</span> {
    <span class="hljs-type">int</span> val;
    TreeNode *left;
    TreeNode *right;
    <span class="hljs-built_in">TreeNode</span>(<span class="hljs-type">int</span> x) : <span class="hljs-built_in">val</span>(x), <span class="hljs-built_in">left</span>(<span class="hljs-literal">NULL</span>), <span class="hljs-built_in">right</span>(<span class="hljs-literal">NULL</span>) {}
};
</code></pre>
<p>相对于链表 ，二叉树的节点里多了一个指针， 有两个指针，指向左右孩子。</p>
<h3 id="递归和迭代"><a class="markdownIt-Anchor" href="#递归和迭代"></a> 递归和迭代</h3>
<blockquote>
<p>在讲二叉树的遍历方式前，首先要搞明白递归和遍历的区别</p>
</blockquote>
<p><strong>递归（recursion）：</strong> 递归常被用来描述以自相似方法重复事物的过程，在数学和计算机科学中，指的是在函数定义中使用函数自身的方法。（A调用A）</p>
<p><strong>迭代（iteration）：</strong> 重复反馈过程的活动，每一次迭代的结果会作为下一次迭代的初始值。（A重复调用B）</p>
<p>递归是一个树结构，从字面可以其理解为重复“递推”和“回归”的过程，当“递推”到达底部时就会开始“回归”，其过程相当于树的深度优先遍历。</p>
<p>迭代是一个环结构，从初始状态开始，每次迭代都遍历这个环，并更新状态，多次迭代直到到达结束状态。</p>
<p>理论上递归和迭代时间复杂度方面是一样的，但实际应用中（函数调用和函数调用堆栈的开销）递归比迭代效率要低。<br>
<img src="https://s2.loli.net/2022/06/20/1waD7EyU86soVMn.png" alt="20220620201425"></p>
<h3 id="二叉树的递归遍历递归非常重要"><a class="markdownIt-Anchor" href="#二叉树的递归遍历递归非常重要"></a> 二叉树的递归遍历(递归非常重要！！！)</h3>
<blockquote>
<p>一看就会，一写就废！</p>
</blockquote>
<p>首先要知道递归算法的三个要素：</p>
<ol>
<li>
<p><strong>确定递归函数的参数和返回值：</strong><br>
确定哪些参数是递归的过程中需要处理的，那么就在递归函数里加上这个参数， 并且还要明确每次递归的返回值是什么进而确定递归函数的返回类型。</p>
</li>
<li>
<p><strong>确定终止条件：</strong><br>
写完了递归算法,  运行的时候，经常会遇到栈溢出的错误，就是没写终止条件或者终止条件写的不对，操作系统也是用一个栈的结构来保存每一层递归的信息，如果递归没有终止，操作系统的内存栈必然就会溢出。</p>
</li>
<li>
<p><strong>确定单层递归的逻辑：</strong><br>
确定每一层递归需要处理的信息。在这里也就会重复调用自己来实现递归的过程。</p>
</li>
</ol>
<p><strong>以下以前序遍历为例：</strong></p>
<ol>
<li>
<p><strong>确定递归函数的参数和返回值</strong>：因为要打印出前序遍历节点的数值，所以参数里需要传入vector在放节点的数值，除了这一点就不需要在处理什么数据了也不需要有返回值，所以递归函数返回类型就是void，代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">traversal</span><span class="hljs-params">(TreeNode* cur, vector&lt;<span class="hljs-type">int</span>&gt;&amp; vec)</span>
</span></code></pre>
</li>
<li>
<p><strong>确定终止条件</strong>：在递归的过程中，如何算是递归结束了呢，当然是当前遍历的节点是空了，那么本层递归就要要结束了，所以如果当前遍历的这个节点是空，就直接return，代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">if</span> (cur == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span>;
</code></pre>
</li>
<li>
<p><strong>确定单层递归的逻辑</strong>：前序遍历是中左右的循序，所以在单层递归的逻辑，是要先取中节点的数值，代码如下：</p>
<pre class="highlight"><code class="cpp">vec.<span class="hljs-built_in">push_back</span>(cur-&gt;val);    <span class="hljs-comment">// 中</span>
<span class="hljs-built_in">traversal</span>(cur-&gt;left, vec);  <span class="hljs-comment">// 左</span>
<span class="hljs-built_in">traversal</span>(cur-&gt;right, vec); <span class="hljs-comment">// 右</span>
</code></pre>
</li>
</ol>
<p>单层递归的逻辑就是按照中左右的顺序来处理的，代码如下：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">traversal</span><span class="hljs-params">(TreeNode* cur, vector&lt;<span class="hljs-type">int</span>&gt;&amp; vec)</span> </span>{
        <span class="hljs-keyword">if</span> (cur == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span>;
        vec.<span class="hljs-built_in">push_back</span>(cur-&gt;val);    <span class="hljs-comment">// 中</span>
        <span class="hljs-built_in">traversal</span>(cur-&gt;left, vec);  <span class="hljs-comment">// 左</span>
        <span class="hljs-built_in">traversal</span>(cur-&gt;right, vec); <span class="hljs-comment">// 右</span>
    }
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">preorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        <span class="hljs-built_in">traversal</span>(root, result);
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<p>中序和后序代码如下：</p>
<p>中序遍历：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">traversal</span><span class="hljs-params">(TreeNode* cur, vector&lt;<span class="hljs-type">int</span>&gt;&amp; vec)</span> </span>{
    <span class="hljs-keyword">if</span> (cur == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span>;
    <span class="hljs-built_in">traversal</span>(cur-&gt;left, vec);  <span class="hljs-comment">// 左</span>
    vec.<span class="hljs-built_in">push_back</span>(cur-&gt;val);    <span class="hljs-comment">// 中</span>
    <span class="hljs-built_in">traversal</span>(cur-&gt;right, vec); <span class="hljs-comment">// 右</span>
}
</code></pre>
<p>后序遍历：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">traversal</span><span class="hljs-params">(TreeNode* cur, vector&lt;<span class="hljs-type">int</span>&gt;&amp; vec)</span> </span>{
    <span class="hljs-keyword">if</span> (cur == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span>;
    <span class="hljs-built_in">traversal</span>(cur-&gt;left, vec);  <span class="hljs-comment">// 左</span>
    <span class="hljs-built_in">traversal</span>(cur-&gt;right, vec); <span class="hljs-comment">// 右</span>
    vec.<span class="hljs-built_in">push_back</span>(cur-&gt;val);    <span class="hljs-comment">// 中</span>
}
</code></pre>
<h3 id="二叉树的迭代遍历"><a class="markdownIt-Anchor" href="#二叉树的迭代遍历"></a> 二叉树的迭代遍历</h3>
<blockquote>
<p>听说还可以用非递归的方式</p>
</blockquote>
<p><strong>递归的实现就是：每一次递归调用都会把函数的局部变量、参数值和返回地址等压入调用栈中</strong>，然后递归返回的时候，从栈顶弹出上一次递归的各项参数，所以这就是递归为什么可以返回上一层位置的原因。</p>
<h4 id="前序遍历迭代法"><a class="markdownIt-Anchor" href="#前序遍历迭代法"></a> 前序遍历（迭代法）</h4>
<p>前序遍历是中左右，每次先处理的是中间节点，那么先将根节点放入栈中，然后将右孩子加入栈，再加入左孩子。</p>
<p>为什么要先加入 右孩子，再加入左孩子呢？ 因为这样出栈的时候才是中左右的顺序。</p>
<p>动画如下：</p>
<p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnbmss7603g30eq0d4b2a.gif" alt="二叉树前序遍历（迭代法）"></p>
<p>不难写出如下代码: （<strong>注意代码中空节点不入栈</strong>）</p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">preorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        stack&lt;TreeNode*&gt; st;
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        <span class="hljs-keyword">if</span> (root == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span> result;
        st.<span class="hljs-built_in">push</span>(root);
        <span class="hljs-keyword">while</span> (!st.<span class="hljs-built_in">empty</span>()) {
            TreeNode* node = st.<span class="hljs-built_in">top</span>();                       <span class="hljs-comment">// 中</span>
            st.<span class="hljs-built_in">pop</span>();
            result.<span class="hljs-built_in">push_back</span>(node-&gt;val);
            <span class="hljs-keyword">if</span> (node-&gt;right) st.<span class="hljs-built_in">push</span>(node-&gt;right);           <span class="hljs-comment">// 右（空节点不入栈）</span>
            <span class="hljs-keyword">if</span> (node-&gt;left) st.<span class="hljs-built_in">push</span>(node-&gt;left);             <span class="hljs-comment">// 左（空节点不入栈）</span>
        }
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<h4 id="中序遍历迭代法"><a class="markdownIt-Anchor" href="#中序遍历迭代法"></a> 中序遍历（迭代法）</h4>
<blockquote>
<p>注意：中序遍历不能像递归那样微调前序遍历的代码</p>
</blockquote>
<p>在迭代的过程中，有两个操作：</p>
<ol>
<li><strong>处理：将元素放进result数组中</strong></li>
<li><strong>访问：遍历节点</strong></li>
</ol>
<p>分析一下为什么刚刚写的前序遍历的代码，不能和中序遍历通用呢，因为前序遍历的顺序是中左右，先访问的元素是中间节点，要处理的元素也是中间节点，所以刚刚才能写出相对简洁的代码，<strong>因为要访问的元素和要处理的元素顺序是一致的，都是中间节点。</strong></p>
<p>那么再看看中序遍历，中序遍历是左中右，先访问的是二叉树顶部的节点，然后一层一层向下访问，直到到达树左面的最底部，再开始处理节点（也就是在把节点的数值放进result数组中），这就造成了<strong>处理顺序和访问顺序是不一致的。</strong></p>
<p>那么<strong>在使用迭代法写中序遍历，我们就可以添加一个栈用来存放左孩子节点，就需要借用指针的遍历来帮助访问节点，栈则用来处理节点上的元素。</strong></p>
<p>动画如下：</p>
<p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnbmuj244bg30eq0d4kjm.gif" alt="二叉树中序遍历（迭代法）"></p>
<p><strong>中序遍历，可以写出如下代码：</strong></p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">inorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        stack&lt;TreeNode*&gt; st;
        TreeNode* cur = root;
        <span class="hljs-keyword">while</span> (cur != <span class="hljs-literal">NULL</span> || !st.<span class="hljs-built_in">empty</span>()) {
            <span class="hljs-keyword">if</span> (cur != <span class="hljs-literal">NULL</span>) { <span class="hljs-comment">// 指针来访问节点，访问到最底层</span>
                st.<span class="hljs-built_in">push</span>(cur); <span class="hljs-comment">// 将访问的节点放进栈</span>
                cur = cur-&gt;left;                <span class="hljs-comment">// 左</span>
            } <span class="hljs-keyword">else</span> {
                cur = st.<span class="hljs-built_in">top</span>(); <span class="hljs-comment">// 从栈里弹出的数据，就是要处理的数据（放进result数组里的数据）</span>
                st.<span class="hljs-built_in">pop</span>();
                result.<span class="hljs-built_in">push_back</span>(cur-&gt;val);     <span class="hljs-comment">// 中</span>
                cur = cur-&gt;right;               <span class="hljs-comment">// 右</span>
            }
        }
        <span class="hljs-keyword">return</span> result;
    }
};

</code></pre>
<h4 id="后序遍历迭代法"><a class="markdownIt-Anchor" href="#后序遍历迭代法"></a> 后序遍历（迭代法）</h4>
<blockquote>
<p>数组部分更改前后顺序，要考虑向更改局部，然后整体反转这种思路能不能行的通</p>
</blockquote>
<p>再来看后序遍历，先序遍历是中左右，后续遍历是左右中，那么我们只需要调整一下先序遍历的代码顺序，就变成中右左的遍历顺序，然后在反转result数组，输出的结果顺序就是左右中了，如下图：</p>
<p><img src="https://img-blog.csdnimg.cn/20200808200338924.png" alt="前序到后序"></p>
<p><strong>所以后序遍历只需要前序遍历的代码稍作修改就可以了，代码如下：</strong></p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">postorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        stack&lt;TreeNode*&gt; st;
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        <span class="hljs-keyword">if</span> (root == <span class="hljs-literal">NULL</span>) <span class="hljs-keyword">return</span> result;
        st.<span class="hljs-built_in">push</span>(root);
        <span class="hljs-keyword">while</span> (!st.<span class="hljs-built_in">empty</span>()) {
            TreeNode* node = st.<span class="hljs-built_in">top</span>();
            st.<span class="hljs-built_in">pop</span>();
            result.<span class="hljs-built_in">push_back</span>(node-&gt;val);
            <span class="hljs-keyword">if</span> (node-&gt;left) st.<span class="hljs-built_in">push</span>(node-&gt;left); <span class="hljs-comment">// 相对于前序遍历，这更改一下入栈顺序 （空节点不入栈）</span>
            <span class="hljs-keyword">if</span> (node-&gt;right) st.<span class="hljs-built_in">push</span>(node-&gt;right); <span class="hljs-comment">// 空节点不入栈</span>
        }
        <span class="hljs-built_in">reverse</span>(result.<span class="hljs-built_in">begin</span>(), result.<span class="hljs-built_in">end</span>()); <span class="hljs-comment">// 将结果反转之后就是左右中的顺序了</span>
        <span class="hljs-keyword">return</span> result;
    }
};

</code></pre>
<h3 id="二叉树的统一迭代法"><a class="markdownIt-Anchor" href="#二叉树的统一迭代法"></a> 二叉树的统一迭代法</h3>
<h4 id="中序遍历代码如下详细注释"><a class="markdownIt-Anchor" href="#中序遍历代码如下详细注释"></a> 中序遍历代码如下：（详细注释）</h4>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">inorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        stack&lt;TreeNode*&gt; st;
        <span class="hljs-keyword">if</span> (root != <span class="hljs-literal">NULL</span>) st.<span class="hljs-built_in">push</span>(root);
        <span class="hljs-keyword">while</span> (!st.<span class="hljs-built_in">empty</span>()) {
            TreeNode* node = st.<span class="hljs-built_in">top</span>();
            <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">NULL</span>) {
                st.<span class="hljs-built_in">pop</span>(); <span class="hljs-comment">// 将该节点弹出，避免重复操作，下面再将右中左节点添加到栈中</span>
                <span class="hljs-keyword">if</span> (node-&gt;right) st.<span class="hljs-built_in">push</span>(node-&gt;right);  <span class="hljs-comment">// 添加右节点（空节点不入栈）</span>

                st.<span class="hljs-built_in">push</span>(node);                          <span class="hljs-comment">// 添加中节点</span>
                st.<span class="hljs-built_in">push</span>(<span class="hljs-literal">NULL</span>); <span class="hljs-comment">// 中节点访问过，但是还没有处理，加入空节点做为标记。</span>

                <span class="hljs-keyword">if</span> (node-&gt;left) st.<span class="hljs-built_in">push</span>(node-&gt;left);    <span class="hljs-comment">// 添加左节点（空节点不入栈）</span>
            } <span class="hljs-keyword">else</span> { <span class="hljs-comment">// 只有遇到空节点的时候，才将下一个节点放进结果集</span>
                st.<span class="hljs-built_in">pop</span>();           <span class="hljs-comment">// 将空节点弹出</span>
                node = st.<span class="hljs-built_in">top</span>();    <span class="hljs-comment">// 重新取出栈中元素</span>
                st.<span class="hljs-built_in">pop</span>();
                result.<span class="hljs-built_in">push_back</span>(node-&gt;val); <span class="hljs-comment">// 加入到结果集</span>
            }
        }
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<p>同理，前序和后续只需要微调一下加入栈的顺序就可以了，我们利用根节点先把所有节点按照我们需要的遍历方法存储到栈里面，然后把需要特定顺序遍历的节点用NULL节点标记，即可实现迭代的统一写法。</p>
<h4 id="迭代法前序遍历"><a class="markdownIt-Anchor" href="#迭代法前序遍历"></a> 迭代法前序遍历</h4>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">preorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        stack&lt;TreeNode*&gt; st;
        <span class="hljs-keyword">if</span> (root != <span class="hljs-literal">NULL</span>) st.<span class="hljs-built_in">push</span>(root);
        <span class="hljs-keyword">while</span> (!st.<span class="hljs-built_in">empty</span>()) {
            TreeNode* node = st.<span class="hljs-built_in">top</span>();
            <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">NULL</span>) {
                st.<span class="hljs-built_in">pop</span>();
                <span class="hljs-keyword">if</span> (node-&gt;right) st.<span class="hljs-built_in">push</span>(node-&gt;right);  <span class="hljs-comment">// 右</span>
                <span class="hljs-keyword">if</span> (node-&gt;left) st.<span class="hljs-built_in">push</span>(node-&gt;left);    <span class="hljs-comment">// 左</span>
                st.<span class="hljs-built_in">push</span>(node);                          <span class="hljs-comment">// 中</span>
                st.<span class="hljs-built_in">push</span>(<span class="hljs-literal">NULL</span>);
            } <span class="hljs-keyword">else</span> {
                st.<span class="hljs-built_in">pop</span>();
                node = st.<span class="hljs-built_in">top</span>();
                st.<span class="hljs-built_in">pop</span>();
                result.<span class="hljs-built_in">push_back</span>(node-&gt;val);
            }
        }
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<h4 id="迭代法后序遍历"><a class="markdownIt-Anchor" href="#迭代法后序遍历"></a> 迭代法后序遍历</h4>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">postorderTraversal</span><span class="hljs-params">(TreeNode* root)</span> </span>{
        vector&lt;<span class="hljs-type">int</span>&gt; result;
        stack&lt;TreeNode*&gt; st;
        <span class="hljs-keyword">if</span> (root != <span class="hljs-literal">NULL</span>) st.<span class="hljs-built_in">push</span>(root);
        <span class="hljs-keyword">while</span> (!st.<span class="hljs-built_in">empty</span>()) {
            TreeNode* node = st.<span class="hljs-built_in">top</span>();
            <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">NULL</span>) {
                st.<span class="hljs-built_in">pop</span>();
                st.<span class="hljs-built_in">push</span>(node);                          <span class="hljs-comment">// 中</span>
                st.<span class="hljs-built_in">push</span>(<span class="hljs-literal">NULL</span>);

                <span class="hljs-keyword">if</span> (node-&gt;right) st.<span class="hljs-built_in">push</span>(node-&gt;right);  <span class="hljs-comment">// 右</span>
                <span class="hljs-keyword">if</span> (node-&gt;left) st.<span class="hljs-built_in">push</span>(node-&gt;left);    <span class="hljs-comment">// 左</span>

            } <span class="hljs-keyword">else</span> {
                st.<span class="hljs-built_in">pop</span>();
                node = st.<span class="hljs-built_in">top</span>();
                st.<span class="hljs-built_in">pop</span>();
                result.<span class="hljs-built_in">push_back</span>(node-&gt;val);
            }
        }
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<h3 id="二叉树的层序遍历"><a class="markdownIt-Anchor" href="#二叉树的层序遍历"></a> 二叉树的层序遍历</h3>
<p>层序遍历一个二叉树。就是从左到右一层一层的去遍历二叉树。</p>
<p>需要借用一个辅助数据结构即队列来实现，队列先进先出，符合一层一层遍历的逻辑。</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">levelOrder</span>(TreeNode* root) {
        queue&lt;TreeNode*&gt; que;
        <span class="hljs-keyword">if</span> (root != <span class="hljs-literal">NULL</span>) que.<span class="hljs-built_in">push</span>(root);
        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; result;
        <span class="hljs-keyword">while</span> (!que.<span class="hljs-built_in">empty</span>()) {
            <span class="hljs-type">int</span> size = que.<span class="hljs-built_in">size</span>();
            vector&lt;<span class="hljs-type">int</span>&gt; tmp;
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) {
                TreeNode* node = que.<span class="hljs-built_in">front</span>();
                que.<span class="hljs-built_in">pop</span>();
                tmp.<span class="hljs-built_in">push_back</span>(node-&gt;val);
                <span class="hljs-keyword">if</span> (node-&gt;left) que.<span class="hljs-built_in">push</span>(node-&gt;left);
                <span class="hljs-keyword">if</span> (node-&gt;right) que.<span class="hljs-built_in">push</span>(node-&gt;right);
            }
            result.<span class="hljs-built_in">push_back</span>(tmp);
        }
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-双指针大法</title>
    <url>/blog/2022/06c54e8d28.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<p>双指针法非常实用，但是他并不隶属于任何一种数据结构。</p>
<p>双指针法在数组原地反转，双重循环降低时间复杂度一般都有很好的效果。</p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-动态规划</title>
    <url>/blog/2022/0826e7783f.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<blockquote>
<p>动态规划，英文：Dynamic Programming，简称DP，如果某一问题有很多重叠子问题，使用动态规划是最有效的。<br>
所以动态规划中每一个状态一定是由上一个状态推导出来的，这一点就区分于贪心，贪心没有状态推导，而是从局部直接选最优的</p>
</blockquote>
<h2 id="动规的五部曲"><a class="markdownIt-Anchor" href="#动规的五部曲"></a> 动规的五部曲</h2>
<ol>
<li>确定dp数组（dp table）以及下标的含义</li>
<li>确定递推公式</li>
<li>dp数组如何初始化</li>
<li>确定遍历顺序</li>
<li>举例推导dp数组</li>
</ol>
<p><strong>如果代码写出来了，一直AC不了，灵魂三问：</strong></p>
<ol>
<li>这道题目我举例推导状态转移公式了么？</li>
<li>我打印dp数组的日志了么？</li>
<li>打印出来了dp数组和我想的一样么？</li>
</ol>
<p>首先要明白dp数组的含义是什么，下表代表什么，确定了这个之后按照套路走就行，手动推导dp数组本质上也是一种检验的过程，当打印出结果符合预期手动推导结果时，基本就没太大问题</p>
<h2 id="202289"><a class="markdownIt-Anchor" href="#202289"></a> 2022.8.9</h2>
<p>动态规划的习题我认为最重要的就是要确定dp数组的定义，下标代表什么，该如何初始化，举个例子：</p>
<p><a href="https://leetcode-cn.com/problems/integer-break/">LeetCode304：整数拆分</a></p>
<blockquote>
<p>给定一个正整数&nbsp;n，将其拆分为至少两个正整数的和，并使这些整数的乘积最大化。 返回你可以获得的最大乘积。</p>
<p>示例 1:</p>
<ul>
<li>输入: 2</li>
<li>输出: 1</li>
<li>解释: 2 = 1 + 1, 1 × 1 = 1。</li>
</ul>
<p>示例&nbsp;2:</p>
<ul>
<li>
<p>输入: 10</p>
</li>
<li>
<p>输出: 36</p>
</li>
<li>
<p>解释: 10 = 3 + 3 + 4, 3 ×&nbsp;3 ×&nbsp;4 = 36。</p>
</li>
<li>
<p>说明: 你可以假设&nbsp;n&nbsp;不小于 2 且不大于 58。</p>
</li>
</ul>
</blockquote>
<p>这道题在我的做法中dp数组表示的是i这个数字的最大拆分乘积，初始化<code>dp[2] = 1</code>,这是易知的，而在一些题解中就把dp[0]和dp[1]也进行了初始化，这么做当然也可以AC，但是dp数组的意义已经模糊了，暂不谈题目限制`$$2 \le n \ge 58$$,就按照题目说明，0和1就不能拆分为两个正整数的和，更不用谈乘积，虽然这么初始化问题也不大，但是我感觉要透过题去理解，要明白dp数组的含义，下标表示了什么更为重要，下面是本题C++代码：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">integerBreak</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>{
        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(n + <span class="hljs-number">1</span>)</span></span>;
        dp[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">3</span>; i &lt;= n ; i++) {
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt; i - <span class="hljs-number">1</span>; j++) {
                dp[i] = <span class="hljs-built_in">max</span>(dp[i], <span class="hljs-built_in">max</span>((i - j) * j, dp[i - j] * j));
            }
        }
        <span class="hljs-keyword">return</span> dp[n];
    }
};
</code></pre>
<ul>
<li>时间复杂度：O(n^2)</li>
<li>空间复杂度：O(n)</li>
</ul>
<h2 id="背包问题20220810"><a class="markdownIt-Anchor" href="#背包问题20220810"></a> 背包问题2022.08.10</h2>
<blockquote>
<p>转载自<a href="https://programmercarl.com/">代码随想录</a>，侵删</p>
</blockquote>
<p>建议按照如下顺序观看：<br>
<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
<h2 id="01背包和完全背包20220813"><a class="markdownIt-Anchor" href="#01背包和完全背包20220813"></a> 01背包和完全背包2022.08.13</h2>
<blockquote>
<p>背包问题大概描述是：有一个承重m的背包，旁边有一堆物品共n个，每个物品重量不一，价值不易，weight[i]和value[i]分别代表第i个物品的重量和价值，求背包最多能装下物品的价值</p>
<blockquote>
<p>01背包是说每个物品只有一个，怎么装价值最大<br>
完全背包是说每种物品有无限多个，怎么装价值最大，比如一辆卡车去进货，每种货占的空间不同，价值也不同，但是每种货数量是不限制的，怎么装，一卡车货价值最大</p>
</blockquote>
</blockquote>
<h3 id="01背包-二维-先物品后背包"><a class="markdownIt-Anchor" href="#01背包-二维-先物品后背包"></a> 01背包-二维-先物品后背包</h3>
<p>采用二维数组遍历必然要考虑遍历顺序，是先遍历背包，还是先遍历物品，不妨设先遍历物品，那么循环内层遍历的就是背包了</p>
<p>当对于num[i]，无非两种情况:</p>
<ol>
<li>背包可以装的下，继续装那么价值就是<code>dp[i - 1][j - weight[i]] + value[i]</code>,表示未装<code>num[i]</code>物品前，背包最大容量必然是<code>j - weight[i]</code>（因为还要装第<code>i</code>件物品，所以预留出<code>weight[i]</code>的空间，剩下的空间可以装的最大值就是<code>dp[i - 1][j - weight[i]]</code>）</li>
<li>装不下，背包里面物品价值还是不变，就是<code>dp[i - 1][j]</code></li>
</ol>
<p>那么二者取最大值，就是i件物品容量为j的背包可以装的物品最大价值，依次递推即可</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num[i]; i++) {
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = weight[i]; j &lt;= target; j++) { <span class="hljs-comment">//j从weight[i]开始，是因为小于weight[i]的背包根本装不下第i件物品，所以一定都是dp[i - 1][j]</span>
        dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]);
    }
}
</code></pre>
<h3 id="01背包-二维-先背包后物品"><a class="markdownIt-Anchor" href="#01背包-二维-先背包后物品"></a> 01背包-二维-先背包后物品</h3>
<p>转变一下遍历顺序二维时是完全可以的，观察上述递归公式可以发现，dp[i][j]完全是由上一行的值和weight数组和value数组决定的，而后面两个是已知的，所以不管按照什么顺序遍历，dp[i][j]仅由其左上位置数值决定，所以遍历顺序怎么样都可以，下面给出先遍历背包，后遍历物品的代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= target; j++) {
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++) {
        <span class="hljs-keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="hljs-number">1</span>][j]; <span class="hljs-comment">//装不下</span>
        <span class="hljs-keyword">else</span> dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]); <span class="hljs-comment">//装得下</span>
    }
}
</code></pre>
<h3 id="01背包-一维"><a class="markdownIt-Anchor" href="#01背包-一维"></a> 01背包-一维</h3>
<p>前面也已经说明过了，dp[i][j]只依赖上一行的数值，所以我们可以将dp数组降为一维，节约空间，但是要注意，二维的时候我们依赖的是上一行（i - 1行）的值，降为一维后，当不做任何变化时，当前数值就是上一行数值，但是如果j还是从前往后遍历，那么当为j时，从0 ~ （j - 1）的数值已经变为新值了，不再是上一行的值，所以不能从前往后遍历，而当我们从后往前遍历则是可以的，原因也很简单，前面说过，dp[i][j]只依赖左上方的值，当降为一维数组之后，就是只依赖左方的值，而我们从后往前遍历，左方的值一直都未变化，当然是可以的，代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
        dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
    }
}
</code></pre>
<p>顺序在这里也很重要，一定要是先物品后背包容量，反之则不行</p>
<p>观察二维时候的递推公式</p>
<pre class="highlight"><code class="c++">dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]);
</code></pre>
<p>dp[i][j]依赖的是上一行，不是上一列，是<code>j - weight[i]</code>列，所以滚动数组完全不可行</p>
<h3 id="完全背包"><a class="markdownIt-Anchor" href="#完全背包"></a> 完全背包</h3>
<p>完全背包相比01背包就是物品可以用无数次，仅仅在01背包的基础上略微修改即可，从前往后遍历即可</p>
<p>上文知道，01背包从后往前遍历是为了保证每个物品仅仅使用一次，而完全背包可以用无数次，从前往后即可，代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-comment">// 先遍历物品，再遍历背包</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = weight[i]; j &lt;= bagWeight ; j++) { <span class="hljs-comment">// 遍历背包容量</span>
        dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);

    }
}

<span class="hljs-comment">// 先遍历背包，再遍历物品</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagWeight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">if</span> (j - weight[i] &gt;= <span class="hljs-number">0</span>) dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
    }
    cout &lt;&lt; endl;
}
</code></pre>
<p>至于遍历顺序，则同01背包</p>
<h3 id="关于排列和组合"><a class="markdownIt-Anchor" href="#关于排列和组合"></a> 关于排列和组合</h3>
<p>完全背包往往会涉及到排列和组合的问题</p>
<p>就比如这个<a href="https://leetcode.cn/problems/combination-sum-iv/">组合总数Ⅳ</a>,求数字总和为target</p>
<p>这道题目要求数字顺序不一样也是一种组合，其本质上就是排列问题，那么使用循环遍历时就需要注意遍历顺序了</p>
<p>先物品后背包肯定是行不通的，因为物品只能按顺序出现，比如说{1， 3}，不可能出现{3，1}，因为物品是在外侧循环，只能按照数组顺序出现，所以说不能使用先物品后背包的方式，而要用先背包后物品才可以</p>
<p>一句话总结就是先物品后背包是<strong>组合</strong> ， 先背包后物品是<strong>排列</strong></p>
<h3 id="多重背包"><a class="markdownIt-Anchor" href="#多重背包"></a> 多重背包</h3>
<p>多重背包其实跟01背包如出一辙，只是原本数量为1的物品现在数量不再一定为1了，而是由一个数量数组nums记录每件物品的数量有多少，针对多重背包，有以下两种解决方法：</p>
<ol>
<li>把多重背包拆分为01背包，把同一种物品拆分为一个一个的，问题就简化为了01背包，按照01背包的解决方法即可</li>
<li>在双重遍历的时候内嵌一个for循环，遍历这个物品对应的数量即可，本质上还是把同一个物品拆分为了一个一个的</li>
</ol>
<h3 id="背包总结"><a class="markdownIt-Anchor" href="#背包总结"></a> 背包总结</h3>
<p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%981.jpeg" alt=""></p>
<p>图源代码随想录知识星球 (opens new window)成员：<a href="https://wx.zsxq.com/dweb2/index/footprint/844412858822412">海螺人</a></p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-哈希表</title>
    <url>/blog/2022/064cfc9b66.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h2 id="哈希表"><a class="markdownIt-Anchor" href="#哈希表"></a> 哈希表</h2>
<blockquote>
<p>哈希表是根据关键码的值而直接进行访问的数据结构。<br>
一般哈希表都是用来快速判断一个元素是否出现在集合里。</p>
</blockquote>
<h3 id="哈希碰撞"><a class="markdownIt-Anchor" href="#哈希碰撞"></a> 哈希碰撞</h3>
<p>两个元素同时映射到哈希表中同一位置，这一现象叫做哈希碰撞，如下例：<br>
<img src="https://s2.loli.net/2022/06/12/8AsRHUdwTS6kpgv.png" alt="20220612173210"></p>
<p>一般处理方法有两种，拉链法和线性探测法。</p>
<h4 id="拉链法"><a class="markdownIt-Anchor" href="#拉链法"></a> 拉链法</h4>
<p><img src="https://s2.loli.net/2022/06/12/6nHRVWyIAxL9XwT.png" alt="20220612173630"><br>
其实拉链法就是要选择合适的哈希表大小，这样既不会因为数组空值而浪费大量内存，也不会因为链表太长而在查找上浪费太多时间</p>
<h4 id="线性探测法"><a class="markdownIt-Anchor" href="#线性探测法"></a> 线性探测法</h4>
<p>使用线性探测法，一定要保证tablesize大于datasize，需要依靠哈希表中的空位来解决碰撞问题。</p>
<p><img src="https://s2.loli.net/2022/06/12/2Erl7dHO8IuGxyU.png" alt="20220612174935"></p>
<h3 id="常见的三种哈希结构"><a class="markdownIt-Anchor" href="#常见的三种哈希结构"></a> 常见的三种哈希结构</h3>
<p>当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。</p>
<ul>
<li>数组</li>
<li>set （集合）</li>
<li>map(映射)</li>
</ul>
<p>在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示：<br>
<img src="https://s2.loli.net/2022/06/12/Wj8mAD2QnyKzukM.png" alt="20220612183010"></p>
<p>std::unordered_set底层实现为哈希表，std::set 和std::multiset 的底层实现是红黑树，红黑树是一种平衡二叉搜索树，所以key值是有序的，但key不可以修改，改动key值会导致整棵树的错乱，所以只能删除和增加。<br>
<img src="https://s2.loli.net/2022/06/12/IJDeZ8yNmncR3SU.png" alt="20220612183049"></p>
<p>std::unordered_map 底层实现为哈希表，std::map 和std::multimap 的底层实现是红黑树。同理，std::map 和std::multimap 的key也是有序的（这个问题也经常作为面试题，考察对语言容器底层的理解）。</p>
<p>当我们要使用集合来解决哈希问题的时候，优先使用unordered_set，因为它的查询和增删效率是最优的，如果需要集合是有序的，那么就用set，如果要求不仅有序还要有重复数据的话，那么就用multiset。</p>
<p>那么再来看一下map ，在map 是一个key value 的数据结构，map中，对key是有限制，对value没有限制的，因为key的存储方式使用红黑树实现的。</p>
<h3 id="三种数据结构的选择"><a class="markdownIt-Anchor" href="#三种数据结构的选择"></a> 三种数据结构的选择</h3>
<ol>
<li>数据量给定而且没有太大需求的可以直接选择数组。</li>
<li>数据量未知而且如果哈希值比较少、特别分散、跨度非常大，使用set，使用数组就造成空间的极大浪费</li>
<li>直接使用set 不仅占用空间比数组大，而且速度要比数组慢，set把数值映射到key上都要做hash计算的，所以可以用数组的优先选择数组</li>
<li>map是采用了key-value的方式，一般可以用来保存一一对应的键值对</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-字符串</title>
    <url>/blog/2022/063572401b.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h3 id="什么是字符串"><a class="markdownIt-Anchor" href="#什么是字符串"></a> 什么是字符串</h3>
<p>字符串是若干字符组成的有限序列，也可以理解为是一个字符数组，但是很多语言对字符串做了特殊的规定。</p>
<p>在C语言中，把一个字符串存入一个数组时，也把结束符 '\0’存入数组，并以此作为该字符串是否结束的标志。</p>
<p>例如这段代码：</p>
<pre class="highlight"><code class="C++"><span class="hljs-type">char</span> a[<span class="hljs-number">5</span>] = <span class="hljs-string">"asd"</span>;
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; a[i] != <span class="hljs-string">'\0'</span>; i++) {
}
</code></pre>
<p>在C++中，提供一个string类，string类会提供 size接口，可以用来判断string类字符串是否结束，就不用’\0’来判断是否结束。</p>
<p>例如这段代码:</p>
<pre class="highlight"><code class="C++">string a = <span class="hljs-string">"asd"</span>;
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; a.<span class="hljs-built_in">size</span>(); i++) {
}
</code></pre>
<p>那么vector&lt; char &gt; 和 string 又有什么区别呢？</p>
<p>其实在基本操作上没有区别，但是 string提供更多的字符串处理的相关接口，例如string 重载了+，而vector却没有。</p>
<p>所以想处理字符串，我们还是会定义一个string类型。</p>
<h3 id="双指针法"><a class="markdownIt-Anchor" href="#双指针法"></a> 双指针法</h3>
<p>双指针法在数组，链表和字符串中很常用。其实很多数组填充类的问题，都可以先预先给数组扩容带填充后的大小，然后在从后向前进行操作。</p>
<h3 id="kmp"><a class="markdownIt-Anchor" href="#kmp"></a> KMP</h3>
<p>KMP的主要思想是当出现字符串不匹配时，可以知道一部分之前已经匹配的文本内容，可以利用这些信息避免从头再去做匹配了。</p>
<p>KMP的精髓所在就是前缀表</p>
<p>前缀表：起始位置到下标i之前（包括i）的子串中，有多大长度的相同前缀后缀。</p>
<p>那么使用KMP可以解决两类经典问题：</p>
<ul>
<li>匹配问题：28. 实现 strStr()</li>
<li>重复子串问题：459.重复的子字符串</li>
</ul>
<p>再一次强调了什么是前缀，什么是后缀，什么又是最长相等前后缀。</p>
<p>前缀：指不包含最后一个字符的所有以第一个字符开头的连续子串。</p>
<p>后缀：指不包含第一个字符的所有以最后一个字符结尾的连续子串。</p>
<p>然后针对前缀表到底要不要减一，这其实是不同KMP实现的方式，在KMP精讲 中针对之前两个问题，分别给出了两个不同版本的的KMP实现。</p>
<p>其中主要理解j=next[x]这一步最为关键！</p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-回溯</title>
    <url>/blog/2022/079716a2d4.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h2 id="回溯法"><a class="markdownIt-Anchor" href="#回溯法"></a> 回溯法</h2>
<p>回溯法也可以叫做回溯搜索法，它是一种搜索的方式。</p>
<p>回溯是递归的副产品，只要有递归就会有回溯。</p>
<p>本质上回溯就是穷举，穷举所有可能，然后找到答案，效率上并不高，如果想让回溯法高效一些，可以加一些剪枝(回溯可以归结为对于树的节点的操作，要遍历所有节点，当遍历到一个节点时，已经不符合设定条件，那么他的子树也必定不符合我们的预设条件，他的子节点就没有必要遍历了，这也在一定程度上减少了运算量)的操作，但即便这样也改不了回溯法就是穷举的本质。</p>
<h2 id="回溯法解决的问题"><a class="markdownIt-Anchor" href="#回溯法解决的问题"></a> 回溯法解决的问题</h2>
<p>回溯法，一般可以解决如下几种问题：</p>
<ul>
<li>组合问题：N个数里面按一定规则找出k个数的集合</li>
<li>切割问题：一个字符串按一定规则有几种切割方式</li>
<li>子集问题：一个N个数的集合里有多少符合条件的子集</li>
<li>排列问题：N个数按一定规则全排列，有几种排列方式</li>
<li>棋盘问题：N皇后，解数独等等</li>
</ul>
<p>另外，关于<strong>组合和排列：</strong> 组合是不强调元素顺序的，排列是强调元素顺序</p>
<p>例如：{1, 2} 和 {2, 1} 在组合上，就是一个集合，因为不强调顺序，而要是排列的话，{1, 2} 和 {2, 1} 就是两个集合了。</p>
<h2 id="如何理解回溯法"><a class="markdownIt-Anchor" href="#如何理解回溯法"></a> 如何理解回溯法</h2>
<p><strong>回溯法解决的问题都可以抽象为树形结构</strong> 因为回溯法解决的都是在集合中递归查找子集，<strong>集合的大小就构成了树的宽度，递归的深度，都构成的树的深度</strong>。递归就要有终止条件，所以必然是一棵高度有限的树（N叉树）。</p>
<h2 id="回溯法三部曲"><a class="markdownIt-Anchor" href="#回溯法三部曲"></a> 回溯法三部曲</h2>
<ol>
<li>回溯函数模板返回值以及参数</li>
</ol>
<ul>
<li>回溯算法中函数返回值一般为void</li>
<li>参数，因为回溯算法需要的参数可不像二叉树递归的时候那么容易一次性确定下来，所以一般是先写逻辑，然后需要什么参数，就填什么参数。</li>
</ul>
<p>回溯函数伪代码如下：</p>
<pre class="highlight"><code class="Cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(参数)</span>
</span></code></pre>
<ol start="2">
<li>回溯函数终止条件</li>
</ol>
<p>什么时候达到了终止条件，树中就可以看出，一般来说搜到叶子节点了，也就找到了满足条件的一条答案，把这个答案存放起来，并结束本层递归。</p>
<p>所以回溯函数终止条件伪代码如下：</p>
<pre class="highlight"><code class="">if (终止条件) {
    存放结果;
    return;
}
</code></pre>
<ol start="3">
<li>回溯搜索的遍历过程</li>
</ol>
<p>上面提到，回溯法一般是在集合中递归搜索，集合的大小构成了树的宽度，递归的深度构成的树的深度。</p>
<p>如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20210130173631174.png" alt="回溯算法理论基础"></p>
<p>注意图中，特意举例集合大小和孩子的数量是相等的！</p>
<p>回溯函数遍历过程伪代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {
    处理节点;
    <span class="hljs-built_in">backtracking</span>(路径，选择列表); <span class="hljs-comment">// 递归</span>
    回溯，撤销处理结果
}
</code></pre>
<p>for循环就是遍历集合区间，可以理解一个节点有多少个孩子，这个for循环就执行多少次。</p>
<p>backtracking这里自己调用自己，实现递归。</p>
<p>从图中看出<strong>for循环可以理解是横向遍历，backtracking（递归）就是纵向遍历</strong>，这样就把这棵树全遍历完了，一般来说，搜索叶子节点就是找的其中一个结果了。</p>
<p>分析完过程，回溯算法模板框架如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(参数)</span> </span>{
    <span class="hljs-keyword">if</span> (终止条件) {
        存放结果;
        <span class="hljs-keyword">return</span>;
    }

    <span class="hljs-keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {
        处理节点;
        <span class="hljs-built_in">backtracking</span>(路径，选择列表); <span class="hljs-comment">// 递归</span>
        回溯，撤销处理结果
    }
}

</code></pre>
<h2 id="剪枝"><a class="markdownIt-Anchor" href="#剪枝"></a> 剪枝</h2>
<p>前面已经说过，剪枝就是减少一些遍历的节点，因此我们只需要控制递归的终止条件即可</p>
<p><a href="https://leetcode-cn.com/problems/combinations/">LeetCode题目 77. 组合</a></p>
<blockquote>
<p>给定两个整数 n 和 k，返回 1 … n 中所有可能的 k 个数的组合。<br>
示例:<br>
输入:&nbsp;n = 4, k = 2<br>
输出:<br>
[<br>
[2,4],<br>
[3,4],<br>
[2,3],<br>
[1,2],<br>
[1,3],<br>
[1,4],<br>
]</p>
</blockquote>
<p>这是未经剪枝优化的代码</p>
<pre class="highlight"><code class="c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">private</span>:
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; result; <span class="hljs-comment">// 存放符合条件结果的集合</span>
    vector&lt;<span class="hljs-type">int</span>&gt; path; <span class="hljs-comment">// 用来存放符合条件结果</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> k, <span class="hljs-type">int</span> startIndex)</span> </span>{
        <span class="hljs-keyword">if</span> (path.<span class="hljs-built_in">size</span>() == k) {
            result.<span class="hljs-built_in">push_back</span>(path);
            <span class="hljs-keyword">return</span>;
        }
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = startIndex; i &lt;= n; i++) {
            path.<span class="hljs-built_in">push_back</span>(i); <span class="hljs-comment">// 处理节点</span>
            <span class="hljs-built_in">backtracking</span>(n, k, i + <span class="hljs-number">1</span>); <span class="hljs-comment">// 递归</span>
            path.<span class="hljs-built_in">pop_back</span>(); <span class="hljs-comment">// 回溯，撤销处理的节点</span>
        }
    }
<span class="hljs-keyword">public</span>:
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">combine</span>(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> k) {
        result.<span class="hljs-built_in">clear</span>(); <span class="hljs-comment">// 可以不写</span>
        path.<span class="hljs-built_in">clear</span>();   <span class="hljs-comment">// 可以不写</span>
        <span class="hljs-built_in">backtracking</span>(n, k, <span class="hljs-number">1</span>);
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
<p>容易知道当按顺序遍历到3为第一个数字时，已经没必要遍历下去了，因为4是最后一个数字，不能凑出两个数字的组合，但是由于判定条件，4依旧会被进行计算，这样就增加了计算量</p>
<pre class="highlight"><code class="c++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = startIndex; i &lt;= n; i++) {
    path.<span class="hljs-built_in">push_back</span>(i);
    <span class="hljs-built_in">backtracking</span>(n, k, i + <span class="hljs-number">1</span>);
    path.<span class="hljs-built_in">pop_back</span>();
}
</code></pre>
<p>这样减少的计算量或许没多少，换个例子，当n = 4，k = 4时，那么第一层for循环的时候，从元素2开始的遍历都没有意义了。 在第二层for循环，从元素3开始的遍历都没有意义了。</p>
<p>本来四层for循环要经历3 + 2 + 1 + 1 = 7次计算，但是对for循环条件加以优化之后就变为了1次计算，效率大大提升，当然这个例子有点夸张，但是举这个例子目的就是说明确实可以提高效率。</p>
<p>这么说有点抽象，如图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/20210130194335207.png" alt="77.组合4"></p>
<p>图中每一个节点（图中为矩形），就代表本层的一个for循环，那么每一层的for循环从第二个数开始遍历的话，都没有意义，都是无效遍历。</p>
<p><strong>所以，可以剪枝的地方就在递归中每一层的for循环所选择的起始位置</strong>。</p>
<p><strong>如果for循环选择的起始位置之后的元素个数 已经不足 我们需要的元素个数了，那么就没有必要搜索了</strong>。</p>
<p>注意代码中i，就是for循环里选择的起始位置。</p>
<pre class="highlight"><code class="c++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = startIndex; i &lt;= n; i++) {
</code></pre>
<p>接下来看一下优化过程如下：</p>
<ol>
<li>
<p>已经选择的元素个数：<code>path.size()</code>;</p>
</li>
<li>
<p>还需要的元素个数为: <code>k - path.size()</code>;</p>
</li>
<li>
<p>在集合n中至多要从该起始位置 : <code>n - (k - path.size()) + 1</code>，开始遍历,为什么有个+1呢，因为包括起始位置，我们要是一个左闭的集合。</p>
</li>
</ol>
<p>举个例子，n = 4，k = 3， 目前已经选取的元素为0（path.size为0），n - (k - 0) + 1 即 4 - ( 3 - 0) + 1 = 2。</p>
<p>从2开始搜索都是合理的，可以是组合[2, 3, 4]。</p>
<p>所以优化之后的for循环是：</p>
<pre class="highlight"><code class="c++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = startIndex; i &lt;= n - (k - path.<span class="hljs-built_in">size</span>()) + <span class="hljs-number">1</span>; i++) <span class="hljs-comment">// i为本次搜索的起始位置</span>
</code></pre>
<p>优化后整体代码如下：</p>
<pre class="highlight"><code class="c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">private</span>:
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; result;
    vector&lt;<span class="hljs-type">int</span>&gt; path;
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> k, <span class="hljs-type">int</span> startIndex)</span> </span>{
        <span class="hljs-keyword">if</span> (path.<span class="hljs-built_in">size</span>() == k) {
            result.<span class="hljs-built_in">push_back</span>(path);
            <span class="hljs-keyword">return</span>;
        }
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = startIndex; i &lt;= n - (k - path.<span class="hljs-built_in">size</span>()) + <span class="hljs-number">1</span>; i++) { <span class="hljs-comment">// 优化的地方</span>
            path.<span class="hljs-built_in">push_back</span>(i); <span class="hljs-comment">// 处理节点</span>
            <span class="hljs-built_in">backtracking</span>(n, k, i + <span class="hljs-number">1</span>);
            path.<span class="hljs-built_in">pop_back</span>(); <span class="hljs-comment">// 回溯，撤销处理的节点</span>
        }
    }
<span class="hljs-keyword">public</span>:

    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">combine</span>(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> k) {
        <span class="hljs-built_in">backtracking</span>(n, k, <span class="hljs-number">1</span>);
        <span class="hljs-keyword">return</span> result;
    }
};
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-栈和队列</title>
    <url>/blog/2022/0638ccdfc.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<blockquote>
<p>栈和队列不为人知的一面</p>
</blockquote>
<p>栈是先进后出，队列是先进先出：</p>
<p><img src="https://s2.loli.net/2022/06/16/7yBoa3h4A81kqxI.png" alt="20220616145417"></p>
<h2 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h2>
<p>栈先进后出，提供push 和 pop 等等接口，所有元素必须符合先进后出规则，所以栈不提供走访功能，也不提供迭代器(iterator)。 不像是set 或者map 提供迭代器iterator来遍历所有元素。</p>
<p>栈是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（<strong>也就是说我们可以控制使用哪种容器来实现栈的功能</strong>）。</p>
<p>所以STL中栈往往不被归类为容器，而被归类为container adapter（容器适配器）。</p>
<p>那么问题来了，STL 中栈是用什么容器实现的？</p>
<p>从下图中可以看出，栈的内部结构，栈的底层实现可以是vector，deque，list 都是可以的， 主要就是数组和链表的底层实现。<br>
<img src="https://s2.loli.net/2022/06/16/hnMFk4q2geOiDso.png" alt="
栈与队列理论3"></p>
<p>常用的SGI STL，如果没有指定底层实现的话，默认是以deque为缺省情况下栈的低层结构。</p>
<p>deque是一个双向队列，只要封住一段，只开通另一端就可以实现栈的逻辑了。</p>
<p>SGI STL中 队列底层实现缺省情况下一样使用deque实现的。</p>
<p>也可以指定vector为栈的底层实现，初始化语句如下：</p>
<pre class="highlight"><code class="C++">std::stack&lt;<span class="hljs-type">int</span>, std::vector&lt;<span class="hljs-type">int</span>&gt; &gt; third;  <span class="hljs-comment">// 使用vector为底层容器的栈</span>
</code></pre>
<p>对应的队列的情况是一样的。</p>
<p>队列中先进先出的数据结构，同样不允许有遍历行为，不提供迭代器, SGI STL中队列一样是以deque为缺省情况下的底部结构。</p>
<p>也可以指定list 为起底层实现，初始化queue的语句如下：</p>
<pre class="highlight"><code class="C++">std::queue&lt;<span class="hljs-type">int</span>, std::list&lt;<span class="hljs-type">int</span>&gt;&gt; third; <span class="hljs-comment">// 定义以list为底层容器的队列</span>
</code></pre>
<p>所以STL 队列也不被归类为容器，而被归类为container adapter（ 容器适配器）。</p>
<h2 id="用栈模拟实现队列"><a class="markdownIt-Anchor" href="#用栈模拟实现队列"></a> 用栈模拟实现队列</h2>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyQueue</span> {
<span class="hljs-keyword">public</span>:
    stack&lt;<span class="hljs-type">int</span>&gt; stIn;
    stack&lt;<span class="hljs-type">int</span>&gt; stOut;
    <span class="hljs-comment">/** Initialize your data structure here. */</span>
    <span class="hljs-built_in">MyQueue</span>() {

    }
    <span class="hljs-comment">/** Push element x to the back of queue. */</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">push</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>{
        stIn.<span class="hljs-built_in">push</span>(x);
    }

    <span class="hljs-comment">/** Removes the element from in front of queue and returns that element. */</span>
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">pop</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-comment">// 只有当stOut为空的时候，再从stIn里导入数据（导入stIn全部数据）</span>
        <span class="hljs-keyword">if</span> (stOut.<span class="hljs-built_in">empty</span>()) {
            <span class="hljs-comment">// 从stIn导入数据直到stIn为空</span>
            <span class="hljs-keyword">while</span>(!stIn.<span class="hljs-built_in">empty</span>()) {
                stOut.<span class="hljs-built_in">push</span>(stIn.<span class="hljs-built_in">top</span>());
                stIn.<span class="hljs-built_in">pop</span>();
            }
        }
        <span class="hljs-type">int</span> result = stOut.<span class="hljs-built_in">top</span>();
        stOut.<span class="hljs-built_in">pop</span>();
        <span class="hljs-keyword">return</span> result;
    }

    <span class="hljs-comment">/** Get the front element. */</span>
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">peek</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-type">int</span> res = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">pop</span>(); <span class="hljs-comment">// 直接使用已有的pop函数</span>
        stOut.<span class="hljs-built_in">push</span>(res); <span class="hljs-comment">// 因为pop函数弹出了元素res，所以再添加回去</span>
        <span class="hljs-keyword">return</span> res;
    }

    <span class="hljs-comment">/** Returns whether the queue is empty. */</span>
    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">empty</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> stIn.<span class="hljs-built_in">empty</span>() &amp;&amp; stOut.<span class="hljs-built_in">empty</span>();
    }
};
</code></pre>
<h2 id="用队列模拟实现栈"><a class="markdownIt-Anchor" href="#用队列模拟实现栈"></a> 用队列模拟实现栈</h2>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyStack</span> {
<span class="hljs-keyword">public</span>:
    queue&lt;<span class="hljs-type">int</span>&gt; que1;
    queue&lt;<span class="hljs-type">int</span>&gt; que2;

    <span class="hljs-built_in">MyStack</span>() {

    }
    
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">push</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>{
        que1.<span class="hljs-built_in">push</span>(x);
    }
    
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">pop</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">empty</span>()) {
            <span class="hljs-keyword">while</span> (que1.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">1</span>) {
                que2.<span class="hljs-built_in">push</span>(que1.<span class="hljs-built_in">front</span>());
                que1.<span class="hljs-built_in">pop</span>();
            }
            
            <span class="hljs-type">int</span> result = que1.<span class="hljs-built_in">front</span>();
            que1.<span class="hljs-built_in">pop</span>();

            <span class="hljs-keyword">while</span> (!que2.<span class="hljs-built_in">empty</span>()) {
                que1.<span class="hljs-built_in">push</span>(que2.<span class="hljs-built_in">front</span>());
                que2.<span class="hljs-built_in">pop</span>();
            }
            <span class="hljs-keyword">return</span> result;
        }
        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    }
    
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">top</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> que1.<span class="hljs-built_in">back</span>();
    }
    
    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">empty</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> que1.<span class="hljs-built_in">empty</span>() &amp;&amp; que2.<span class="hljs-built_in">empty</span>();
    }
};

<span class="hljs-comment">/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj-&gt;push(x);
 * int param_2 = obj-&gt;pop();
 * int param_3 = obj-&gt;top();
 * bool param_4 = obj-&gt;empty();
 */</span>
</code></pre>
<h2 id="有效括号问题"><a class="markdownIt-Anchor" href="#有效括号问题"></a> 有效括号问题</h2>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isValid</span><span class="hljs-params">(string s)</span> </span>{
        stack&lt;<span class="hljs-type">char</span>&gt; sta;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++) {
            <span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">'('</span>) sta.<span class="hljs-built_in">push</span>(<span class="hljs-string">')'</span>);
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">'['</span>) sta.<span class="hljs-built_in">push</span>(<span class="hljs-string">']'</span>);
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">'{'</span>) sta.<span class="hljs-built_in">push</span>(<span class="hljs-string">'}'</span>);
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sta.<span class="hljs-built_in">empty</span>() || sta.<span class="hljs-built_in">top</span>() != s[i]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;
            <span class="hljs-keyword">else</span> sta.<span class="hljs-built_in">pop</span>();
        }
        <span class="hljs-keyword">return</span> sta.<span class="hljs-built_in">empty</span>();
    } 
};
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-贪心算法</title>
    <url>/blog/2022/072a2449dc.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<blockquote>
<p>贪心的本质是选择每一阶段的局部最优，从而达到全局最优。</p>
</blockquote>
<h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2>
<p>贪心的题目没有固定套路，但都遵循着一个思想：局部最优从而达到全局最优</p>
<p>简单的问题直接遵循这个思想解决即可，稍微麻烦一点的可能会涉及到两个维度最优，且两个维度相互有联系，相互牵制，就比如下面这道题，首先要根据题目确定一个合适的维度保持最优，然后调整另一个维度。</p>
<h2 id="eg"><a class="markdownIt-Anchor" href="#eg"></a> eg</h2>
<blockquote>
<p><a href="https://leetcode-cn.com/problems/queue-reconstruction-by-height/">406.根据身高重建队列</a></p>
<p>假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] = [<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>] 表示第 i 个人的身高为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，前面 正好 有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个身高大于或等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的人。</p>
<p>请你重新构造并返回输入数组&nbsp;people 所表示的队列。返回的队列应该格式化为数组 queue ，其中 queue[j] = [hj, kj] 是队列中第 j 个人的属性（queue[0] 是排在队列前面的人）。</p>
<p>示例 1：</p>
<ul>
<li>输入：people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]</li>
<li>输出：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]</li>
<li>解释：
<ul>
<li>编号为 0 的人身高为 5 ，没有身高更高或者相同的人排在他前面。</li>
<li>编号为 1 的人身高为 7 ，没有身高更高或者相同的人排在他前面。</li>
<li>编号为 2 的人身高为 5 ，有 2 个身高更高或者相同的人排在他前面，即编号为 0 和 1 的人。</li>
<li>编号为 3 的人身高为 6 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。</li>
<li>编号为 4 的人身高为 4 ，有 4 个身高更高或者相同的人排在他前面，即编号为 0、1、2、3 的人。</li>
<li>编号为 5 的人身高为 7 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。</li>
<li>因此 [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] 是重新构造后的队列。</li>
</ul>
</li>
</ul>
<p>示例 2：</p>
<ul>
<li>输入：people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]</li>
<li>输出：[[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]</li>
</ul>
<p>提示：</p>
<ul>
<li>1 &lt;= people.length &lt;= 2000</li>
<li>0 &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt;= 10^6</li>
<li>0 &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; people.length</li>
</ul>
<p>题目数据确保队列可以被重建</p>
</blockquote>
<p>本题有两个维度，h和k，看到这种题目一定要想如何确定一个维度，然后在按照另一个维度重新排列。</p>
<p><strong>如果两个维度一起考虑一定会顾此失彼</strong>。</p>
<p>对于本题究竟先按h排序呢，还先按照k排序呢？</p>
<p>如果按照k来从小到大排序，排完之后，会发现k的排列并不符合条件，身高也不符合条件，两个维度哪一个都没确定下来。</p>
<p>那么按照身高h来排序呢，身高一定是从大到小排（身高相同的话则k小的站前面），让高个子在前面。</p>
<p><strong>此时我们可以确定一个维度了，就是身高，前面的节点一定都比本节点高！</strong></p>
<p>那么只需要按照k为下标重新插入队列即可。</p>
<p><strong>局部最优：优先按身高高的people的k来插入。插入操作过后的people满足队列属性</strong></p>
<p><strong>全局最优：最后都做完插入操作，整个队列满足题目队列属性</strong></p>
<p>本题整个插入过程如下：</p>
<p>排序完的people：<br>
[[7,0], [7,1], [6,1], [5,0], [5,2]，[4,4]]</p>
<p>插入的过程：</p>
<ul>
<li>插入[7,0]：[[7,0]]</li>
<li>插入[7,1]：[[7,0],[7,1]]</li>
<li>插入[6,1]：[[7,0],[6,1],[7,1]]</li>
<li>插入[5,0]：[[5,0],[7,0],[6,1],[7,1]]</li>
<li>插入[5,2]：[[5,0],[7,0],[5,2],[6,1],[7,1]]</li>
<li>插入[4,4]：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]</li>
</ul>
<p>此时就按照题目的要求完成了重新排列。</p>
<pre class="highlight"><code class="CPP"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">bool</span> <span class="hljs-title">cmp</span> <span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; a, vector&lt;<span class="hljs-type">int</span>&gt;&amp; b)</span> </span>{
        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">0</span>] == b[<span class="hljs-number">0</span>]) <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>] &lt; b[<span class="hljs-number">1</span>];
        <span class="hljs-keyword">return</span> a[<span class="hljs-number">0</span>] &gt; b[<span class="hljs-number">0</span>];
    }
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">reconstructQueue</span>(vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt;&amp; people) {
        <span class="hljs-built_in">sort</span>(people.<span class="hljs-built_in">begin</span>(), people.<span class="hljs-built_in">end</span>(), cmp);
        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; res;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; people.<span class="hljs-built_in">size</span>(); i++) {
            res.<span class="hljs-built_in">insert</span>(res.<span class="hljs-built_in">begin</span>() + people[i][<span class="hljs-number">1</span>], people[i]);
        }
        <span class="hljs-keyword">return</span> res;
    }
};
</code></pre>
<ul>
<li>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog n + n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>空间复杂度：O(n)</li>
</ul>
<h2 id="202286"><a class="markdownIt-Anchor" href="#202286"></a> 2022/8/6</h2>
<p>有一类区间最优问题非常适合贪心，比如下面几题：</p>
<ul>
<li><a href="https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/">用最少数量的箭引爆气球</a></li>
<li><a href="https://leetcode.cn/problems/non-overlapping-intervals/">无重叠区间</a></li>
<li><a href="https://leetcode.cn/problems/partition-labels/">划分字母区间</a></li>
<li><a href="https://leetcode.cn/problems/merge-intervals/submissions/">合并区间</a></li>
</ul>
<p>这类区间问题有一个套路就是可以先对区间排序，至于是根据左边界排序还是右边界没有太大影响，个人习惯左边界排序，之后通过控制右边界即可轻松解决问题，上文也提到不要一起考虑，不然容易顾此失彼。</p>
<p>根据左边界排序之后，所有的区间左边界必定是递增的（当然不是严格递增，存在相等的情况），而右边界无非三种情况，相对于我们选定的右边界来说，大于，小于，等于，此时只需要根据题目要求针对三种情况处理即可，这样就可以保证处理位置之前的区间都是最优的，也就是局部最优，待遍历到末尾之后，前面都是局部最优解，最终也就是全局最优，总之还是贪心没有固定套路，最多只能是几类问题有相似之处而已，从问题中找到局部最优解，然后扩展到全局即可。</p>
<p>最后附上贪心的知识图（图源知识星球：<a href="https://wx.zsxq.com/dweb2/index/footprint/844412858822412">海螺人</a>）：</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220806181804.png" alt="20220806181804"></p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-链表</title>
    <url>/blog/2022/064d5af563.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h2 id="链表"><a class="markdownIt-Anchor" href="#链表"></a> 链表</h2>
<p>链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域一个是指针域（存放指向下一个节点的指针），最后一个节点的指针域指向null（空指针的意思）。</p>
<ol>
<li>
<p>链接的入口节点称为链表的头结点也就是head。<br>
<img src="https://s2.loli.net/2022/05/26/YVCzvG73koDOeZw.png" alt="20220526212803"></p>
</li>
<li>
<p>双链表：<br>
<img src="https://s2.loli.net/2022/05/26/HAv7zVF2ZGlDN5q.png" alt="20220526212848"></p>
</li>
<li>
<p>循环链表：<br>
循环链表可用来解决约瑟夫环问题<br>
<img src="https://s2.loli.net/2022/05/26/mQZ5tVT2ScWHdGl.png" alt="20220526212919"></p>
</li>
</ol>
<p>链表中的节点在内存中不是连续分布的 ，而是散乱分布在内存中的某地址上，分配机制取决于操作系统的内存管理。</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// 单链表</span>
<span class="hljs-keyword">struct</span> <span class="hljs-title class_">ListNode</span> {
    <span class="hljs-type">int</span> val;  <span class="hljs-comment">// 节点上存储的元素</span>
    ListNode *next;  <span class="hljs-comment">// 指向下一个节点的指针</span>
    <span class="hljs-comment">// ListNode *prev;  //指向前一个元素 双链表，记得构造函数初始化</span>
    <span class="hljs-built_in">ListNode</span>(<span class="hljs-type">int</span> x) : <span class="hljs-built_in">val</span>(x), <span class="hljs-built_in">next</span>(<span class="hljs-literal">NULL</span>) {}  <span class="hljs-comment">// 节点的构造函数</span>
};
</code></pre>
<h3 id="性能分析"><a class="markdownIt-Anchor" href="#性能分析"></a> 性能分析</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">插入/删除</th>
<th style="text-align:center">查询</th>
<th style="text-align:center">适用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">数组</td>
<td style="text-align:center">O(n)</td>
<td style="text-align:center">O(1)</td>
<td style="text-align:center">数据量固定，频繁查询，较少增删</td>
</tr>
<tr>
<td style="text-align:center">链表</td>
<td style="text-align:center">O(1)</td>
<td style="text-align:center">O(n)</td>
<td style="text-align:center">数据量不固定，频繁增删，较少查询</td>
</tr>
</tbody>
</table>
<p>单链表的删除操作一般有两类：</p>
<ol>
<li>设置虚拟头，将头节点当作普通节点处理，最后在删除虚拟头</li>
<li>头节点和其他节点分开处理</li>
</ol>
<p>Pyhton、Java等语言可以自动释放内存，C++记得要手动释放内存节约空间。</p>
<h3 id="c示例"><a class="markdownIt-Anchor" href="#c示例"></a> C++示例</h3>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyLinkedList</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-comment">// 定义链表节点结构体</span>
    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">LinkedNode</span> {
        <span class="hljs-type">int</span> val;
        LinkedNode* next;
        <span class="hljs-built_in">LinkedNode</span>(<span class="hljs-type">int</span> val):<span class="hljs-built_in">val</span>(val), <span class="hljs-built_in">next</span>(<span class="hljs-literal">nullptr</span>){}
    };

    <span class="hljs-comment">// 初始化链表</span>
    <span class="hljs-built_in">MyLinkedList</span>() {
        _dummyHead = <span class="hljs-keyword">new</span> <span class="hljs-built_in">LinkedNode</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">// 这里定义的头结点 是一个虚拟头结点，而不是真正的链表头结点</span>
        _size = <span class="hljs-number">0</span>;
    }

    <span class="hljs-comment">// 获取到第index个节点数值，如果index是非法数值直接返回-1， 注意index是从0开始的，第0个节点就是头结点</span>
    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">get</span><span class="hljs-params">(<span class="hljs-type">int</span> index)</span> </span>{
        <span class="hljs-keyword">if</span> (index &gt; (_size - <span class="hljs-number">1</span>) || index &lt; <span class="hljs-number">0</span>) {
            <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
        }
        LinkedNode* cur = _dummyHead-&gt;next;
        <span class="hljs-keyword">while</span>(index--){ <span class="hljs-comment">// 如果--index 就会陷入死循环</span>
            cur = cur-&gt;next;
        }
        <span class="hljs-keyword">return</span> cur-&gt;val;
    }

    <span class="hljs-comment">// 在链表最前面插入一个节点，插入完成后，新插入的节点为链表的新的头结点</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">addAtHead</span><span class="hljs-params">(<span class="hljs-type">int</span> val)</span> </span>{
        LinkedNode* newNode = <span class="hljs-keyword">new</span> <span class="hljs-built_in">LinkedNode</span>(val);
        newNode-&gt;next = _dummyHead-&gt;next;
        _dummyHead-&gt;next = newNode;
        _size++;
    }

    <span class="hljs-comment">// 在链表最后面添加一个节点</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">addAtTail</span><span class="hljs-params">(<span class="hljs-type">int</span> val)</span> </span>{
        LinkedNode* newNode = <span class="hljs-keyword">new</span> <span class="hljs-built_in">LinkedNode</span>(val);
        LinkedNode* cur = _dummyHead;
        <span class="hljs-keyword">while</span>(cur-&gt;next != <span class="hljs-literal">nullptr</span>){
            cur = cur-&gt;next;
        }
        cur-&gt;next = newNode;
        _size++;
    }

    <span class="hljs-comment">// 在第index个节点之前插入一个新节点，例如index为0，那么新插入的节点为链表的新头节点。</span>
    <span class="hljs-comment">// 如果index 等于链表的长度，则说明是新插入的节点为链表的尾结点</span>
    <span class="hljs-comment">// 如果index大于链表的长度，则返回空</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">addAtIndex</span><span class="hljs-params">(<span class="hljs-type">int</span> index, <span class="hljs-type">int</span> val)</span> </span>{
        <span class="hljs-keyword">if</span> (index &gt; _size) {
            <span class="hljs-keyword">return</span>;
        }
        LinkedNode* newNode = <span class="hljs-keyword">new</span> <span class="hljs-built_in">LinkedNode</span>(val);
        LinkedNode* cur = _dummyHead;
        <span class="hljs-keyword">while</span>(index--) {
            cur = cur-&gt;next;
        }
        newNode-&gt;next = cur-&gt;next;
        cur-&gt;next = newNode;
        _size++;
    }

    <span class="hljs-comment">// 删除第index个节点，如果index 大于等于链表的长度，直接return，注意index是从0开始的</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">deleteAtIndex</span><span class="hljs-params">(<span class="hljs-type">int</span> index)</span> </span>{
        <span class="hljs-keyword">if</span> (index &gt;= _size || index &lt; <span class="hljs-number">0</span>) {
            <span class="hljs-keyword">return</span>;
        }
        LinkedNode* cur = _dummyHead;
        <span class="hljs-keyword">while</span>(index--) {
            cur = cur -&gt;next;
        }
        LinkedNode* tmp = cur-&gt;next;
        cur-&gt;next = cur-&gt;next-&gt;next;
        <span class="hljs-keyword">delete</span> tmp;
        _size--;
    }

    <span class="hljs-comment">// 打印链表</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printLinkedList</span><span class="hljs-params">()</span> </span>{
        LinkedNode* cur = _dummyHead;
        <span class="hljs-keyword">while</span> (cur-&gt;next != <span class="hljs-literal">nullptr</span>) {
            cout &lt;&lt; cur-&gt;next-&gt;val &lt;&lt; <span class="hljs-string">" "</span>;
            cur = cur-&gt;next;
        }
        cout &lt;&lt; endl;
    }
<span class="hljs-keyword">private</span>:
    <span class="hljs-type">int</span> _size;
    LinkedNode* _dummyHead;

};
</code></pre>
<h3 id="关于环形链表和入口问题"><a class="markdownIt-Anchor" href="#关于环形链表和入口问题"></a> 关于环形链表和入口问题</h3>
<p>链表是否存在环可以用双指针快速判定，fast每次移动两个节点，slow一个节点，如果相遇（即fast == slow），则必定存在环</p>
<p>环的入口可以这样求：在相遇位置设置tmp1，在链表头结点处设置tmp2，每次走一个节点，相遇位置即为环入口节点</p>
<p>理论比较简单，详细可参见<a href="https://programmercarl.com/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html">链表：环找到了，那入口呢？</a>,dalao写的非常详细</p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode笔记-数组</title>
    <url>/blog/2022/05fcf9ff47.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为个人笔记，内容或有错误。<br>
图片部分源于<a href="https://programmercarl.com/">代码随想录</a>，侵删。</p>
</blockquote>
<!-- toc -->
<h2 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h2>
<p>需要两点注意的是：</p>
<ul>
<li>数组下标都是从0开始的</li>
<li>数组内存空间的地址是连续的</li>
</ul>
<p>正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址，而且数组不能<strong>增删，只能覆盖</strong>。<br>
在C++中二维数组在地址空间上是连续的。但是Java是没有指针的，同时也不对程序员暴露其元素的地址，寻址操作完全交给虚拟机。所以看不到每个元素的地址情况。</p>
<h3 id="二分"><a class="markdownIt-Anchor" href="#二分"></a> 二分</h3>
<p>使用二分的前提是：</p>
<ul>
<li>有序数组</li>
<li>无重复元素</li>
</ul>
<p>使用二分时一般需要注意边界条件的处理，一般包括以下两种情况：</p>
<ol>
<li>左闭右闭</li>
<li>左闭右开</li>
</ol>
<p>二分法经常写乱，主要是因为对区间的定义没有想清楚，区间的定义就是不变量。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是<strong>循环不变量规则</strong>。</p>
<h3 id="双指针"><a class="markdownIt-Anchor" href="#双指针"></a> 双指针</h3>
<p>使用双指针可以实现滑动窗口等操作，避免了循环嵌套，大大降低了时间复杂度</p>
<h3 id="螺旋矩阵"><a class="markdownIt-Anchor" href="#螺旋矩阵"></a> 螺旋矩阵</h3>
<p>要注意四个方向临界条件以及区间类型都要一致</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LightSensor</title>
    <url>/blog/2021/0420210424.html</url>
    <content><![CDATA[<h1 id="center光线传感器center"><a class="markdownIt-Anchor" href="#center光线传感器center"></a> <center>光线传感器<center></center></center></h1>
<h3 id="实验目的"><a class="markdownIt-Anchor" href="#实验目的"></a> 实验目的</h3>
<p>本次实验的目的是让大家了解Android中光线传感器的基本知识，掌握Android中光线传感器的使用方法。</p>
<h3 id="实验要求"><a class="markdownIt-Anchor" href="#实验要求"></a> 实验要求</h3>
<ol>
<li>
<p>了解Android中光线传感器基本知识</p>
</li>
<li>
<p>掌握Android中光线传感器使用方法</p>
</li>
</ol>
<h3 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h3>
<p>光线传感器基础</p>
<p>光线传感器的好处是可以根据手机所处环境的光线来调节手机屏幕的亮度和键盘灯。例如在光线充足的地方屏幕会很亮，键盘灯就会关闭。相反如果在暗处，键盘灯就会亮，屏幕较暗（与屏幕亮度的设置也有关系），这样既保护了眼睛又节省了电量。光线传感器在进入睡眠模式时候会发出蓝色周期性闪动的光，非常美观。在本节的内容中，将详细讲解Android系统光线传感器的基本知识。<br>
光线传感器介绍<br>
在Android设备中，光线传感器通常位于前摄像头旁边的一个小点，如果在光线充足的情况下（室外或者是灯光充足的室内），大约在2～3秒之后键盘灯会自动熄灭，即使再操作机器键盘灯也不会亮，除非到了光线比较暗的地方才会自动地亮起来。如果在光线充足的情况下用手将光线感应器遮上，在2～3秒后键盘灯会自动亮起来，在此过程中光线感应器起到了一个节电的功能。<br>
要想在Android设备中监听光线传感器，需要掌握如下所示的监听方法。</p>
<ol>
<li>registerListenr(SensorListenerlistenr,int sensors,int rate)：已过时。</li>
<li>registerListenr(SensorListenerlistenr,int sensors)：已过时。</li>
<li>registerListenr(SensorEventListenerlistenr,Sensor sensors,int rate)。</li>
<li>registerListenr(SensorEventListenerlistenr,Sensor sensors,int rate,Handlerhandler)：因为SensorListener已经过时，所以相应的注册方法也过时了。</li>
</ol>
<p>在上述方法中，各个参数的具体说明如下所示。</p>
<ul>
<li>Listener：相应监听器的引用。</li>
<li>Sensor：相应的感应器引用。</li>
<li>Rate：感应器的反应速度，这个必须是系统提供的4个常量之一。</li>
<li>SENSOR_DELAY_NORMAL：匹配屏幕方向的变化。</li>
<li>SENSOR_DELAY_UI：匹配用户接口。</li>
<li>SENSOR_DELAY_GAME：匹配游戏。</li>
<li>SENSOR_DELAY_FASTEST.：匹配所能达到的最快。</li>
</ul>
<h3 id="实验内容"><a class="markdownIt-Anchor" href="#实验内容"></a> 实验内容</h3>
<p>按照实验的内容进行操作，掌握Android中光线传感器的使用方法等内容。<br>
完成实验内容后，设计一个光线传感器的app，至少包含如下功能：</p>
<ul>
<li>显示当前光线传感器的光照强度；</li>
<li>显示当前光线传感器的名称，耗电量，以及最大测量范围。</li>
</ul>
<p>获取上述参数方法如下：</p>
<p>myS  =  mySm.getDefaultSensor(Sensor.TYPE_LIGHT);</p>
<p>名称：myS.getName() ;</p>
<p>耗电量（mA）：myS.getPower();</p>
<p>最大测量范围：myS.getMaximumRange()</p>
<h3 id="实验过程"><a class="markdownIt-Anchor" href="#实验过程"></a> 实验过程</h3>
<ol>
<li>利用Android studio创建一个工程，并利用实体机或者安卓虚拟机进行测试（这里我先利用逍遥模拟器进行测试，成功之后，连接真机进行测试）</li>
<li>修改activity_main.yml文件，新建一个静态文本控件用来输出我们要输出的亮度传感器的有关信息，这里新建工程初始化时会自动生成一个文本控件，文本内容默认为“Hello World！”，所以只需在其基础上进行修改即可</li>
</ol>
<pre class="highlight"><code class="">&lt;TextView
        android:id="@+id/textView1"//为控件添加编号textView1
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"//初始化文本内容
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent" /&gt;
</code></pre>
<ol start="3">
<li>修改Mainactivity.java文件对传感器进行控制并进行文本输出</li>
</ol>
<pre class="highlight"><code class="">//这里仅展示所需主要代码。具体代码见工程文件
public class MainActivity extends Activity implements SensorEventListener {
    private SensorManager sensor;//定义一个传感器管理器
    private TextView text;//定义一个文本控件
    @Override
    protected void onCreate(Bundle savedInstanceState) {//项目初始化函数
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        sensor = (SensorManager)getSystemService(SENSOR_SERVICE);//调用getSystemService函数来获取传感器控制权
        text = (TextView)findViewById(R.id.textView1);//通过控件ID将实体文本控件与代码连接起来
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        // 在传感器控制函数里面实现我们的功能
        float[] values = event.values; //定义变量来获取事件的值
        int sensorType = event.sensor.TYPE_LIGHT; //定义值为事件发生时的传感器变量值
        if(sensorType==Sensor.TYPE_LIGHT){//如果对应系统中的亮度传感器，则证明是亮度发生变化
            String detail="\n传感器名称："+(event.sensor.getType()==Sensor.TYPE_LIGHT?(event.sensor.getName()+"\n中文名称：光照传感器"):"")+"\n耗电量："+event.sensor.getPower()+"\n最大测量范围："+event.sensor.getMaximumRange();//定义字符串来实现输出，调用getName，getPower，getMaximumRange函数来获取传感器参数
            text.setText(detail+"\n当前光照强度："+String.valueOf(values[0])+"Lux\n");//将静态文本控件内容更新为传感器信息
            text.setTextSize(30);//设置字体大小
            text.setTextColor(Color.parseColor("#ff5e9cff"));//#7E0C6E设置字体颜色
        }
    }
}
</code></pre>
<h3 id="软件效果展示"><a class="markdownIt-Anchor" href="#软件效果展示"></a> 软件效果展示</h3>
<p><img src="https://i.loli.net/2021/04/24/OR4gjAQVUtnKr7z.png" alt="image-20210424025040667"></p>
]]></content>
      <categories>
        <category>Homework</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Homework</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux指令</title>
    <url>/blog/2023/0589550d80.html</url>
    <content><![CDATA[<blockquote>
<p>转载自<a href="https://blog.csdn.net/m0_46422300/article/details/104645072">Engineer-Yao</a></p>
</blockquote>
<h2 id="一-基础知识"><a class="markdownIt-Anchor" href="#一-基础知识"></a> 一、基础知识</h2>
<h3 id="11-linux系统的文件结构"><a class="markdownIt-Anchor" href="#11-linux系统的文件结构"></a> 1.1 Linux系统的文件结构</h3>
<pre class="highlight"><code class="md">/bin        二进制文件，系统常规命令
/boot       系统启动分区，系统启动时读取的文件
/dev        设备文件
/etc        大多数配置文件
/home       普通用户的家目录
/lib        32位函数库
/lib64      64位库
/media      手动临时挂载点
/mnt        手动临时挂载点
/opt        第三方软件安装位置
/proc       进程信息及硬件信息
/root       临时设备的默认挂载点
/sbin       系统管理命令
/srv        数据
/var        数据
/sys        内核相关信息
/tmp        临时文件
/usr        用户相关设定
</code></pre>
<h3 id="12-linux系统命令行的含义"><a class="markdownIt-Anchor" href="#12-linux系统命令行的含义"></a> 1.2 Linux系统命令行的含义</h3>
<p>示例：root@app00:~#</p>
<pre class="highlight"><code class="text">root    //用户名，root为超级用户
@       //分隔符
app00   //主机名称
~       //当前所在目录，默认用户目录为~，会随着目录切换而变化，例如：（root@app00:/bin# ，当前位置在bin目录下）
#       //表示当前用户是超级用户，普通用户为$，例如：（"yao@app00:/root$" ，表示使用用户"yao"访问/root文件夹）
</code></pre>
<h3 id="13-命令的组成"><a class="markdownIt-Anchor" href="#13-命令的组成"></a> 1.3 命令的组成</h3>
<p>示例：命令 参数名 参数值</p>
<h2 id="二-基础操作"><a class="markdownIt-Anchor" href="#二-基础操作"></a> 二、基础操作</h2>
<h3 id="21-重启系统"><a class="markdownIt-Anchor" href="#21-重启系统"></a> 2.1 重启系统</h3>
<p>(1)立刻关机</p>
<pre class="highlight"><code class="text">shutdown -h now 或者 poweroff
</code></pre>
<p>(2)两分钟后关机</p>
<pre class="highlight"><code class="text">shutdown -h 2
</code></pre>
<h3 id="22-关闭系统"><a class="markdownIt-Anchor" href="#22-关闭系统"></a> 2.2 关闭系统</h3>
<p>(1)立刻重启</p>
<pre class="highlight"><code class="text">shutdown -r now 或者 reboot
</code></pre>
<p>(2)两分钟后重启</p>
<pre class="highlight"><code class="text">shutdown -r 2 
</code></pre>
<h3 id="23-帮助命令help"><a class="markdownIt-Anchor" href="#23-帮助命令help"></a> 2.3 帮助命令（help）</h3>
<pre class="highlight"><code class="text">ifconfig  --help     //查看 ifconfig 命令的用法
</code></pre>
<h3 id="24-命令说明书man"><a class="markdownIt-Anchor" href="#24-命令说明书man"></a> 2.4 命令说明书（man）</h3>
<pre class="highlight"><code class="text">man shutdown         //打开命令说明后，可按"q"键退出
</code></pre>
<h3 id="25-切换用户su"><a class="markdownIt-Anchor" href="#25-切换用户su"></a> 2.5 切换用户（su）</h3>
<pre class="highlight"><code class="text">su yao               //切换为用户"yao",输入后回车需要输入该用户的密码
exit                 //退出当前用户
</code></pre>
<h2 id="三-目录操作"><a class="markdownIt-Anchor" href="#三-目录操作"></a> 三、目录操作</h2>
<h3 id="31-切换目录cd"><a class="markdownIt-Anchor" href="#31-切换目录cd"></a> 3.1 切换目录（cd）</h3>
<pre class="highlight"><code class="text">cd /                 //切换到根目录
cd /bin              //切换到根目录下的bin目录
cd ../               //切换到上一级目录 或者使用命令：cd ..
cd ~                 //切换到home目录
cd -                 //切换到上次访问的目录
cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错
cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全
</code></pre>
<h3 id="32-查看目录ls"><a class="markdownIt-Anchor" href="#32-查看目录ls"></a> 3.2 查看目录（ls）</h3>
<pre class="highlight"><code class="text">ls                   //查看当前目录下的所有目录和文件
ls -a                //查看当前目录下的所有目录和文件（包括隐藏的文件）
ls -l                //列表查看当前目录下的所有目录和文件（列表查看，显示更多信息），与命令"ll"效果一样
ls /bin              //查看指定目录下的所有目录和文件 
</code></pre>
<h3 id="33-创建目录mkdir"><a class="markdownIt-Anchor" href="#33-创建目录mkdir"></a> 3.3 创建目录（mkdir）</h3>
<pre class="highlight"><code class="text">mkdir tools          //在当前目录下创建一个名为tools的目录
mkdir /bin/tools     //在指定目录下创建一个名为tools的目录
</code></pre>
<h3 id="33-删除目录与文件rm"><a class="markdownIt-Anchor" href="#33-删除目录与文件rm"></a> 3.3 删除目录与文件（rm）</h3>
<pre class="highlight"><code class="text">rm 文件名              //删除当前目录下的文件
rm -f 文件名           //删除当前目录的的文件（不询问）
rm -r 文件夹名         //递归删除当前目录下此名的目录
rm -rf 文件夹名        //递归删除当前目录下此名的目录（不询问）
rm -rf *              //将当前目录下的所有目录和文件全部删除
rm -rf /*             //将根目录下的所有文件全部删除【慎用！相当于格式化系统】
</code></pre>
<h3 id="34-修改目录mv"><a class="markdownIt-Anchor" href="#34-修改目录mv"></a> 3.4 修改目录（mv）</h3>
<pre class="highlight"><code class="text">mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作
mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面
mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹
</code></pre>
<h3 id="35-拷贝目录cp"><a class="markdownIt-Anchor" href="#35-拷贝目录cp"></a> 3.5 拷贝目录（cp）</h3>
<pre class="highlight"><code class="text">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面
cp -r /usr/tmp/tool /opt    //递归剪复制目录中所有文件和文件夹
</code></pre>
<h3 id="36-搜索目录find"><a class="markdownIt-Anchor" href="#36-搜索目录find"></a> 3.6 搜索目录（find）</h3>
<pre class="highlight"><code class="text">find /bin -name 'a*'        //查找/bin目录下的所有以a开头的文件或者目录
</code></pre>
<h3 id="37-查看当前目录pwd"><a class="markdownIt-Anchor" href="#37-查看当前目录pwd"></a> 3.7 查看当前目录（pwd）</h3>
<pre class="highlight"><code class="text">pwd                         //显示当前位置路径
</code></pre>
<h2 id="四-文件操作"><a class="markdownIt-Anchor" href="#四-文件操作"></a> 四、文件操作</h2>
<h3 id="41-新增文件touch"><a class="markdownIt-Anchor" href="#41-新增文件touch"></a> 4.1 新增文件（touch）</h3>
<pre class="highlight"><code class="text">touch  a.txt         //在当前目录下创建名为a的txt文件（文件不存在），如果文件存在，将文件时间属性修改为当前系统时间
</code></pre>
<h3 id="42-删除文件rm"><a class="markdownIt-Anchor" href="#42-删除文件rm"></a> 4.2 删除文件（rm）</h3>
<pre class="highlight"><code class="text">rm 文件名              //删除当前目录下的文件
rm -f 文件名           //删除当前目录的的文件（不询问）
</code></pre>
<h3 id="43-编辑文件vi-vim"><a class="markdownIt-Anchor" href="#43-编辑文件vi-vim"></a> 4.3 编辑文件（vi、vim）</h3>
<pre class="highlight"><code class="text">vi 文件名              //打开需要编辑的文件
--进入后，操作界面有三种模式：命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode）
命令模式
-刚进入文件就是命令模式，通过方向键控制光标位置，
-使用命令"dd"删除当前整行
-使用命令"/字段"进行查找
-按"i"在光标所在字符前开始插入
-按"a"在光标所在字符后开始插入
-按"o"在光标所在行的下面另起一新行插入
-按"："进入底行模式
插入模式
-此时可以对文件内容进行编辑，左下角会显示 "-- 插入 --""
-按"ESC"进入底行模式
底行模式
-退出编辑：      :q
-强制退出：      :q!
-保存并退出：    :wq
## 操作步骤示例 ##
1.保存文件：按"ESC" -&gt; 输入":" -&gt; 输入"wq",回车     //保存并退出编辑
2.取消操作：按"ESC" -&gt; 输入":" -&gt; 输入"q!",回车     //撤销本次修改并退出编辑
## 补充 ##
vim +10 filename.txt                   //打开文件并跳到第10行
vim -R /etc/passwd                     //以只读模式打开文件
</code></pre>
<h3 id="44-查看文件"><a class="markdownIt-Anchor" href="#44-查看文件"></a> 4.4 查看文件</h3>
<pre class="highlight"><code class="text">cat a.txt          //查看文件最后一屏内容
less a.txt         //PgUp向上翻页，PgDn向下翻页，"q"退出查看
more a.txt         //显示百分比，回车查看下一行，空格查看下一页，"q"退出查看
tail -100 a.txt    //查看文件的后100行，"Ctrl+C"退出查看
</code></pre>
<h2 id="五-文件权限"><a class="markdownIt-Anchor" href="#五-文件权限"></a> 五、文件权限</h2>
<h3 id="51-权限说明"><a class="markdownIt-Anchor" href="#51-权限说明"></a> 5.1 权限说明</h3>
<pre class="highlight"><code class="text">文件权限简介：'r' 代表可读（4），'w' 代表可写（2），'x' 代表执行权限（1），括号内代表"8421法"
##文件权限信息示例：-rwxrw-r--
-第一位：'-'就代表是文件，'d'代表是文件夹
-第一组三位：拥有者的权限
-第二组三位：拥有者所在的组，组员的权限
-第三组三位：代表的是其他用户的权限
</code></pre>
<h3 id="52-文件权限"><a class="markdownIt-Anchor" href="#52-文件权限"></a> 5.2 文件权限</h3>
<pre class="highlight"><code class="text">普通授权    chmod +x a.txt    
8421法     chmod 777 a.txt     //1+2+4=7，"7"说明授予所有权限
</code></pre>
<h2 id="六-打包与解压"><a class="markdownIt-Anchor" href="#六-打包与解压"></a> 六、打包与解压</h2>
<h3 id="61-说明"><a class="markdownIt-Anchor" href="#61-说明"></a> 6.1 说明</h3>
<pre class="highlight"><code class="text">.zip、.rar        //windows系统中压缩文件的扩展名
.tar              //Linux中打包文件的扩展名
.gz               //Linux中压缩文件的扩展名
.tar.gz           //Linux中打包并压缩文件的扩展名
</code></pre>
<h3 id="62-打包文件"><a class="markdownIt-Anchor" href="#62-打包文件"></a> 6.2 打包文件</h3>
<pre class="highlight"><code class="text">tar -zcvf 打包压缩后的文件名 要打包的文件
参数说明：z：调用gzip压缩命令进行压缩; c：打包文件; v：显示运行过程; f：指定文件名;
示例：
tar -zcvf a.tar file1 file2,...      //多个文件压缩打包
</code></pre>
<h3 id="63-解压文件"><a class="markdownIt-Anchor" href="#63-解压文件"></a> 6.3 解压文件</h3>
<pre class="highlight"><code class="text">tar -zxvf a.tar                      //解包至当前目录
tar -zxvf a.tar -C /usr------        //指定解压的位置
unzip test.zip             //解压*.zip文件 
unzip -l test.zip          //查看*.zip文件的内容 
</code></pre>
<h2 id="七-其他常用命令"><a class="markdownIt-Anchor" href="#七-其他常用命令"></a> 七、其他常用命令</h2>
<h3 id="71-find"><a class="markdownIt-Anchor" href="#71-find"></a> 7.1 find</h3>
<pre class="highlight"><code class="text">find . -name "*.c"     //将目前目录及其子目录下所有延伸档名是 c 的文件列出来
find . -type f         //将目前目录其其下子目录中所有一般文件列出
find . -ctime -20      //将目前目录及其子目录下所有最近 20 天内更新过的文件列出
find /var/log -type f -mtime +7 -ok rm {} \;     //查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们
find . -type f -perm 644 -exec ls -l {} \;       //查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件
find / -type f -size 0 -exec ls -l {} \;         //为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径
</code></pre>
<h3 id="72-whereis"><a class="markdownIt-Anchor" href="#72-whereis"></a> 7.2 whereis</h3>
<pre class="highlight"><code class="text">whereis ls             //将和ls文件相关的文件都查找出来
</code></pre>
<h3 id="73-which"><a class="markdownIt-Anchor" href="#73-which"></a> 7.3 which</h3>
<pre class="highlight"><code class="text">说明：which指令会在环境变量$PATH设置的目录里查找符合条件的文件。
which bash             //查看指令"bash"的绝对路径
</code></pre>
<h3 id="74-sudo"><a class="markdownIt-Anchor" href="#74-sudo"></a> 7.4 sudo</h3>
<pre class="highlight"><code class="text">说明：sudo命令以系统管理者的身份执行指令，也就是说，经由 sudo 所执行的指令就好像是 root 亲自执行。需要输入自己账户密码。
使用权限：在 /etc/sudoers 中有出现的使用者
sudo -l                              //列出目前的权限
$ sudo -u yao vi ~www/index.html    //以 yao 用户身份编辑  home 目录下www目录中的 index.html 文件
</code></pre>
<h3 id="75-grep"><a class="markdownIt-Anchor" href="#75-grep"></a> 7.5 grep</h3>
<pre class="highlight"><code class="text">grep -i "the" demo_file              //在文件中查找字符串(不区分大小写)
grep -A 3 -i "example" demo_text     //输出成功匹配的行，以及该行之后的三行
grep -r "ramesh" *                   //在一个文件夹中递归查询包含指定字符串的文件
</code></pre>
<h3 id="76-service"><a class="markdownIt-Anchor" href="#76-service"></a> 7.6 service</h3>
<pre class="highlight"><code class="text">说明：service命令用于运行System V init脚本，这些脚本一般位于/etc/init.d文件下，这个命令可以直接运行这个文件夹里面的脚本，而不用加上路径
service ssh status      //查看服务状态 
service --status-all    //查看所有服务状态 
service ssh restart     //重启服务 
</code></pre>
<h3 id="77-free"><a class="markdownIt-Anchor" href="#77-free"></a> 7.7 free</h3>
<pre class="highlight"><code class="text">说明：这个命令用于显示系统当前内存的使用情况，包括已用内存、可用内存和交换内存的情况 
free -g            //以G为单位输出内存的使用量，-g为GB，-m为MB，-k为KB，-b为字节 
free -t            //查看所有内存的汇总
</code></pre>
<h3 id="78-top"><a class="markdownIt-Anchor" href="#78-top"></a> 7.8 top</h3>
<pre class="highlight"><code class="text">top               //显示当前系统中占用资源最多的一些进程, shift+m 按照内存大小查看
</code></pre>
<h3 id="79-df"><a class="markdownIt-Anchor" href="#79-df"></a> 7.9 df</h3>
<pre class="highlight"><code class="text">说明：显示文件系统的磁盘使用情况
df -h            //一种易看的显示
</code></pre>
<h3 id="710-mount"><a class="markdownIt-Anchor" href="#710-mount"></a> 7.10 mount</h3>
<pre class="highlight"><code class="text">mount /dev/sdb1 /u01              //挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上
dev/sdb1 /u01 ext2 defaults 0 2   //添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载 
</code></pre>
<h3 id="711-uname"><a class="markdownIt-Anchor" href="#711-uname"></a> 7.11 uname</h3>
<pre class="highlight"><code class="text">说明：uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息 
uname -a
</code></pre>
<h3 id="712-yum"><a class="markdownIt-Anchor" href="#712-yum"></a> 7.12 yum</h3>
<pre class="highlight"><code class="text">说明：安装插件命令
yum install httpd      //使用yum安装apache 
yum update httpd       //更新apache 
yum remove httpd       //卸载/删除apache 
</code></pre>
<h3 id="713-rpm"><a class="markdownIt-Anchor" href="#713-rpm"></a> 7.13 rpm</h3>
<pre class="highlight"><code class="text">说明：插件安装命令
rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm文件安装apache 
rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm更新apache 
rpm -ev httpd                                 //卸载/删除apache 
</code></pre>
<h3 id="714-date"><a class="markdownIt-Anchor" href="#714-date"></a> 7.14 date</h3>
<pre class="highlight"><code class="text">date -s "01/31/2010 23:59:53"   ///设置系统时间
</code></pre>
<h3 id="715-wget"><a class="markdownIt-Anchor" href="#715-wget"></a> 7.15 wget</h3>
<pre class="highlight"><code class="text">说明：使用wget从网上下载软件、音乐、视频 
示例：wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz
//下载文件并以指定的文件名保存文件
wget -O nagios.tar.gz http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz
</code></pre>
<h3 id="716-ftp"><a class="markdownIt-Anchor" href="#716-ftp"></a> 7.16 ftp</h3>
<pre class="highlight"><code class="text">ftp IP/hostname    //访问ftp服务器
mls *.html -       //显示远程主机上文件列表
</code></pre>
<h3 id="717-scp"><a class="markdownIt-Anchor" href="#717-scp"></a> 7.17 scp</h3>
<pre class="highlight"><code class="text">scp /opt/data.txt  192.168.1.101:/opt/    //将本地opt目录下的data文件发送到192.168.1.101服务器的opt目录下
</code></pre>
<h2 id="八-系统管理"><a class="markdownIt-Anchor" href="#八-系统管理"></a> 八、系统管理</h2>
<h3 id="81-防火墙操作"><a class="markdownIt-Anchor" href="#81-防火墙操作"></a> 8.1 防火墙操作</h3>
<pre class="highlight"><code class="text">service iptables status      //查看iptables服务的状态
service iptables start       //开启iptables服务
service iptables stop        //停止iptables服务
service iptables restart     //重启iptables服务
chkconfig iptables off       //关闭iptables服务的开机自启动
chkconfig iptables on        //开启iptables服务的开机自启动
##centos7 防火墙操作
systemctl status firewalld.service     //查看防火墙状态
systemctl stop firewalld.service       //关闭运行的防火墙
systemctl disable firewalld.service    //永久禁止防火墙服务
</code></pre>
<h3 id="82-修改主机名centos-7"><a class="markdownIt-Anchor" href="#82-修改主机名centos-7"></a> 8.2 修改主机名（CentOS 7）</h3>
<pre class="highlight"><code class="text">hostnamectl set-hostname 主机名
</code></pre>
<h3 id="83-查看网络"><a class="markdownIt-Anchor" href="#83-查看网络"></a> 8.3 查看网络</h3>
<pre class="highlight"><code class="text">ifconfig
</code></pre>
<h3 id="84-修改ip"><a class="markdownIt-Anchor" href="#84-修改ip"></a> 8.4 修改IP</h3>
<pre class="highlight"><code class="text">修改网络配置文件，文件地址：/etc/sysconfig/network-scripts/ifcfg-eth0
------------------------------------------------
主要修改以下配置：  
TYPE=Ethernet               //网络类型
BOOTPROTO=static            //静态IP
DEVICE=ens00                //网卡名
IPADDR=192.168.1.100        //设置的IP
NETMASK=255.255.255.0       //子网掩码
GATEWAY=192.168.1.1         //网关
DNS1=192.168.1.1            //DNS
DNS2=8.8.8.8                //备用DNS
ONBOOT=yes                  //系统启动时启动此设置
-------------------------------------------------
修改保存以后使用命令重启网卡：service network restart
</code></pre>
<h3 id="85-配置映射"><a class="markdownIt-Anchor" href="#85-配置映射"></a> 8.5 配置映射</h3>
<pre class="highlight"><code class="text">修改文件： vi /etc/hosts
在文件最后添加映射地址，示例如下：
192.168.1.101  node1
192.168.1.102  node2
192.168.1.103  node3
配置好以后保存退出，输入命令：ping node1 ，可见实际 ping 的是 192.168.1.101。
</code></pre>
<h3 id="86-查看进程"><a class="markdownIt-Anchor" href="#86-查看进程"></a> 8.6 查看进程</h3>
<pre class="highlight"><code class="text">ps -ef         //查看所有正在运行的进程
</code></pre>
<h3 id="87-结束进程"><a class="markdownIt-Anchor" href="#87-结束进程"></a> 8.7 结束进程</h3>
<pre class="highlight"><code class="text">kill pid       //杀死该pid的进程
kill -9 pid    //强制杀死该进程   
</code></pre>
<h3 id="88-查看链接"><a class="markdownIt-Anchor" href="#88-查看链接"></a> 8.8 查看链接</h3>
<pre class="highlight"><code class="text">ping IP        //查看与此IP地址的连接情况
netstat -an    //查看当前系统端口
netstat -an | grep 8080     //查看指定端口
</code></pre>
<h3 id="89-快速清屏"><a class="markdownIt-Anchor" href="#89-快速清屏"></a> 8.9 快速清屏</h3>
<pre class="highlight"><code class="text">ctrl+l        //清屏，往上翻可以查看历史操作
</code></pre>
<h3 id="810-远程主机"><a class="markdownIt-Anchor" href="#810-远程主机"></a> 8.10 远程主机</h3>
<pre class="highlight"><code class="shell">ssh IP       //远程主机，需要输入用户名和密码
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>MarkDown常用语法</title>
    <url>/blog/2022/05d18ae5e4.html</url>
    <content><![CDATA[<blockquote>
<p>一些常用基本语法不过多介绍，详细可以参看<a href="https://markdown.com.cn/cheat-sheet.html">MarkDown官方教程</a><br>
这里只介绍一些实用但是容易被忽视的一些语法</p>
</blockquote>
<!-- toc -->
<h4 id="markdown引用"><a class="markdownIt-Anchor" href="#markdown引用"></a> MarkDown引用</h4>
<p>使用标记符 &gt; 对内容进行引用：</p>
<ol>
<li>引用一段内容
<blockquote>
<p>引用一段内容</p>
</blockquote>
</li>
<li>引用的多层嵌套：只要根据层次加上不同数量的 &gt; 符号</li>
</ol>
<p>示例：</p>
<pre class="highlight"><code class="C++">&gt;  请问  Markdwon  怎么用？  -  小白
&gt;&gt;  自己看教程！  -  愤青
&gt;&gt;&gt;  教程在哪？  -  小白
&gt;&gt;&gt;&gt;  我也不知道在哪！  -  愤青
&gt;&gt;&gt;&gt;&gt;  那你回答个屁。  -  小白
</code></pre>
<p>显示效果：</p>
<blockquote>
<p>请问  Markdwon  怎么用？  -  小白</p>
<blockquote>
<p>自己看教程！  -  愤青</p>
<blockquote>
<p>教程在哪？  -  小白</p>
<blockquote>
<p>我也不知道在哪！  -  愤青</p>
<blockquote>
<p>那你回答个屁。  -  小白</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>引用其它要素：<br>
引用的区块内也可以使用其他的语法，包括标题、列表、代码区块等。</p>
<p>示例：</p>
<pre class="highlight"><code class="C++">&gt; <span class="hljs-number">1.1</span> 这是第一行列表项。
&gt;&gt; <span class="hljs-number">2.1</span> 这是第二行列表项。
&gt;&gt;&gt; - 这是第三行列表项。
&gt; ### 给出一些例子代码：
</code></pre>
<p>显示效果：</p>
<blockquote>
<p>1.1 这是第一行列表项。</p>
<blockquote>
<p>2.1 这是第二行列表项。</p>
<blockquote>
<ul>
<li>这是第三行列表项。</li>
</ul>
</blockquote>
</blockquote>
<h3 id="给出一些例子代码"><a class="markdownIt-Anchor" href="#给出一些例子代码"></a> 给出一些例子代码：</h3>
</blockquote>
<p>引用中内容换行：<br>
有时候引用的内容太长，需要分段落层次，可以使用 &lt; br &gt; 实现换行。</p>
<p>举例：</p>
<pre class="highlight"><code class="C++">&gt; $\underline{幽默小故事，笑死人不偿命}$&lt;br&gt;
我：“老板，你这清炒油麦菜是荤菜还是素菜？
老板：“当然是素菜了”&lt;br&gt;
我：“那这条虫是怎么回事”
老板：“呃……它也是来吃饭的。”&lt;br&gt;
我：“它吃饭凭什么我付钱？我又不认识它！”
老板哭着说：“它为了这顿饭，把命都丢了，你还能要求它AA制吗？”
</code></pre>
<p>显示效果：</p>
<p><img src="https://s2.loli.net/2022/05/27/nIWKcB4P9GOlXSg.png" alt="20220527001606"></p>
<h4 id="下划线"><a class="markdownIt-Anchor" href="#下划线"></a> 下划线</h4>
<p>示例：</p>
<pre class="highlight"><code class="C++">$\underline{给这条语句加一个下划线}$
</code></pre>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder accentunder="true"><mtext>给这条语句加一个下划线</mtext><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{给这条语句加一个下划线}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:-0.20000000000000007em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">语</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">划</span><span class="mord cjk_fallback">线</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20000000000000007em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>效果：</p>
<p><img src="https://s2.loli.net/2022/05/27/4swLn8ib3XdOQ1f.png" alt="20220527001632"></p>
]]></content>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5加密算法C++实现</title>
    <url>/blog/2022/05d90a8c79.html</url>
    <content><![CDATA[<h2 id="实验目的"><a class="markdownIt-Anchor" href="#实验目的"></a> 实验目的</h2>
<p>本次实验通过C++编程实现MD5加密算法，通过了解MD5算法加深对Hash函数的认识</p>
<h2 id="实验原理"><a class="markdownIt-Anchor" href="#实验原理"></a> 实验原理</h2>
<p>Hash 函数是将任意长的数字串转换成一个较短的定长输出数字串的函数，输出的结果称为 Hash 值。Hash 函数具有如下特点：</p>
<ol>
<li>快速性：对于任意一个输入值 x，由 Hash 函数H(x) ，计算 Hash值 y，即H(x) = y是非常容易的</li>
<li>单向性：对于任意一个输出值 y，希望反向推出输入值 x，使得H(x) = y，是非常困难的。</li>
<li>无碰撞性：包括强无碰撞性和弱无碰撞性，一个好的 Hash 函数应该满足强无碰撞性，即找到两个不同的数字串 x 和 y，满足H(x) = H(y)，在计算上是不可能的。</li>
</ol>
<p>MD5算法满足Hash特性，然而需要说明的是,2004年8月，在Crypto2004国际密码学会议上，山东大学王小云教授发现了一种找到MD5散列函数的碰撞的方法，即可以找到两个不同的输入x和y，得到相同的Hash结果。这一发现意味着采用MD5算法的数字签名、完整性检验等信息安全应用系统将不在安全了，这就促使信息安全系统的设计者尽快去寻找和探索新的Hash算法。</p>
<h2 id="md5算法模块拆解"><a class="markdownIt-Anchor" href="#md5算法模块拆解"></a> MD5算法模块拆解</h2>
<ol>
<li>
<p>获取输入，该模块用于获取一段明文字符，不定长</p>
</li>
<li>
<p>对获取的不定长字符串进行填充,使其字节长度满足n*512 + 448, 填充规则是第一位填充1，后续填充0，直至满足上述条件，最后再用一个64为二进制字符串表示明文长度，这样填充之后长度为(n + 1)*512</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// 填充字符串</span>
<span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">padding</span><span class="hljs-params">(string src)</span> </span>{
    <span class="hljs-comment">// 以512位,64个字节为一组</span>
    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num = ((src.<span class="hljs-built_in">length</span>() + <span class="hljs-number">8</span>) / <span class="hljs-number">64</span>) + <span class="hljs-number">1</span>;
    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">rec</span><span class="hljs-params">(num*<span class="hljs-number">16</span>)</span></span>;
    strlength = num*<span class="hljs-number">16</span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; src.<span class="hljs-built_in">length</span>(); i++){
        <span class="hljs-comment">// 一个unsigned int对应4个字节，保存4个字符信息</span>
        rec[i&gt;&gt;<span class="hljs-number">2</span>] |= (<span class="hljs-type">int</span>)(src[i]) &lt;&lt; ((i % <span class="hljs-number">4</span>) * <span class="hljs-number">8</span>);
    }
    <span class="hljs-comment">// 补充1000...000</span>
    rec[src.<span class="hljs-built_in">length</span>() &gt;&gt; <span class="hljs-number">2</span>] |= (<span class="hljs-number">0x80</span> &lt;&lt; ((src.<span class="hljs-built_in">length</span>() % <span class="hljs-number">4</span>)*<span class="hljs-number">8</span>));
    <span class="hljs-comment">// 填充原文长度</span>
    rec[rec.<span class="hljs-built_in">size</span>()<span class="hljs-number">-2</span>] = (src.<span class="hljs-built_in">length</span>() &lt;&lt; <span class="hljs-number">3</span>);
    <span class="hljs-keyword">return</span> rec;
}
</code></pre>
</li>
<li>
<p>字符串分块函数，将上述填充之后的字符串分割为L个512字节长度的字符串</p>
</li>
<li>
<p>循环压缩函数：对每个512-bit分组进行64轮迭代运算</p>
<ol>
<li>
<p>对分组（A, B, C, D）中的A进行迭代运算<br>
公式为：A &lt;= B + ((A + f(B,C,D) + X[k] + T[i])) &lt;&lt; S[i]<br>
其中：</p>
<ul>
<li>A,B,C,D代表MD5缓冲区当前的数值</li>
<li>f为轮函数，1-16轮迭代使用F函数，17-32轮迭代使用G函数，33-48轮迭 代使用H函数，49-64轮迭代使用I函数</li>
</ul>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// F函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> (b &amp; c) | ((~b) &amp; d);
}
<span class="hljs-comment">// G函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">G</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> (b &amp; d) | (c &amp; (~d));
}
<span class="hljs-comment">// H函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">H</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> b ^ c ^ d;
}
<span class="hljs-comment">// I函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">I</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> c ^ (b | (~d));
}
<span class="hljs-comment">// 移位操作函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">shift</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> n)</span> </span>{
    <span class="hljs-keyword">return</span> (a &lt;&lt; n) | (a &gt;&gt; (<span class="hljs-number">32</span> - n));
}
</code></pre>
<ul>
<li>X[k]代表当前处理消息分组的第k个32位字，X[k]由第n轮迭代对应的顺序表决定</li>
<li>T[i]代表T表的第i项的值，T[i] = int(2^32 * |sin(i)|)</li>
<li>S[i]对应第i轮的左循环移位的s值</li>
</ul>
</li>
<li>
<p>对分组（A,B,C,D）作循环轮换<br>
公式为：（B,C,D,A）&lt;=（A,B,C,D）</p>
</li>
<li>
<p>按照1， 2步骤进行四轮循环压缩</p>
</li>
</ol>
<pre class="highlight"><code class="C++">    <span class="hljs-comment">// 循环压缩</span>
 <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">iterateFunc</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>* X, <span class="hljs-type">int</span> size = <span class="hljs-number">16</span>)</span> </span>{
     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a = tempA,
                  b = tempB,
                  c = tempC,
                  d = tempD,
                  rec = <span class="hljs-number">0</span>,
                  g, k;
     <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++) {
         <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">16</span>) {
             <span class="hljs-comment">// F迭代</span>
             g = <span class="hljs-built_in">F</span>(b, c, d);
             k = i;
         }
         <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">32</span>) {
             <span class="hljs-comment">// G迭代</span>
             g = <span class="hljs-built_in">G</span>(b, c, d);
             k = (<span class="hljs-number">1</span> + <span class="hljs-number">5</span>*i) % <span class="hljs-number">16</span>;
         }
         <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">48</span>) {
             <span class="hljs-comment">// H迭代</span>
             g = <span class="hljs-built_in">H</span>(b, c, d);
             k = (<span class="hljs-number">5</span> + <span class="hljs-number">3</span>*i) % <span class="hljs-number">16</span>;
         }
         <span class="hljs-keyword">else</span> {
             <span class="hljs-comment">// I迭代</span>
             g = <span class="hljs-built_in">I</span>(b, c, d);
             k = (<span class="hljs-number">7</span>*i) % <span class="hljs-number">16</span>;
         }
         rec = d;
         d = c;
         c = b;
         b = b + <span class="hljs-built_in">shift</span>(a + g + X[k] + T[i], s[i]);
         a = rec;
     }
     tempA += a;
     tempB += b;
     tempC += c;
     tempD += d;
 }
</code></pre>
</li>
<li>
<p>MD5编码主函数：用于调用前面的功能函数对明文字符串进行MD5编码</p>
<ol>
<li>输入待加密的明文字符串</li>
<li>对明文字符串进行填充</li>
<li>对填充后的明文字符串进行分块（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">Y_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>使用预设的初始值初始化MD5缓冲区间（IV）</li>
<li>对各个分块字符串利用公式HMD5(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mo stretchy="false">(</mo></msub><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CV_(i-1), Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)进行循环压缩，运算结果作为下一块的输入（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CV_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>当所有的分块迭代完成后，输出结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">CV_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，L表示最后一个分块的序号</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// MD5加密函数</span>
 <span class="hljs-function">string <span class="hljs-title">encode</span><span class="hljs-params">(string src)</span> </span>{
     vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; rec = <span class="hljs-built_in">padding</span>(src);
     <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; strlength/<span class="hljs-number">16</span>; i++) {
         <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num[<span class="hljs-number">16</span>];
         <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">16</span>; j++) {
             num[j] = rec[i*<span class="hljs-number">16</span>+j];
         }
         <span class="hljs-built_in">iterateFunc</span>(num, <span class="hljs-number">16</span>);
     }
     <span class="hljs-keyword">return</span> format(tempA) + format(tempB) + format(tempC) + format(tempD);
 }
</code></pre>
</li>
</ol>
<h2 id="程序流程图"><a class="markdownIt-Anchor" href="#程序流程图"></a> 程序流程图</h2>
<p><img src="https://s2.loli.net/2022/05/23/Uj4DuPtrp7wq82v.png" alt="result4"></p>
<h2 id="测试结果"><a class="markdownIt-Anchor" href="#测试结果"></a> 测试结果</h2>
<p>对测试数据进行测试，测试结果如下：<br>
<img src="https://s2.loli.net/2022/05/23/1blRcNfZUIHEsOu.png" alt="result1"><br>
<img src="https://s2.loli.net/2022/05/23/3SCV7qa4QboycfD.png" alt="result"></p>
<h2 id="雪崩测试"><a class="markdownIt-Anchor" href="#雪崩测试"></a> 雪崩测试</h2>
<p>对每个测试数据均在字符串末尾加上一个空格得到密文改变位数如下<br>
<img src="https://s2.loli.net/2022/05/23/mz6sGwdfiHr5lQD.png" alt="result2"></p>
<table>
<thead>
<tr>
<th style="text-align:center">数据i</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">平均改变位数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">改变位数</td>
<td style="text-align:center">31</td>
<td style="text-align:center">28</td>
<td style="text-align:center">29</td>
<td style="text-align:center">30</td>
<td style="text-align:center">30</td>
<td style="text-align:center">29</td>
<td style="text-align:center">28</td>
<td style="text-align:center">29</td>
</tr>
</tbody>
</table>
<h2 id="源代码"><a class="markdownIt-Anchor" href="#源代码"></a> 源代码</h2>
<pre class="highlight"><code class="C++"><span class="hljs-comment">//MD5.h</span>
<span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span>

<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;

<span class="hljs-meta">#<span class="hljs-keyword">define</span> A 0x67452301</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> B 0xefcdab89</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> C 0x98badcfe</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> D 0x10325476</span>

<span class="hljs-type">const</span> <span class="hljs-type">char</span> str16[] = <span class="hljs-string">"0123456789abcdef"</span>;

<span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> T[] = {
    <span class="hljs-number">0xd76aa478</span>,<span class="hljs-number">0xe8c7b756</span>,<span class="hljs-number">0x242070db</span>,<span class="hljs-number">0xc1bdceee</span>,
    <span class="hljs-number">0xf57c0faf</span>,<span class="hljs-number">0x4787c62a</span>,<span class="hljs-number">0xa8304613</span>,<span class="hljs-number">0xfd469501</span>,
    <span class="hljs-number">0x698098d8</span>,<span class="hljs-number">0x8b44f7af</span>,<span class="hljs-number">0xffff5bb1</span>,<span class="hljs-number">0x895cd7be</span>,
    <span class="hljs-number">0x6b901122</span>,<span class="hljs-number">0xfd987193</span>,<span class="hljs-number">0xa679438e</span>,<span class="hljs-number">0x49b40821</span>,
    <span class="hljs-number">0xf61e2562</span>,<span class="hljs-number">0xc040b340</span>,<span class="hljs-number">0x265e5a51</span>,<span class="hljs-number">0xe9b6c7aa</span>,
    <span class="hljs-number">0xd62f105d</span>,<span class="hljs-number">0x02441453</span>,<span class="hljs-number">0xd8a1e681</span>,<span class="hljs-number">0xe7d3fbc8</span>,
    <span class="hljs-number">0x21e1cde6</span>,<span class="hljs-number">0xc33707d6</span>,<span class="hljs-number">0xf4d50d87</span>,<span class="hljs-number">0x455a14ed</span>,
    <span class="hljs-number">0xa9e3e905</span>,<span class="hljs-number">0xfcefa3f8</span>,<span class="hljs-number">0x676f02d9</span>,<span class="hljs-number">0x8d2a4c8a</span>,
    <span class="hljs-number">0xfffa3942</span>,<span class="hljs-number">0x8771f681</span>,<span class="hljs-number">0x6d9d6122</span>,<span class="hljs-number">0xfde5380c</span>,
    <span class="hljs-number">0xa4beea44</span>,<span class="hljs-number">0x4bdecfa9</span>,<span class="hljs-number">0xf6bb4b60</span>,<span class="hljs-number">0xbebfbc70</span>,
    <span class="hljs-number">0x289b7ec6</span>,<span class="hljs-number">0xeaa127fa</span>,<span class="hljs-number">0xd4ef3085</span>,<span class="hljs-number">0x04881d05</span>,
    <span class="hljs-number">0xd9d4d039</span>,<span class="hljs-number">0xe6db99e5</span>,<span class="hljs-number">0x1fa27cf8</span>,<span class="hljs-number">0xc4ac5665</span>,
    <span class="hljs-number">0xf4292244</span>,<span class="hljs-number">0x432aff97</span>,<span class="hljs-number">0xab9423a7</span>,<span class="hljs-number">0xfc93a039</span>,
    <span class="hljs-number">0x655b59c3</span>,<span class="hljs-number">0x8f0ccc92</span>,<span class="hljs-number">0xffeff47d</span>,<span class="hljs-number">0x85845dd1</span>,
    <span class="hljs-number">0x6fa87e4f</span>,<span class="hljs-number">0xfe2ce6e0</span>,<span class="hljs-number">0xa3014314</span>,<span class="hljs-number">0x4e0811a1</span>,
    <span class="hljs-number">0xf7537e82</span>,<span class="hljs-number">0xbd3af235</span>,<span class="hljs-number">0x2ad7d2bb</span>,<span class="hljs-number">0xeb86d391</span> };

<span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> s[] = { <span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,
                           <span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,
                           <span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,
                           <span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>};

<span class="hljs-comment">// 第一部分是要进行 HASH 运算的原始明文，第二部分则是其对应的 HASH 值</span>
<span class="hljs-type">static</span> <span class="hljs-type">const</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">data</span>{
    string msg;
    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> hash[<span class="hljs-number">16</span>];
}tests[] = {
    { <span class="hljs-string">""</span>,
      { <span class="hljs-number">0xd4</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x04</span>, 
        <span class="hljs-number">0xe9</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x7e</span> } },
    { <span class="hljs-string">"a"</span>,
      {<span class="hljs-number">0x0c</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xa8</span>, 
       <span class="hljs-number">0x31</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x61</span> } },
    { <span class="hljs-string">"abc"</span>,
      { <span class="hljs-number">0x90</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xb0</span>, 
        <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x72</span> } },
    { <span class="hljs-string">"message digest"</span>, 
      { <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x8d</span>, 
        <span class="hljs-number">0x52</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xd0</span> } }, 
    { <span class="hljs-string">"abcdefghijklmnopqrstuvwxyz"</span>,
      { <span class="hljs-number">0xc3</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x00</span>, 
        <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x3b</span> } },
    { <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>,
      { <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0xf5</span>, 
        <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x9f</span> } },
    { <span class="hljs-string">"12345678901234567890123456789012345678901234567890123456789012345678901234567890"</span>,
      { <span class="hljs-number">0x57</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x55</span>, 
        <span class="hljs-number">0xac</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x7a</span> } },

};

<span class="hljs-keyword">class</span> <span class="hljs-title class_">MD5</span> {
<span class="hljs-keyword">private</span>:
    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> tempA, tempB, tempC, tempD, strlength;
<span class="hljs-keyword">public</span>:
    <span class="hljs-built_in">MD5</span>() {
        tempA = A;
        tempB = B;
        tempC = C;
        tempD = D;
        strlength = <span class="hljs-number">0</span>;
    }
    <span class="hljs-comment">// 填充字符串</span>
    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">padding</span><span class="hljs-params">(string src)</span> </span>{
        <span class="hljs-comment">// 以512位,64个字节为一组</span>
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num = ((src.<span class="hljs-built_in">length</span>() + <span class="hljs-number">8</span>) / <span class="hljs-number">64</span>) + <span class="hljs-number">1</span>;
        <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">rec</span><span class="hljs-params">(num*<span class="hljs-number">16</span>)</span></span>;
        strlength = num*<span class="hljs-number">16</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; src.<span class="hljs-built_in">length</span>(); i++){
            <span class="hljs-comment">// 一个unsigned int对应4个字节，保存4个字符信息</span>
            rec[i&gt;&gt;<span class="hljs-number">2</span>] |= (<span class="hljs-type">int</span>)(src[i]) &lt;&lt; ((i % <span class="hljs-number">4</span>) * <span class="hljs-number">8</span>);
        }
        <span class="hljs-comment">// 补充1000...000</span>
        rec[src.<span class="hljs-built_in">length</span>() &gt;&gt; <span class="hljs-number">2</span>] |= (<span class="hljs-number">0x80</span> &lt;&lt; ((src.<span class="hljs-built_in">length</span>() % <span class="hljs-number">4</span>)*<span class="hljs-number">8</span>));
        <span class="hljs-comment">// 填充原文长度</span>
        rec[rec.<span class="hljs-built_in">size</span>()<span class="hljs-number">-2</span>] = (src.<span class="hljs-built_in">length</span>() &lt;&lt; <span class="hljs-number">3</span>);
        <span class="hljs-keyword">return</span> rec;
    }
    <span class="hljs-comment">// F函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> (b &amp; c) | ((~b) &amp; d);
    }
    <span class="hljs-comment">// G函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">G</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> (b &amp; d) | (c &amp; (~d));
    }
    <span class="hljs-comment">// H函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">H</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> b ^ c ^ d;
    }
    <span class="hljs-comment">// I函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">I</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> c ^ (b | (~d));
    }
    <span class="hljs-comment">// 移位操作函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">shift</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> n)</span> </span>{
        <span class="hljs-keyword">return</span> (a &lt;&lt; n) | (a &gt;&gt; (<span class="hljs-number">32</span> - n));
    }
    <span class="hljs-comment">// 循环压缩</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">iterateFunc</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>* X, <span class="hljs-type">int</span> size = <span class="hljs-number">16</span>)</span> </span>{
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a = tempA,
                     b = tempB,
                     c = tempC,
                     d = tempD,
                     rec = <span class="hljs-number">0</span>,
                     g, k;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++) {
            <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">16</span>) {
                <span class="hljs-comment">// F迭代</span>
                g = <span class="hljs-built_in">F</span>(b, c, d);
                k = i;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">32</span>) {
                <span class="hljs-comment">// G迭代</span>
                g = <span class="hljs-built_in">G</span>(b, c, d);
                k = (<span class="hljs-number">1</span> + <span class="hljs-number">5</span>*i) % <span class="hljs-number">16</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">48</span>) {
                <span class="hljs-comment">// H迭代</span>
                g = <span class="hljs-built_in">H</span>(b, c, d);
                k = (<span class="hljs-number">5</span> + <span class="hljs-number">3</span>*i) % <span class="hljs-number">16</span>;
            }
            <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">// I迭代</span>
                g = <span class="hljs-built_in">I</span>(b, c, d);
                k = (<span class="hljs-number">7</span>*i) % <span class="hljs-number">16</span>;
            }
            rec = d;
            d = c;
            c = b;
            b = b + <span class="hljs-built_in">shift</span>(a + g + X[k] + T[i], s[i]);
            a = rec;
        }
        tempA += a;
        tempB += b;
        tempC += c;
        tempD += d;
    }
    <span class="hljs-comment">// 整理输出</span>
    <span class="hljs-function">string <span class="hljs-title">format</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num)</span> </span>{
        string res = <span class="hljs-string">""</span>;
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> base = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">8</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) {
            string tmp = <span class="hljs-string">""</span>;
            <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b = (num &gt;&gt; (i * <span class="hljs-number">8</span>)) % base &amp; <span class="hljs-number">0xff</span>;
            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">2</span>; j++) {
                tmp = str16[b%<span class="hljs-number">16</span>] + tmp;
                b /= <span class="hljs-number">16</span>;
            }
            res += tmp;
        }
        <span class="hljs-keyword">return</span> res;
    }
    <span class="hljs-comment">// 编码函数</span>
    <span class="hljs-function">string <span class="hljs-title">encode</span><span class="hljs-params">(string src)</span> </span>{
        vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; rec = <span class="hljs-built_in">padding</span>(src);
        <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; strlength/<span class="hljs-number">16</span>; i++) {
            <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num[<span class="hljs-number">16</span>];
            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">16</span>; j++) {
                num[j] = rec[i*<span class="hljs-number">16</span>+j];
            }
            <span class="hljs-built_in">iterateFunc</span>(num, <span class="hljs-number">16</span>);
        }
        <span class="hljs-keyword">return</span> format(tempA) + format(tempB) + format(tempC) + format(tempD);
    }
};
</code></pre>
<pre class="highlight"><code class="C++">\\MD5.cpp
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">"MD5.h"</span></span>

<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    MD5 test;
    string a = <span class="hljs-string">""</span>;
    cout &lt;&lt; <span class="hljs-string">"Plain Text: "</span>;
    <span class="hljs-built_in">getline</span>(cin,a);
    cout &lt;&lt; <span class="hljs-string">"result: "</span> &lt;&lt; test.<span class="hljs-built_in">encode</span>(a) &lt;&lt; endl;
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
}
</code></pre>
]]></content>
      <tags>
        <tag>Homework</tag>
        <tag>密码学</tag>
        <tag>MD5</tag>
      </tags>
  </entry>
  <entry>
    <title>Seven</title>
    <url>/blog/2022/1257958268.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6e28d3bc29aa455c3335d3d6191dfcafdcbf125e203c63c270626347575e8536">d33bff33cf6a3d4d00d3ad92404d4389ef936b55729e2aad1bda5ec0bc68ee6cfa3a4a6416f25c866b825951a44079423804772d2e5d2f1edc223186231f670fcb2c07e31d66c9f64974bce673b33b9ed31412c6b424b4913619d50c1eff740c8f5173ad647c9450c79cd7904d8b419aa7f62a85bd0d1f45edc920024abc42b313c751177bc13dfe0efe8bc7396b9433a9e16c4e4f0e84a489e72af307264397ed4b5f9337a2d6e625022ec33a9acf6d48c2fb63e42a7a1c4abccb5d41a8689317e12f40af4a2313eba5f2ec554d2a16cf998061bd7b33725fd70ebfad7814f0fb8eb9477ab92bacf858c1aed8ded5519b8690458bb1fd7a27d2155bdfb07003dd6acd010b5c69503dce5109b743e722dec324956b0f15547059d42be366a8695202e369f3b8d6eb1ed54703f7de9f962c35495b1ea4cc069ea4f922c9fa6df3435b5efc668c7604f05489451d422d0e1f62af895fb0c898630066ad32a41016a0b181aaf5643c5ffe5d7a0f07b90b44313cb679d0c81bb2732a5ed3c5310f565c44688821131bdee87206a12ad2a74d48696c2b223fdaf41c0f7168d0c37a77f54434eb6e7cebb7ebaeb277a115cf5126870060bed55f2b568c133af4b200cab4e5091a39032e3c3f517484c2722c36b303c1fcd4eee67a86ae5ae3a09894e0897b0ab698f07db2505571d43a0938b0bddf3c49e3d710e5198e4fa095947f371b28a66f2486cf903583c9c47c29b03b0100acc66edadfc0ceead3324084a8aa</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>SVM</title>
    <url>/blog/2023/0375378e04.html</url>
    <content><![CDATA[<blockquote>
<p>个人笔记</p>
<p><a href="https://www.bilibili.com/video/BV16T4y1y7qj/?spm_id_from=333.337.search-card.all.click&amp;vd_source=225bd8c5926e9f37145c993e11dac3d0">【数之道】支持向量机SVM是什么</a></p>
</blockquote>
<h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2>
<ul>
<li>间隔Margin</li>
<li>支持向量（Support Vector）：只是指临界向量吗</li>
<li>正超平面、决策超平面、负超平面</li>
<li>损失因子：异常值</li>
<li>软间隔（Soft Margin）：考虑异常值的间隔</li>
<li>硬间隔（Hard Margin）：不考虑异常值的间隔</li>
</ul>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306164100.png" alt="20230306164100"></p>
<ul>
<li>KKT条件：<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306163819.png" alt="20230306163819"></li>
<li>对偶性：</li>
</ul>
<h2 id="升维转换"><a class="markdownIt-Anchor" href="#升维转换"></a> 升维转换</h2>
<p>对于在低纬度下无法轻松区分的数据可以增加维度进行区分，如下图（图源B站<a href="https://space.bilibili.com/152254793">FunInCode</a>，侵删）：<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306164014.png" alt="20230306164014"><br>
因此可以考虑合适的方法进行升维转换：</p>
<ul>
<li>采用合适的升维函数在高纬度下求解SVM模型，找到对应的高维决策超平面，预测数据时先对数据进行升维，再根据高维决策边界超平面进行判断，但是这种方法需要确定的升维函数，以及更多的数据存储和计算需求</li>
</ul>
<p>但是一般这种方法耗费很大，因此就要用到核技巧了</p>
<h2 id="核技巧kernel-trick"><a class="markdownIt-Anchor" href="#核技巧kernel-trick"></a> 核技巧(Kernel Trick)</h2>
<p>核技巧可以使SVM在低维就可以进行高维的区别对比</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306170123.png" alt="20230306170123"></p>
<h3 id="高斯核函数rbfradial-basis-kernel"><a class="markdownIt-Anchor" href="#高斯核函数rbfradial-basis-kernel"></a> 高斯核函数（RBF，Radial Basis Kernel）</h3>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306170437.png" alt="20230306170437"></p>
<p>取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span> 为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ,高斯核函数可以转化为自然对数的形式，对其进行泰勒展开，即可通过控制参数获得从0维到无穷维的表达式</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230306170928.png" alt="20230306170928"></p>
]]></content>
  </entry>
  <entry>
    <title>Test Password</title>
    <url>/blog/2022/087c8ccace.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="76478d7895a307173b442f83c2c5503366f4eea02630e905e839d98fbfd578d3">10d79030e8222445804370796b90fca13e477bb55bd8c706f4e41a72ef10559d3c57b04d1c4fa3b4a51ff11f6ad51547d44864a7991310636b21a3b63104cbc8b1367f5cedbf35a34ebc9245d4f1599c74ed71628743872782821acbc48af525ab662d3c78b8a950fe1a2af5727275aed7da72b975220fc0fafc8e03abd30eda6da015ce0e166d22b18edf7c851c35ce2596cc0e30c1410c7728fbcf8b8a7032f25d84f22304b3317a0ce5a57796ef78db597ebc66bc58168cd3bb03ed12869efa6ba3333665aebbdef5dc4b722da22506b5a0a881b7373169117f4dcab40b2eccbdded17e75f16dad827b161cba5c6994f6430e3de3b44456bf6d7defc02aabe5036f27f55fbd34b6a20b5aec2582690cbc8b78f58de33829d562f161f55e6eba0a1283f2a1a57c19bdb4f3f55e5d0fef9cb349dacdf918f43ad62bef3c23ea9440508cf257cce2f33bd18aae633e137431af47803907e8c8185fa5820536bb5d24da349b6faa3f5d6ca8b36b3658277f11f7e018bc17722c344e8bae77018cf5b462baa32e1d3e04403a2477424b3d6e40221411c4cacbc7a99b59166416c01ae899dbad4bdf4f13aa20d0571a0442c4339406bb649f261b3d4f04b350804b21a30a282e91ee294802c73e5e14296176124222b009d6ba517983acfbafbd4ae6821f26767396c8029722aa52c7ce8635bd041abdee5ba958dea8471bc207142a8d19d6fd211c17dc15a634c97b0e7c8d9d4b84016d0a2c59c3a648c2665c78f7bf0c054ede8b6e93a344f5dfe14eda1056033e9e26de910911083dbab3d97366eb78b60eb6394b3f91e1807eb5c7123a2997aeca6e87dd50a05cf0c9da5711f43138290afe45c94e6f95f429d93b92416d891fa7dc916d0d0d29696902a97dfc23ddd445620173ab39731feff26dabfaddca7d9ed3b5712127f8da74b55197f1c98be50e866d3729e8e6c2b951f497d0a9a93a41899496c998371f45d62e59f1b86009b28e4d381c3645e1e8e41b26d9e725566d50b0ce42ed4f5bceef9c103cfd918f5097fe56446be214eca753da8947c488a6f3d9c5b8dcd3f5399ecc09b8b17605a1c44d8e661a2665ca8da442c1dee7c477285e36f3818992e1ab32015c6e8ddb4e603c586c321efa47ea145883f955be336c737ea92ea3889c7a0b02432ff1d40019fc4fc4d8415e75226422dc295d8a11d80e72429d0ade1e0d1547235fd30b2be36e5ed6d0d15678642180682705475882d05226745f9a2792a51549edc5a0c71f605626c962039aecb26e9fd11ec97b17f2e63df2b2d02af76423e76f6dc98d735cf98a9c0d06fe44076e1c6f8ac4b1e27044a96246d19afdbf29f3b9a9c141ee00d0cca64ceb04a8dd9ba87b443e323728ef4e596220cf413fce21681652f1cd78a635cb611b8d05be3d7915cb484cf2631011ddd4d560ba2a827c4955887c194ad319cca4efb9fe8955f5f993f66dd5b9961136f62337afcc94e37b8206e222063c6c612f912dfd60c7ea5460dc2fbb17dc8ae8bcfd48f77470ca301e25af3da7cb3c954ffefb393b415144e4e0843029f70f9331290cf492dc24482ba1a81e6c1ef79daf2f540d539eb71ffa592726f5d56869b6678fea4e9c251118b6fdf8774f0fde25a5138fd4c69bc4a3f6993f34f5adac670a22fc67a364e3a0b2eeceab42ab9e5e494f1153fae8984e1620f8d2547e237261369b71a0e810dabb9812526133d6882cdafed956e752ffcbd3fed0f3502638ba42d2fce4e51b7c081f75157922c4671eadcb91df17368dfb51b1d53d1aad86c6afcf4b098e1d460aa08ca4e93e5af3e90bc1dac7a79922ddde135bda9f34824659b71c74943d251dfdae640d2049fa1461f903e1e22fe0e5689d3918843442c8274cf4d53a1382a86ee4ee223b2e9bf0b42d109957212736dc14e49952f7808f411374376ea7f845796e75a4bd7a8cc45b36e2319a2dbefffb000638a463e12ff378a13da97bc45d2761668f0952de2ac8a0dc43d56ca52b048aef5a93a605cf01259ae327056fcbed286899daa6d8376e18ce5c54e6afce1438dfee52e89f621f81ba0e142b91abff22e68cff778ba291247871302db24abe91b078c5806915c49bf0c8b5181bba3fd8b31018020db3e4d2a56e3a19e73631559cc65186dcc9fa74c46b23d0db47c3bd1ae6edec579ee475dc7637baf9012937cddb0814d6fbc5798cb16195eba69d245d3263cefbb654e71f96b365ab76f21ec70ad987a3ba64e478d1d664bee32cf4d758b33e315b8ba6bcf2eb64d1e134d4b380428b8e548df6bf0313224acb712b44e0506a86e7de5cae9b430316ba9f18f1310f6e4c2d8bc9cb07d55077398249d75f00a578a0977ea8a327f05b7f4e21076792e9faaee38d9d744fd957865b30fa50889be74c45958672f845a4fa3c98c65ad9481eea116e85fc1671d5b11e81d592b5c63351bb1535efddd619a3253bf9ced40eba7decb401afdd4205eca4146413fdace686da25a080c624caedb0638eee1c1893174db4388246ce01e3fbc6d2fa8c8951edc0ade5b064d07012a04d00ba4bf3e4e0759f0537aab0578eb54878d608ea6626f2842df91d64f02198fef9c2b0785757888e337f7a554cf63f7d038fa816546a1fc8adb2edae24d75b0628d2cecbc46b5e25df0e440ea62b187b8338a3e88d6ddb0067de85324eea06f86bec2dc1429139e965237fe7e82f35f33d9b0170f288a535e84c61a6f69d321cb9aa9d4a8b6b238f287660cecab8d53cd72b170c8711a2060b38a178441c08a34929e7735f9fd0b9c8282e778edfd68a0f0d7698df144d4fa8860aa98e04cbfdd5ba92d21e7d9ffa57482429335b68688708e9cf70fa57a21eca996a1a3ed932bfe97c6e88a34d33e0ec21cdb0d65bbf9af126de82190e7e24c28fd611eeb12b9e20c94b441379b5a5d42df6b884ef8814f3aa9cca936cf0c76c17a8c8108c73dff8a64d47640263dfe6361b37ece889198a94bd55a2116e6a82db7d5dd8d199a15fb2a3b8286cc62fde57059feec48a8a48e97ad96e17fd5ffbaad4bbcadd5de63477e832d15a2fa2585974551fb50d6af87601d6cdb3421fefc4bac81206e3ac7e30da67005f02889c851ae320e7513b0b1fbec3bc71b8791070e379d9d191c72a96be3a35b62a45f3add44f311eb834601cdf60d8ce4673dd9175d38a30dc556869656a9d22d7135c94ffab68d3684a3670b625b9a117e1be394f541285ef334784bf0c6a30f0743b536a44d97b1863e836b9fda37bab4c03d14a9a0fe6e8477f189820a175a2039f05f1913adc16b494527b9e00df13732bdca27044fab3a00a27ecf7abfa283d094e596a2c8c10517d210de54fb3883dc4e980496e69dfbef21dbd690e806d33f8308cfee95222452ef3b756193d2e4b10b21db060a7c4d666befae6ab223c7a2f3d7aff7c92623773c33b49e8c5df4bfb33b447d3661aaa7fa6979924d761544e1d2964c0e63154c1593f4aa611fb3f1518f522a6fb9d8f2c90308f0c221a89ee5c3a03e12ab7ea3daae19c01234cdd2d43bf9f5b262dbcf7977c6a36d6717b368ef47fd4cb4b88cbbe31f29a046ffa0f42f13d8530a6d72485396323c33b55aecf49057bfc86c98c120403700475a2651a11fac9f22f5e4993264bbfb78845e34c1a058ebbae0af85c91c49021cb385df253b5223ac0dcba9d40a5c106a26aef5dce942e005934e0af5bd6762985343e00737aa0a2b270e9198b377ace57f0d64488850a4111058c487da62f93fa86d6d6a56d37bb0cfa9423c57ce626524d1995c0a7463f38ee4c3d6532431d894eb66ad77919695d12837124e515846474f0552848030ecce77b6ab5bb1f488231e5e9e265ae25a3e5bb7df96ca71812620a011412b930abb2758788b7eb10ab9ac232f44ba5833aabda73280881225fe7d84d8fd4e1244b1a0243a58aa57b16c63db120ac827b7996404488dc1a1ad1fccc55c02003e1fda21c1971126e867ad0e26e383d14a26d59a8a7382db8743f9584d1eec2294cee4f0e3f6509232d55857134b9ee96f7812a2a64d0644c99d10724eae3e05a72e28474e0f7500074b5ab2d5740bae4ed3a3777b7ed696b954503a4134329adb3e3c2cba7a9433797211ce9a6e116830078fa6578f493c47e4c14941160050ba2cc057d147d49dae9ba60280e1d8f3b88c4aade3e05516dfa8a8eee5d39428004b870c1e84b45fccbcbcd079f0dee1bb7521b8106376214929a21a6</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!（The password of this article is:hello）</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Ucore_lab1</title>
    <url>/blog/2021/0420210413.html</url>
    <content><![CDATA[<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<p>在解压后的ucroe源码包中使用make命令即可以生成所需的目标文件,例如在本次实验中</p>
<pre class="highlight"><code class="">user@system:~../lab1$ make
</code></pre>
<p>之后就会在bin文件夹生成一系列的目标文件：</p>
<ul>
<li>user.img : 被qemu访问的虚拟硬盘文件</li>
<li>kernel : ELF格式的toy ucore kernel执行文，嵌入到了ucore.img中</li>
<li>bootblock : 虚拟的硬盘主引导扇区(512字节)，包含了bootloader执行代码，同样嵌入了</li>
<li>sign : 外部执行程序，用来生成虚拟的硬盘主引导扇区<br>
还有其他文件，不一一列举。</li>
</ul>
<p>如果要对修改后的ucore代码和ucore 源码进行比较，可以使用diff命令。</p>
<pre class="highlight"><code class="">user@system:~../lab1$ diff 目标文件 源文件
</code></pre>
<h2 id="练习1"><a class="markdownIt-Anchor" href="#练习1"></a> 练习1</h2>
<h3 id="1-操作系统镜像文件ucoreimg如何生成"><a class="markdownIt-Anchor" href="#1-操作系统镜像文件ucoreimg如何生成"></a> 1. 操作系统镜像文件ucore.img如何生成？</h3>
<p>执行指令</p>
<pre class="highlight"><code class="">user@system:~../lab1$ make "V="
</code></pre>
<p>可以获得Makefile中执行的具体指令，详细信息如下（仅列举有关ucore.img文件生成相关指令）:</p>
<pre class="highlight"><code class="">   + cc kern/init/init.c           
     gcc -c kern/init/init.c -o obj/kern/init/init.o

   + cc kern/libs/readline.c       
     gcc -c kern/libs/readline.c -o 
     obj/kern/libs/readline.o

   + cc kern/libs/stdio.c          
     gcc -c kern/libs/stdio.c -o obj/kern/libs/stdio.o

   + cc kern/debug/kdebug.c        
     gcc -c kern/debug/kdebug.c -o obj/kern/debug/kdebug.o

   + cc kern/debug/kmonitor.c      
     gcc  -c kern/debug/kmonitor.c -o         
     obj/kern/debug/kmonitor.o

   + cc kern/debug/panic.c         
     gcc  -c kern/debug/panic.c -o obj/kern/debug/panic.o

   + cc kern/driver/clock.c       
     gcc  -c kern/driver/clock.c -o obj/kern/driver/clock.o

   + cc kern/driver/console.c    
     gcc -c kern/driver/console.c -o 
     obj/kern/driver/console.o

   + cc kern/driver/intr.c       
     gcc -c kern/driver/intr.c -o obj/kern/driver/intr.o

   + cc kern/driver/picirq.c     
     gcc -c kern/driver/picirq.c -o 
     obj/kern/driver/picirq.o

   + cc kern/trap/trap.c          
     gcc -c kern/trap/trap.c -o obj/kern/trap/trap.o

   + cc kern/trap/trapentry.S      
     gcc -c kern/trap/trapentry.S -o 
     obj/kern/trap/trapentry.o

   + cc kern/trap/vectors.S        
     gcc -c kern/trap/vectors.S -o obj/kern/trap/vectors.o

   + cc kern/mm/pmm.c              
     gcc -c kern/mm/pmm.c -o obj/kern/mm/pmm.o

   + cc libs/printfmt.c            
     gcc -c libs/printfmt.c -o obj/libs/printfmt.o

   + cc libs/string.c             
     gcc -c libs/string.c -o obj/libs/string.o

   + ld bin/kernel                 
     ld -o bin/kernel  
     obj/kern/init/init.o      obj/kern/libs/readline.o 
     obj/kern/libs/stdio.o     obj/kern/debug/kdebug.o 
     obj/kern/debug/kmonitor.o obj/kern/debug/panic.o 
     obj/kern/driver/clock.o   obj/kern/driver/console.o 
     obj/kern/driver/intr.o    obj/kern/driver/picirq.o
     obj/kern/trap/trap.o      obj/kern/trap/trapentry.o 
     obj/kern/trap/vectors.o   obj/kern/mm/pmm.o  
     obj/libs/printfmt.o       obj/libs/string.o

   + cc boot/bootasm.S             //编译bootasm.S
    gcc  -c boot/bootasm.S -o obj/boot/bootasm.o

   + cc boot/bootmain.c            //编译bootmain.c
    gcc -c boot/bootmain.c -o obj/boot/bootmain.o

   + cc tools/sign.c               //编译sign.c
   gcc -c tools/sign.c -o obj/sign/tools/sign.o
   gcc -O2 obj/sign/tools/sign.o -o bin/sign

   + ld bin/bootblock              //根据sign规范生成bootblock
   ld -m  elf_i386 -nostdlib -N -e start -Ttext 0x7C00 
   obj/boot/bootasm.o  obj/boot/bootmain.o
   -o obj/bootblock.o
</code></pre>
<p>在makefile文件中搜索ucore.img可以找到</p>
<pre class="highlight"><code class="">	#create ucore.img
	UCOREIMG	:=$(call totarget,ucore.img)
	$(UCOREIMG):$(kernel)$(bootblock)
		
		$
		$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc
	$(call create_target,ucore.img)
</code></pre>
<p>可以看出ucore.img镜像文件是由kernel和bootblock文件生成的。</p>
<pre class="highlight"><code class="">	$(V)dd if=/dev/zero of=$@
	count=100000
</code></pre>
<p>这句语句可以看到UCOREIMG分配了一定空间。</p>
<pre class="highlight"><code class="">	(V)dd if=$(bootblock) of=$@ conv=notrunc
</code></pre>
<p>这句语句将bootblock复制到上面分配的空间当中。</p>
<pre class="highlight"><code class="">	$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc
</code></pre>
<p>该语句将kernel复制到分配的空间当中。</p>
<h4 id="1kernel生成"><a class="markdownIt-Anchor" href="#1kernel生成"></a> 1.kernel生成</h4>
<pre class="highlight"><code class="">	kernel = $(call totarget,kernel)
	$(kernel): tools/kernel.ld
</code></pre>
<p>通过链接来生成kernel目标文件</p>
<pre class="highlight"><code class="">	$(kernel): $(KOBJS)     
</code></pre>
<p>kernel的生成还依赖KOBJS</p>
<pre class="highlight"><code class="">	@echo + ld $@                
	$(V)$(LD) $(LDFLAGS) -T tools/kernel.ld -o $@ $(KOBJS)   
	@$(OBJDUMP) -S $@ &gt; $(call asmfile,kernel)  
	@$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' &gt; $(call symfile,kernel)
	$(call symfile,kernel)
	kernel = $(call totarget,kernel)
</code></pre>
<h4 id="2bootblock生成"><a class="markdownIt-Anchor" href="#2bootblock生成"></a> 2.bootblock生成</h4>
<pre class="highlight"><code class="">	bootfiles = $(call listf_cc,boot) 
</code></pre>
<p>用boot替换listf_cc里面的变量，将listf_cc的返回值赋给bootfiles,也就是滤出.c,.s文件</p>
<pre class="highlight"><code class="">	$(foreach f,$(bootfiles),$(call cc_compile,$(f),$(CC),$(CFLAGS) -Os -nostdinc))
</code></pre>
<p>编译bookfiles</p>
<pre class="highlight"><code class="">	bootblock = $(call totarget,bootblock) 
</code></pre>
<p>生成bootblock</p>
<pre class="highlight"><code class="">	$(bootblock): $(call toobj,$(bootfiles)) | $(call totarget,sign)
</code></pre>
<p>生成目标文件bootblock需要依赖于sign和bootfiles</p>
<pre class="highlight"><code class="">	@echo + ld $@       
</code></pre>
<p>将以下文件与bootblock连接起来</p>
<pre class="highlight"><code class="">	$(V)$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 $^ -o $(call toobj,bootblock)
	@$(OBJDUMP) -S $(call objfile,bootblock) &gt; $(call asmfile,bootblock)    
	@$(OBJCOPY) -S -O binary $(call objfile,bootblock) $(call outfile,bootblock)
	@$(call totarget,sign) $(call outfile,bootblock) $(bootblock)

	$(call create_target,bootblock)
</code></pre>
<h4 id="3生成sign工具"><a class="markdownIt-Anchor" href="#3生成sign工具"></a> 3.生成sign工具</h4>
<pre class="highlight"><code class="">	$(call add_files_host,tools/sign.c,sign,sign)
	$(call create_target_host,sign,sign)
</code></pre>
<ul>
<li>由sign工具、bootfile生成bootblock</li>
<li>由KOBJS生成kernel</li>
<li>由kernel和bootblock生成最终的ucore.img</li>
</ul>
<h3 id="2一个被系统认为是符合规范的硬盘主引导扇区的特征是什么"><a class="markdownIt-Anchor" href="#2一个被系统认为是符合规范的硬盘主引导扇区的特征是什么"></a> 2.一个被系统认为是符合规范的硬盘主引导扇区的特征是什么?</h3>
<p>通过查阅资料我们可以知道bootblock区域包含用于引导的最小指令集，而在上一个问题中我们发现bootblock的生成需要依赖于sign.c文件和bootfiles文件，其中bootfiles提供开机启动所需要的文件，而sign.c则代表生成bootblock的规范。<br>
因此，我们去在文件夹中查看sign.c文件。<br>
文件代码如下：</p>
<pre class="highlight"><code class="">    char buf[512];  //定义buf数组
    memset(buf, 0, sizeof(buf));
      // 把buf数组的最后两位置为 0x55, 0xAA
    buf[510] = 0x55;  
    buf[511] = 0xAA;
    FILE *ofp = fopen(argv[2], "wb+");
    size = fwrite(buf, 1, 512, ofp);
    if (size != 512) {       //大小为512字节
        fprintf(stderr, "write '%s' error, size is %d.\n", argv[2], size);            
        return -1;
    }
</code></pre>
<p>通过查看这里的代码，我们可以发现sign规范中给buf提供了512个字节的空间，而且bootblock的格式是最后两个字节分别是0x55和0xAA，而这也是操作系统课上提到的两个神奇的数。</p>
<h2 id="练习2"><a class="markdownIt-Anchor" href="#练习2"></a> 练习2</h2>
<h4 id="1使用qemu调试make文件"><a class="markdownIt-Anchor" href="#1使用qemu调试make文件"></a> 1.使用qemu调试make文件</h4>
<p>在进入lab1文件夹之后，使用命令 make debug 进入调试模式。<br>
（1）在查看了tools文件夹中的gdbinit文件之后，可以看到存在代码</p>
<pre class="highlight"><code class="">	target remote localhost：1234
</code></pre>
<p>这代表着在启动之后会连接qemu和gdb。<br>
（2）在make debug之后输入stepi，可以按照机器指令单步执行。<br>
（3）一开始进入的是init.c程序。提示是init the console。<br>
<img src="https://i.loli.net/2021/04/12/BYtSXi2GRELoAWr.jpg" alt="mmexport1618159483754"><br>
（4）再执行几次step执行源代码之后，就进入stdio.c文件。<br>
（5）像这样反复执行step/next语句，就可以按照程序源代码一步一步执行了。</p>
<h4 id="2在初始化位置0x7c00设置实地址断点"><a class="markdownIt-Anchor" href="#2在初始化位置0x7c00设置实地址断点"></a> 2.在初始化位置0x7c00设置实地址断点</h4>
<p>在tools文件夹中的gdbinit文件中增加"b*0x7c00"语句，可以在实地址0x7c00位置设置一个断点。<br>
<img src="https://i.loli.net/2021/04/12/tLjaWr6zifSFGms.jpg" alt="mmexport1618159486187"></p>
<h4 id="3单步跟踪反汇编得到的代码与bootasms和bootblockasm进行比较"><a class="markdownIt-Anchor" href="#3单步跟踪反汇编得到的代码与bootasms和bootblockasm进行比较"></a> 3.单步跟踪反汇编得到的代码与bootasm.s和bootblock.asm进行比较</h4>
<p>在位置0x7c00位置之后单步执行机器指令并且查看反汇编语句，和gedit打开的bootblock.asm文件进行对比。可以找到这个位置正好在bootblock.asm文件中。在位置0x7c00这里有着相同的语句。<br>
<img src="https://i.loli.net/2021/04/12/jPdDXh3wg8rTqIy.jpg" alt="mmexport1618159487968"><br>
注意在这里要在gdb中执行如下的指令</p>
<pre class="highlight"><code class="">	define hook-stop
	x/i $pc
	end
</code></pre>
<p>这样才可以进入反汇编的状态<br>
同时我们查看bootasm.s文件之后，可以看到这样的代码</p>
<pre class="highlight"><code class="">	\#Set up the stack pointer and call into C. The stack region is from 0--start(0x7c00)
	movl $0x0, %ebp
	movl $start, %esp
	call bootmain
</code></pre>
<p>意味着从这里开始跳转到0x7c00.</p>
<h4 id="4自己找一个bootloader或者内核中的代码位置设置断点并进行测试"><a class="markdownIt-Anchor" href="#4自己找一个bootloader或者内核中的代码位置设置断点并进行测试"></a> 4.自己找一个bootloader或者内核中的代码位置，设置断点并进行测试</h4>
<p>像上个问题一样在gdbinit里面写入*b 0x7c1a，设置断点，然后类似的进行单步调试。</p>
<h2 id="练习3"><a class="markdownIt-Anchor" href="#练习3"></a> 练习3</h2>
<p>分析bootloader进入保护模式的过程。<br>
BIOS将通过读取硬盘主引导扇区到内存，并转跳到对应内存中的位置执行bootloader。请分析bootloader是如何完成从实模式进入保护模式的。<br>
提示：需要阅读小节“保护模式和分段机制”和lab1/boot/bootasm.S源码，了解如何从实模式切换到保护模式，需要了解：<br>
1、为何开启A20<br>
2、以及如何开启A20<br>
3、 如何初始化GDT表<br>
4、如何使能和进入保护模式</p>
<h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h3>
<h4 id="首先bootloader从实模式进入保护模式要经过一下几个步骤"><a class="markdownIt-Anchor" href="#首先bootloader从实模式进入保护模式要经过一下几个步骤"></a> 首先bootloader从实模式进入保护模式要经过一下几个步骤：</h4>
<p>1、开启A20门<br>
2、建立GDT表并对其进行初始化操作<br>
3、设置cr0寄存器的值为1</p>
<h4 id="当寄存器值切换后方可表示模式切换成功"><a class="markdownIt-Anchor" href="#当寄存器值切换后方可表示模式切换成功"></a> 当寄存器值切换后方可表示模式切换成功</h4>
<h4 id="初始状态a20地址线被屏蔽所以一直保持为0我们要进一步访问内存需要a20地址线需要将其打开"><a class="markdownIt-Anchor" href="#初始状态a20地址线被屏蔽所以一直保持为0我们要进一步访问内存需要a20地址线需要将其打开"></a> 初始状态A20地址线被屏蔽所以一直保持为0，我们要进一步访问内存需要A20地址线，需要将其打开。</h4>
<h3 id="一-开启a20"><a class="markdownIt-Anchor" href="#一-开启a20"></a> 一、开启A20</h3>
<h4 id="打开a20-gate的具体步骤大致如下"><a class="markdownIt-Anchor" href="#打开a20-gate的具体步骤大致如下"></a> 打开A20 Gate的具体步骤大致如下：</h4>
<p>1、等待8042 Input buffer为空<br>
2、发送Write 8042 Output Port （P2） 命令到8042 Input buffer<br>
3、等待8042 Input buffer为空<br>
4、将8042 Output Port（P2） 对应字节的第2位置1，然后写入8042 Input buffer</p>
<pre class="highlight"><code class="">    #  开启A20：通过将键盘控制器上的A20线置于高电位，全部32条地址线可用，
    #  可以访问4G的内存空间。
seta20.1:
    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty).
    testb $0x2, %al
    jnz seta20.1

    movb $0xd1, %al                                 # 0xd1 -&gt; port 0x64
    outb %al, $0x64                                 # 0xd1 means: write data to 8042's P2 port

seta20.2:
    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty).
    testb $0x2, %al
    jnz seta20.2

    movb $0xdf, %al                                 # 0xdf -&gt; port 0x60
    outb %al, $0x60                                 # 0xdf = 11011111, means set P2's A20 bit(the 1 bit) to 1
</code></pre>
<h3 id="二-建立并初始化gdt寄存器置为1"><a class="markdownIt-Anchor" href="#二-建立并初始化gdt寄存器置为1"></a> 二、建立并初始化GDT,寄存器置为1</h3>
<pre class="highlight"><code class=""># Switch from real to protected mode, using a bootstrap GDT
# and segment translation that makes virtual addresses
# identical to physical addresses, so that the
# effective memory map does not change during the switch.
#  初始化GDT表：一个简单的GDT表和其描述符已经静态储存在引导区中，载入即可
lgdt gdtdesc
movl %cr0, %eax            #进入保护模式：通过将cr0寄存器PE位置1便开启了保护模式
orl $CR0_PE_ON, %eax
movl %eax, %cr0
</code></pre>
<h4 id="完成以后步骤后bootloader已经从实模式进入到了保护模式"><a class="markdownIt-Anchor" href="#完成以后步骤后bootloader已经从实模式进入到了保护模式"></a> 完成以后步骤后bootloader已经从实模式进入到了保护模式</h4>
<h2 id="练习4"><a class="markdownIt-Anchor" href="#练习4"></a> 练习4</h2>
<pre class="highlight"><code class="">分析BootLoader加载ELF格式的OS的过程
通过阅读bootmain.c,了解bootloader如何加载ELF文件。通过分析代码和通过qemu来运行调试
</code></pre>
<h3 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h3>
<p>首先看bootmain函数</p>
<pre class="highlight"><code class="C"><span class="hljs-type">void</span> <span class="hljs-title function_">bootmain</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>{
   <span class="hljs-comment">//read the 1st page off disk</span>
   readseg((<span class="hljs-type">uintptr_t</span>)ELFHDR,SECTSIZE*<span class="hljs-number">8</span>,<span class="hljs-number">0</span>);

   <span class="hljs-comment">//is this a valid ELF?</span>
   <span class="hljs-keyword">if</span> (ELFHDR-&gt;e_magic !=ELF_MAGIC){
           <span class="hljs-keyword">goto</span> bad;
   }

   <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">proghdr</span> *<span class="hljs-title">ph</span>,*<span class="hljs-title">eph</span>;</span>

   <span class="hljs-comment">// load each program segment(ignores ph flags)</span>
   ph = (<span class="hljs-keyword">struct</span> proghdr *)((<span class="hljs-type">uintptr_t</span>)ELFHDR+ELFHDR-&gt;e_phoff);
   eph = ph + ELFHDR-&gt;e_phnum;
   <span class="hljs-keyword">for</span>(;ph&lt;eph;ph++){
           readseg(ph-&gt;p_va &amp; <span class="hljs-number">0xFFFFFF</span>, ph-&gt;p_memsz, ph-&gt;p_offset);
   }

   <span class="hljs-comment">// call the entry point from the ELF header</span>
   <span class="hljs-comment">// note:does not return</span>
   ((<span class="hljs-type">void</span>(*)(<span class="hljs-type">void</span>))(ELFHDR-&gt;e_entry &amp; <span class="hljs-number">0xFFFFFF</span>))();
bad:
   outw(<span class="hljs-number">0x8A00</span>,<span class="hljs-number">0x8A00</span>);
   outw(<span class="hljs-number">0x8A00</span>,<span class="hljs-number">0x8E00</span>);

   <span class="hljs-comment">/* do nothing */</span>
   <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>);
}
</code></pre>
<p>先是读磁盘，转入readseg函数</p>
<pre class="highlight"><code class="C"><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">readseg</span><span class="hljs-params">(<span class="hljs-type">uintptr_t</span> va,<span class="hljs-type">uint32_t</span> count,<span class="hljs-type">uint32_t</span> offset)</span>{
      <span class="hljs-type">uintptr_t</span> end_va = va + count;

      <span class="hljs-comment">//round down to sector boundary</span>
      va -= offset % SECTSIZE ;

      <span class="hljs-comment">//translate from bytes to sectors; kernel starts at sector 1</span>
      <span class="hljs-type">uint32_t</span> secno = (offset / SECTSIZE) + <span class="hljs-number">1</span>;

      <span class="hljs-comment">//If this is too slow , we could read lots of sectors at  a time.</span>
      <span class="hljs-comment">//We'd write more to memory than asked,but it doesn't matter --</span>
      <span class="hljs-comment">//We load in increasing order.</span>
      <span class="hljs-keyword">for</span>(; va &lt; end_va; va += SECTSIZE, secno ++){
            readsect((<span class="hljs-type">void</span>*)va,secno);
      }
}
</code></pre>
<p>从readseg函数发现又调用了readsect函数</p>
<pre class="highlight"><code class="C"><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">readsect</span><span class="hljs-params">(<span class="hljs-type">void</span> *dst,<span class="hljs-type">unit32_t</span> secno)</span>{
      <span class="hljs-comment">//wait for disk to be ready</span>
      waitdisk();

      outb(<span class="hljs-number">0x1F2</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">//要读写的扇区数，需要表明要读写几个扇区</span>
      outb(<span class="hljs-number">0x1F3</span>, secno &amp; <span class="hljs-number">0xFF</span>);<span class="hljs-comment">//LBA参数的0~7位</span>
      outb(<span class="hljs-number">0x1F4</span>, (secno &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>);<span class="hljs-comment">//LBA参数的8~15位</span>
      outb(<span class="hljs-number">0x1F5</span>, (secno &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFF</span>);<span class="hljs-comment">//LBA参数的16~23位</span>
      outb(<span class="hljs-number">0x1F6</span>, ((secno &gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">0xF</span>) | <span class="hljs-number">0xE0</span>);<span class="hljs-comment">//第0~3位：LBA参数的24-27位 第4位：为0主盘；为1从盘</span>
      outb(<span class="hljs-number">0x1F7</span>,<span class="hljs-number">0x20</span>);<span class="hljs-comment">//状态和命令寄存器。操作时先给命令，再读取，如果不是忙状态就从0x1f0端口 读数据</span>

       <span class="hljs-comment">//wait for disk to be ready</span>
      waitdisk();

      <span class="hljs-comment">//read a sector</span>
      insl(<span class="hljs-number">0x1F0</span>,dst,SECTSIZE/<span class="hljs-number">4</span>);<span class="hljs-comment">//读取扇区</span>
</code></pre>
<h4 id="读一个扇区的流程大致如下"><a class="markdownIt-Anchor" href="#读一个扇区的流程大致如下"></a> 读一个扇区的流程大致如下：</h4>
<ol>
<li>等待磁盘准备好</li>
<li>发出读取扇区的命令</li>
<li>等待磁盘准备好</li>
<li>把磁盘扇区数据读到指定内存</li>
</ol>
<p>其中的outb是一个机器指令，是在x86.h中的</p>
<pre class="highlight"><code class="C"><span class="hljs-type">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title function_">outb</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> port, <span class="hljs-type">unit8_t</span> data)</span>{
      <span class="hljs-keyword">asm</span> <span class="hljs-title function_">volatile</span><span class="hljs-params">(<span class="hljs-string">"outb %0, %1"</span> :: <span class="hljs-string">"a"</span>(data), <span class="hljs-string">"d"</span>(port))</span>;
}
</code></pre>
<p>用内联汇编实现，用了I0空间寻址方式，能将外部的数据读到内存中来，这也是x86里面的寻址方式</p>
<p>可以发现首先是等磁盘准备好，然后是写入地址和读取磁盘的命令，最后是按照地址读取磁盘扇区（可参考代码中的中文注释）</p>
<p>再接着看main函数，用了一个if语句判断是否为ELF文件，具体判断方式为将ELF header中的一个e_magic和一个特定值进行比较，若不是则转入bad,是则继续执行</p>
<pre class="highlight"><code class="C"> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">proghdr</span> *<span class="hljs-title">ph</span>,*<span class="hljs-title">eph</span>;</span>

   <span class="hljs-comment">// load each program segment(ignores ph flags)</span>
   ph = (<span class="hljs-keyword">struct</span> proghdr *)((<span class="hljs-type">uintptr_t</span>)ELFHDR+ELFHDR-&gt;e_phoff);<span class="hljs-comment">//将ELF文件的头部文表取出存到ph</span>
   eph = ph + ELFHDR-&gt;e_phnum;
   <span class="hljs-keyword">for</span>(;ph&lt;eph;ph++){ #加载ELF文件到内存
           readseg(ph-&gt;p_va &amp; <span class="hljs-number">0xFFFFFF</span>, ph-&gt;p_memsz, ph-&gt;p_offset);
   }

   <span class="hljs-comment">// call the entry point from the ELF header</span>
   <span class="hljs-comment">// note:does not return</span>
   ((<span class="hljs-type">void</span>(*)(<span class="hljs-type">void</span>))(ELFHDR-&gt;e_entry &amp; <span class="hljs-number">0xFFFFFF</span>))();<span class="hljs-comment">//ELF文件加载完毕后，将控制权交给ucore去执行</span>
</code></pre>
<h4 id="由此完成elf文件的加载"><a class="markdownIt-Anchor" href="#由此完成elf文件的加载"></a> 由此完成ELF文件的加载</h4>
<h2 id="练习5"><a class="markdownIt-Anchor" href="#练习5"></a> 练习5</h2>
<pre class="highlight"><code class="">完成kdebug.c中函数print_stackframe的实现，可以通过函数&gt;print_stackframe来跟踪函数调用堆栈中记录的返回地址。
</code></pre>
<h3 id="1-函数堆栈的原理"><a class="markdownIt-Anchor" href="#1-函数堆栈的原理"></a> 1、函数堆栈的原理</h3>
<p>理解函数堆栈最重要的两点是：栈的结构，以及EBP寄存器的作用。</p>
<p>一个函数调用动作可分解为零到多个 PUSH指令（用于参数入栈）和一个 CALL 指令。CALL 指令内部其实还暗含了一个将返回地址压栈的动作，这是由硬件完成的。几乎所有本地编译器都会在每个函数体之前插入类似如下的汇编指令：</p>
<pre class="highlight"><code class="php">pushl %ebp
movl %esp,%ebp
</code></pre>
<p>这两条汇编指令的含义是：首先将ebp 寄存器入栈，然后将栈顶指针 esp 赋值给 ebp。</p>
<p>movl %esp %ebp这条指令表面上看是用esp覆盖 ebp原来的值，其实不然。因为给 ebp赋值之前，原ebp 值已经被压栈（位于栈顶），而新的ebp又恰恰指向栈顶。此时ebp寄存器就已经处于一个非常重要的地位，该寄存器中存储着栈中的一个地址（原 ebp入栈后的栈顶），从该地址为基准，向上（栈底方向）能获取返回地址、参数值，向下（栈顶方向）能获取函数局部变量值，而该地址处又存储着上一层函数调用时的ebp值。</p>
<p>我们可以直接根据ebp就能读取到各个栈帧的地址和值，一般而言，ss:[ebp+4]处为返回地址，ss:[ebp+8]处为第一个参数值（最后一个入栈的参数值，此处假设其占用 4 字节内存，对应32位系统），ss:[ebp-4]处为第一个局部变量，ss:[ebp]处为上一层 ebp 值。</p>
<p>如图<br>
<img src="https://www.hualigs.cn/image/60718747980ba.jpg" alt=""></p>
<h3 id="2-print_stackframe函数的实现"><a class="markdownIt-Anchor" href="#2-print_stackframe函数的实现"></a> 2、print_stackframe函数的实现</h3>
<p>首先我们直接看到print_stackframe函数的注释：</p>
<pre class="highlight"><code class="php"><span class="hljs-keyword">void</span> <span class="hljs-title function_ invoke__">print_stackframe</span>(<span class="hljs-keyword">void</span>) {
     <span class="hljs-comment">/* LAB1 YOUR CODE : STEP 1 */</span>
     <span class="hljs-comment">/* (1) call read_ebp() to get the value of ebp. the type is (uint32_t);
      * (2) call read_eip() to get the value of eip. the type is (uint32_t);
      * (3) from 0 .. STACKFRAME_DEPTH
      *    (3.1) printf value of ebp, eip
      *    (3.2) (uint32_t)calling arguments [0..4] = the contents in address (unit32_t)ebp +2 [0..4]
      *    (3.3) cprintf("\n");
      *    (3.4) call print_debuginfo(eip-1) to print the C calling function name and line number, etc.
      *    (3.5) popup a calling stackframe
      *           NOTICE: the calling funciton's return addr eip  = ss:[ebp+4]
      *                   the calling funciton's ebp = ss:[ebp]
      */</span>
}

</code></pre>
<p>这样我们直接根据注释以及之前的相关知识就能比较简单的编写成程序，如下所示：</p>
<pre class="highlight"><code class="c"><span class="hljs-type">void</span> <span class="hljs-title function_">print_stackframe</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> {      
    <span class="hljs-type">uint32_t</span> ebp=read_ebp();<span class="hljs-comment">//(1) call read_ebp() to get the value of ebp. the type is (uint32_t)</span>
    <span class="hljs-type">uint32_t</span> eip=read_eip();<span class="hljs-comment">//(2) call read_eip() to get the value of eip. the type is (uint32_t)</span>
    <span class="hljs-type">int</span> i;
    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;STACKFRAME_DEPTH&amp;&amp;ebp!=<span class="hljs-number">0</span>;i++){<span class="hljs-comment">//(3) from 0 .. STACKFRAME_DEPTH</span>
          cprintf(<span class="hljs-string">"ebp:0x%08x   eip:0x%08x "</span>,ebp,eip);<span class="hljs-comment">//(3.1)printf value of ebp, eip</span>
          <span class="hljs-type">uint32_t</span> *tmp=(<span class="hljs-type">uint32_t</span> *)ebp+<span class="hljs-number">2</span>;
          cprintf(<span class="hljs-string">"arg :0x%08x 0x%08x 0x%08x 0x%08x"</span>,*(tmp+<span class="hljs-number">0</span>),*(tmp+<span class="hljs-number">1</span>),*(tmp+<span class="hljs-number">2</span>),*(tmp+<span class="hljs-number">3</span>));<span class="hljs-comment">//(3.2)(uint32_t)calling arguments [0..4] = the contents in address (unit32_t)ebp +2 [0..4]</span>
          cprintf(<span class="hljs-string">"\n"</span>);<span class="hljs-comment">//(3.3) cprintf("\n");</span>
          print_debuginfo(eip<span class="hljs-number">-1</span>);<span class="hljs-comment">//(3.4) call print_debuginfo(eip-1) to print the C calling function name and line number, etc.</span>
          eip=((<span class="hljs-type">uint32_t</span> *)ebp)[<span class="hljs-number">1</span>];
          ebp=((<span class="hljs-type">uint32_t</span> *)ebp)[<span class="hljs-number">0</span>];<span class="hljs-comment">//(3.5) popup a calling stackframe</span>
      }
}
</code></pre>
<p>实验结果截图如下：</p>
<p><img src="https://www.hualigs.cn/image/607182a0e97c8.jpg" alt=""></p>
<h2 id="练习6完善中断初始化和处理"><a class="markdownIt-Anchor" href="#练习6完善中断初始化和处理"></a> 练习6：完善中断初始化和处理</h2>
<p>1、中断描述符表（也可简称为保护模式下的中断向量表）中一个表项占多少字节？其中哪几位代表中断处理代码的入口？<br>
2、请编程完善kern/trap/trap.c中对中断向量表进行初始化的函数idt_init。在idt_init函数中，依次对所有中断入口进行初始化。使用mmu.h中的SETGATE宏，填充idt数组内容。每个中断的入口由tools/vectors.c生成，使用trap.c中声明的vectors数组即可。<br>
3、请编程完善trap.c中的中断处理函数trap,在对时钟中断进行处理的部分填写trap函数中处理时钟中断的部分，使操作系统毎遇到100次时钟中断后，调用print_tricks子程序，在屏幕上打印一行文字“100 ticks”。</p>
<h3 id="1-中断描述符表中一个表项占8字节"><a class="markdownIt-Anchor" href="#1-中断描述符表中一个表项占8字节"></a> 1、中断描述符表中一个表项占8字节</h3>
<p><img src="https://i.loli.net/2021/04/12/AgIlN5Sc1YDE9oP.png" alt="mmexport1618159489650"></p>
<p>如上图所示，其中的0-15位是offset的低16位，48-63位是offset的高16位，16-31位是段选择子，用于索引全局描述符表GDT来获取中断处理代码对应的段地址，再加上段内偏移量即可得到中断处理代码的入口。</p>
<h3 id="2-完善初始化函数"><a class="markdownIt-Anchor" href="#2-完善初始化函数"></a> 2、完善初始化函数</h3>
<pre><code>  （1）根据函数中的注释提示，第一步是声明__vertors[];
    (2) 第二步是使用SETGATE填充中段描述符表IDT
    (3) 第三步是使用lidt指令让CPU加载中断描述符表IDT
</code></pre>
<p>具体的代码如下：</p>
<pre class="highlight"><code class="C"><span class="hljs-type">void</span> <span class="hljs-title function_">idt_init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>{
      <span class="hljs-keyword">extern</span> <span class="hljs-type">uintptr_t</span> __vecors[];
      <span class="hljs-type">int</span> i;
      <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++){
          SETGATE(idt[i],<span class="hljs-number">0</span>,GD_KTEXT,__vectors[i],DPL_KERNEL);
      }
      SETGATE(idt[T_SWITCH_TOK],<span class="hljs-number">0</span>,GD_KTEXT,__vectors[T_SWITCH_TOK],DPL_USER);
      lidt(&amp;idit_pd);
}
</code></pre>
<p>其中宏SETGATE的定义为</p>
<pre class="highlight"><code class="">#define SETGATE(gate, istrap, sel, off, dpl)
</code></pre>
<p>GD_KTEXT和DPL_KERNEL的定义在memlayout.h中<br>
<img src="https://i.loli.net/2021/04/12/FitCeqP7261J3jn.png" alt="mmexport1618159491208"><br>
gate表示处理函数的入口地址，此处即idt[]数组中的内容<br>
istrap表示1为异常门，0为中断门<br>
sel表示段选择子<br>
off表示偏移量，此处即__vectors[]数组中的内容<br>
dpl表示设置等级，此处设置为DPL_KERNEL，恒为0</p>
<h3 id="3-编写函数"><a class="markdownIt-Anchor" href="#3-编写函数"></a> 3、编写函数</h3>
<p>根据提示，需要用一个全局变量记录每次时钟中断，然后用print_ticks()打印“100 ticks”后重新从0开始计数，参照clock.c,写出如下函数：</p>
<pre class="highlight"><code class="C"><span class="hljs-keyword">case</span> IRQ_OFFSET+IRQ_TIMER:
ticks=ticks+<span class="hljs-number">1</span>;
<span class="hljs-keyword">if</span>(ticks==TICK_NUM){
      print_ticks();
      ticks=<span class="hljs-number">0</span>;
}
<span class="hljs-keyword">break</span>;
</code></pre>
<p>其中TICK_NUM已被定义为100<br>
最后的运行结果为下图：<br>
<img src="https://i.loli.net/2021/04/12/5UolSrpgHAkIKDv.png" alt="mmexport1618159492686"><br>
<img src="https://i.loli.net/2021/04/12/LeNXnSIkDY26UGE.png" alt="mmexport1618159481302"></p>
<h2 id="challenge-12-新建用户态并进行内核态互换"><a class="markdownIt-Anchor" href="#challenge-12-新建用户态并进行内核态互换"></a> Challenge 1&amp;2 新建用户态并进行内核态互换</h2>
<p>通过编写c++内联汇编函数，来实现用户态和内核态的切换。</p>
<p>已知初始化内核的函数如下：</p>
<pre class="highlight"><code class="">static void
switch_test(void) {
	print_cur_status(); // print 当前 cs/ss/ds 等寄存器状态
	cprintf("+++ switch to user mode +++\n");
	switch_to_user(); // switch to user mode
	print_cur_status();
	cprintf("+++ switch to kernel mode +++\n");
	switch_to_kernel(); // switch to kernel mode
	print_cur_status();
}
</code></pre>
<p>而在init.c里面没有switch_to_user函数的内容以及switch_to_kernel函数的内容，因此这些部分需要编程。</p>
<h3 id="1调到用户态"><a class="markdownIt-Anchor" href="#1调到用户态"></a> 1.调到用户态</h3>
<p>通过编写switch_to_user的内容来使在内核初始化的时候可以切换到用户态。</p>
<pre class="highlight"><code class="">asm volatile (
    "sub $0x8, %%esp \n"
    "int %0 \n"
    "movl %%ebp, %%esp"
    : 
    : "i"(T_SWITCH_TOU)
);
</code></pre>
<p>通过编写内联汇编语句来实现切换，用中断处理int 0来实现，需要输入的“i”也就是T_SWITCH_TOU。调整栈顶指针和栈底指针开辟程序空间之后，进行中断来实现切换。<br>
在trap.c中要修改t_switch_tou的内容</p>
<pre class="highlight"><code class="">case T_SWITCH_TOU:
    if (tf-&gt;tf_cs != USER_CS) {
        switchk2u = *tf;
        switchk2u.tf_cs = USER_CS;
        switchk2u.tf_ds = switchk2u.tf_es = switchk2u.tf_ss = USER_DS;
        switchk2u.tf_esp = (uint32_t)tf + sizeof(struct trapframe) - 8;
        switchk2u.tf_eflags |= FL_IOPL_MASK;
        *((uint32_t *)tf - 1) = (uint32_t)&amp;switchk2u;
      }
      break;
</code></pre>
<p>这段代码可以使原来的状态不是用户态时候，将原来的状态修改成用户态。</p>
<pre class="highlight"><code class="">switchk2u.tf_eflags |= FL_IOPL_MASK;
*((uint32_t*)tf - 1) = (uint32_t)&amp;switchk2u;
</code></pre>
<p>将这里的标记确认成为用户态，并且中断返回到正确的栈。</p>
<h3 id="2用户态到内核态"><a class="markdownIt-Anchor" href="#2用户态到内核态"></a> 2.用户态到内核态</h3>
<p>用类似的内联汇编处理。</p>
<pre class="highlight"><code class="">asm volatile (
    "int %0 \n"
    "movl %%ebp, %%esp \n"
    : 
    : "i"(T_SWITCH_TOK)
);
</code></pre>
<p>因为切换到的是内核态，不需要更多空间，所以相比内核到用户的内联汇编不再需要在栈指针减去一个值来开辟空间。</p>
<p>然后我们同样需要在trap.c中修改T_SWITCH_TOK的内容</p>
<pre class="highlight"><code class="">case T_SWITCH_TOK:
    if (tf-&gt;tf_cs != KERNEL_CS) {
        tf-&gt;tf_cs = KERNEL_CS;
        tf-&gt;tf_ds = tf-&gt;tf_es = KERNEL_DS;
        tf-&gt;tf_eflags &amp;= ~FL_IOPL_MASK;
        switchu2k = (struct trapframe *)(tf-&gt;tf_esp (sizeof(struct trapframe) - 8));
        memmove(switchu2k, tf, sizeof(struct trapframe) - 8);
        *((uint32_t *)tf - 1) = (uint32_t)switchu2k;
      }
</code></pre>
<p>跟之前切换的修改类似</p>
<h3 id="3实现切换"><a class="markdownIt-Anchor" href="#3实现切换"></a> 3.实现切换</h3>
<pre class="highlight"><code class="">case IRQ_OFFSET + IRQ_KBD:
        c = cons_getc();
        cprintf("kbd [%03d] %c\n", c, c);
        if(c == '0' &amp;&amp; (tf-&gt;tf_cs &amp; 3) != 0)
        {
                cprintf("Input 0......switch to kernel\n");
                tf-&gt;tf_cs = KERNEL_CS;
                tf-&gt;tf_ds = tf-&gt;tf_es = KERNEL_DS;
                tf-&gt;tf_eflags &amp;= ~FL_IOPL_MASK;
        }
        else if (c == '3' &amp;&amp; (tf-&gt;tf_cs &amp; 3) != 3)
        {
                cprintf("Input 3......switch to user\n");
                tf-&gt;tf_cs = USER_CS;
                tf-&gt;tf_ds = tf-&gt;tf_es = tf-&gt;tf_ss = USER_DS;
                tf-&gt;tf_eflags |= FL_IOPL_MASK;
        }
        break;
</code></pre>
<p>修改完代码之后执行</p>
<pre class="highlight"><code class="">make qemu
</code></pre>
<p>键盘输入0或3即可实现切换<br>
<img src="https://i.loli.net/2021/04/12/BlXaezgdp5FUqCi.png" alt="image-20210412215946076"></p>
<h4 id="最终评分"><a class="markdownIt-Anchor" href="#最终评分"></a> 最终评分</h4>
<p><img src="https://i.loli.net/2021/04/12/lsaMBPhk21v57wG.png" alt="image-20210412042453346"></p>
]]></content>
      <categories>
        <category>Homework</category>
      </categories>
      <tags>
        <tag>Homework</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode设置自动识别文件编码格式</title>
    <url>/blog/2023/041be02434.html</url>
    <content><![CDATA[<p>vscode打开文件默认是utf-8编码，当我们打开其他编码文件（例如gb2312）时就会产生乱码现象，如下图所示：<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230406194040.png" alt="20230406194040"></p>
<p>这个时候可以通过VSCode右下角的编码方式点击来修改<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230406194140.png" alt="20230406194140"><br>
可以看到有两个选项</p>
<ul>
<li>以其他编码方式重新打开，此时就可以选择对应编码打开文件即可</li>
<li>第二个选项<code>不建议选择</code>，他会修改你的文件编码方式，内容会被修改</li>
</ul>
<p>但是按选项一修改之后，下次我们重新打开这个文件，依旧会以UTF-8编码打开，如果需要频繁打开，就会很浪费时间。</p>
<p>其实VSCode自带有的自动识别编码方式，只需要选中即可（默认是不选中），打开<code>Settings</code>,搜索<code>Files.AutoGuessEncoding</code><br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20230406194734.png" alt="20230406194734"><br>
选中即可，下次打开文件VSCode就会自动识别文件编码方式，并以对应编码方式打开</p>
]]></content>
  </entry>
  <entry>
    <title>VS Code集成终端字体修改 &amp; 字体颜色、大小修改方法</title>
    <url>/blog/2022/068a4c5ed0.html</url>
    <content><![CDATA[<p>打开VScode，<code>Ctrl + ,</code>或者<code>设置 -&gt; 设置</code>搜索<code>workbenck</code>，如下图：<br>
<img src="https://s2.loli.net/2022/06/02/nsmiWrDHCwZ8GzQ.png" alt=""><br>
点击<code>Edit in settings.json</code>在配置文件最后加上以下参数：</p>
<pre class="highlight"><code class="json"><span class="hljs-comment">//终端颜色配置</span>
<span class="hljs-attr">"workbench.colorCustomizations"</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-comment">//可以将鼠标放到下面的色号上根据自己的偏好进行选择</span>
	<span class="hljs-attr">"terminal.foreground"</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">"#37FF13"</span><span class="hljs-punctuation">,</span><span class="hljs-comment">//字体颜色</span>
 	<span class="hljs-attr">"terminal.background"</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">"#2b2424"</span><span class="hljs-comment">//背景颜色</span>
<span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>

<span class="hljs-attr">"terminal.integrated.cursorBlinking"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>
<span class="hljs-attr">"terminal.integrated.lineHeight"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span>
<span class="hljs-attr">"terminal.integrated.letterSpacing"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span>
<span class="hljs-attr">"terminal.integrated.fontSize"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">14</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//字体大小设置</span>
<span class="hljs-attr">"terminal.integrated.fontFamily"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"Lucida Console"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//字体设置</span>
</code></pre>
<p>保存即可</p>
<p>具体颜色可根据个人喜好配置，如果想恢复默认颜色或者背景，删除该行代码即可</p>
<p>配置之后效果如下：<br>
<img src="https://s2.loli.net/2022/06/02/Fky9ocazPMngN3Q.png" alt=""></p>
]]></content>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim参数推荐</title>
    <url>/blog/2022/0257c5ab7b.html</url>
    <content><![CDATA[<p>" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by<br>
" the call to :runtime you can find below.  If you wish to change any of those<br>
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim<br>
" will be overwritten everytime an upgrade of the vim packages is performed.<br>
" It is recommended to make changes after sourcing debian.vim since it alters<br>
" the value of the ‘compatible’ option.</p>
<p>runtime! debian.vim</p>
<p>" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.<br>
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override<br>
" any settings in these files.<br>
" If you don’t want that to happen, uncomment the below line to prevent<br>
" defaults.vim from being loaded.<br>
" let g:skip_defaults_vim = 1</p>
<p>" Uncomment the next line to make Vim more Vi-compatible<br>
" NOTE: debian.vim sets ‘nocompatible’.  Setting ‘compatible’ changes numerous<br>
" options, so any other options should be set AFTER setting ‘compatible’.<br>
"set compatible</p>
<p>" Vim5 and later versions support syntax highlighting. Uncommenting the next<br>
" line enables syntax highlighting by default.<br>
syntax on</p>
<p>" If using a dark background within the editing area and syntax highlighting<br>
" turn on this option as well<br>
set background=dark</p>
<p>" Uncomment the following to have Vim jump to the last position when<br>
" reopening a file<br>
“au BufReadPost * if line(”‘"“) &gt; 1 &amp;&amp; line(”’"“) &lt;= line(”$") | exe “normal! g’"” | endif</p>
<p>" Uncomment the following to have Vim load indentation rules and plugins<br>
" according to the detected filetype.<br>
if has(“autocmd”)<br>
filetype plugin indent on<br>
endif</p>
<p>" The following are commented out as they cause vim to behave a lot<br>
" differently from regular Vi. They are highly recommended though.<br>
"set showcmd		" Show (partial) command in status line.<br>
set showmatch		" Show matching brackets.<br>
set ignorecase		" Do case insensitive matching<br>
set smartcase		" Do smart case matching<br>
set incsearch		" Incremental search<br>
"set autowrite		" Automatically save before commands like :next and :make<br>
set hidden		" Hide buffers when they are abandoned<br>
"set mouse=a		" Enable mouse usage (all modes)</p>
<p>" Source a global configuration file if available<br>
if filereadable(“/etc/vim/vimrc.local”)<br>
source /etc/vim/vimrc.local<br>
endif</p>
<p>setlocal noswapfile<br>
set bufhidden = hide<br>
"colorscheme evening<br>
set number<br>
set cursorline<br>
set ruler<br>
set shiftwidth = 4<br>
set softtabstop = 4<br>
set tabstop = 4<br>
set nobackup<br>
set autochdir<br>
set backupcopy = yes<br>
set hlsearch<br>
set noerrorbells<br>
set novisualbell<br>
set t_vb=<br>
set matchtime=2<br>
set magic<br>
set smartindent<br>
set backspace=ident,eol,start<br>
set cmdheight=1<br>
set laststatus=2<br>
set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&amp;fileformat}\ %{&amp;encoding}\ Ln\ %l.\Col\ %c/%L%)<br>
set foldenable<br>
set foldmethod=syntax<br>
set foldcolumn=0<br>
setlocal foldlevel=1<br>
nnoremap <space> @=((foldclosed(line(‘,’)) &lt; 0) ? ‘zc’ : ‘zo’)<cr></cr></space></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode+PicGo+Aliyun配置MarkDown图床</title>
    <url>/blog/2022/07b93436c8.html</url>
    <content><![CDATA[<blockquote>
<p>VSCode作为一款非常轻便的编辑器，以轻量，插件丰富收到大家欢迎，我个人是非常喜欢使用VSCode的，用VSCode去编辑Markdown文件也十分方便，当然Typora在这方便也很受欢迎，但是Typora正式版上线之后要收费，不可避免地会损失一部分用户，接下来我就介绍一下使用VSCode来进行编辑Markdown文件时图传的配置方法</p>
</blockquote>
<!-- toc -->
<p>前置要求:安装VSCode即可</p>
<h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2>
<p>只需安装一个<code>Markdown All in One</code>即可使用VSCode编辑Markdown文件，非常方便</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725171244.png" alt="20220725171244"></p>
<p>但是这个插件不提供图床功能，仍需要将图片转换成网络链接复制到md文件中，非常不方便</p>
<p>接下来继续安装一个<code>PicGo</code>插件即可</p>
<h2 id="aliyun对象存储oss"><a class="markdownIt-Anchor" href="#aliyun对象存储oss"></a> Aliyun对象存储OSS</h2>
<blockquote>
<p>PicGo默认存储为SMMS，我也一直在用这个，但是今天突然就打不开了，Github也可以，但是其服务器在国外，国内使用经常会显示不了图片，所以综合一下选择了Aliyun，而且新用户免费体验三个月，作为图床仓库，40G存储量一年的价格为5元，也可以说是非常划算了，接下来讲一下详细配置。</p>
</blockquote>
<ol>
<li>打开<a href="https://www.aliyun.com/">阿里云官网</a>，登陆或注册，在产品里面找到对象存储OSS<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725172229.png" alt="20220725172229"></li>
<li>根据需要直接购买，作为图床使用40G空间已经足够了，选项默认的即可，直接购买即可<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725172337.png" alt="20220725172337"></li>
<li>购买之后直接进入OSS管理控制台<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725172629.png" alt="20220725172629"></li>
<li>在Bucket列表中新建一个Bucket，地域选择离自己最近的，复制下这个<code>地域名称英文</code>，待会要用<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725172737.png" alt="20220725172737"><br>
读写权限选择公共读<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725172857.png" alt="20220725172857"><br>
其他选择默认配置即可。</li>
<li>创建成功之后进入创建的Bucket，进入概述界面，下方的访问域名中有一个外网访问，记录后面的<code>Bucket域名</code>，待会要使用<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725173058.png" alt="20220725173058"></li>
<li>然后点击头像的AccessKey管理<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725173246.png" alt="20220725173246"><br>
创建一个AccessKey<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725173446.png" alt="20220725173446"><br>
记录<code>AccessKey ID</code>和<code>AccessKey Secret</code>即可</li>
</ol>
<h2 id="配置vscode-picgo配置"><a class="markdownIt-Anchor" href="#配置vscode-picgo配置"></a> 配置VSCode PicGo配置</h2>
<p>打开VSCode<code>设置</code>，搜索<code>PicGo</code>,首先找到<code>Pic Bed：current</code>，将其更换为<code>aliyun</code></p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725173825.png" alt="20220725173825"></p>
<p>然后找到<code>aliyun</code>的配置，进行如下配置：</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725174406.png" alt="20220725174406"></p>
<p>到此为止图床就已经全部配置完成了</p>
<h2 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h2>
<p>PicGo默认上传快捷键如下：<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725174617.png" alt="20220725174617"><br>
我们可以直接按下<code>Ctrl+Alt+U</code>直接从剪贴板复制图片，非常好用，当然也可以更改为自己更加方便的快捷键。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello kpl!</title>
    <url>/blog/2023/054a17b156.html</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2021/04/07/BHgA5RqQeZTv8Wt.png" alt="image-20210407205253791"></p>
<p><img src="https://s2.loli.net/2022/06/17/yQSFtAlM4WrZBUi.jpg" alt="9f793abca820791d52dae9e921ce535"></p>
]]></content>
  </entry>
  <entry>
    <title>win10时间显示精确到秒</title>
    <url>/blog/2022/1091d7ef4e.html</url>
    <content><![CDATA[<ol>
<li>
<p>任意位置新建txt文件，打开编辑</p>
</li>
<li>
<p>复制以下代码</p>
<pre class="highlight"><code class="console">@echo off

reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowSecondsInSystemClock /t REG_DWORD /d 1 /f

TASKKILL /F /IM explorer.exe

echo.

echo 重启explorer.exe

START %windir%\explorer.exe

echo.

pause
</code></pre>
</li>
<li>
<p>更改后缀为<code>.bat</code>，之后双击执行该文件即可</p>
</li>
<li>
<p>效果如下<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20221006095422.png" alt="20221006095422"></p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>一些方便好用的常用命令</title>
    <url>/blog/2022/056ac63caa.html</url>
    <content><![CDATA[<blockquote>
<p>本文记录一些平时遇到的没必要记忆却又需要的指令</p>
</blockquote>
<!-- toc -->
<h4 id="vscode终端编码方式修改"><a class="markdownIt-Anchor" href="#vscode终端编码方式修改"></a> VSCode终端编码方式修改</h4>
<p>VScode的默认编码方式为UTF-8，中国地区下cmd的编码方式GBK，所以会导致在终端运行程序打印中文出乱码的情况，修改编码方式即可</p>
<p>在终端运行以下指令即可修改cmd编码方式：</p>
<pre class="highlight"><code class="C++">chcp <span class="hljs-number">65001</span> <span class="hljs-comment">//UTF-8编码</span>
chcp <span class="hljs-number">936</span> <span class="hljs-comment">//GBK编码</span>
</code></pre>
<h4 id="国内快速访问github"><a class="markdownIt-Anchor" href="#国内快速访问github"></a> 国内快速访问Github</h4>
<ol>
<li>
<p>打开IPAddress.com网站,查询下列三个地址的ip</p>
<blockquote>
<p><a href="http://github.com">github.com</a><br>
<a href="http://assets-cnd.github.com">assets-cnd.github.com</a><br>
<a href="http://gibhut.global.ssl.fastly.net">gibhut.global.ssl.fastly.net</a></p>
</blockquote>
</li>
<li>
<p>修改本地hosts文件(window系统)</p>
<p>在C:\Windows\System32\drivers\etc 找到hosts文件，然后添加下列数据，注意把下面的ip改成你自己查询到ip地址。</p>
<blockquote>
<p>140.82.114.3 <a href="http://github.com">github.com</a><br>
185.199.108.153 <a href="http://assets-cdn.github.com">assets-cdn.github.com</a><br>
199.232.69.194 <a href="http://github.global.ssl.fastly.net">github.global.ssl.fastly.net</a></p>
</blockquote>
</li>
<li>
<p>刷新本地dns缓存<br>
Win+R打开cmd，输入命令 ipconfig/flushdns<br>
此时就配置成功了，然后就可以去访问啦</p>
</li>
</ol>
<blockquote>
<p>当然科学上网也是可以的</p>
</blockquote>
<h4 id="windows查看文件命令"><a class="markdownIt-Anchor" href="#windows查看文件命令"></a> windows查看文件命令</h4>
<pre class="highlight"><code class="C++">dir        <span class="hljs-comment">//查看当前文件下文件夹详细信息 </span>
dir /b     <span class="hljs-comment">//查看当前文件夹下文件夹</span>
dir /b /s  <span class="hljs-comment">//查看当前文件夹下文件夹及文件信息</span>
</code></pre>
]]></content>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>中缀表达式转后缀表达式</title>
    <url>/blog/2022/1072a96e3d.html</url>
    <content><![CDATA[<h2 id="后缀表达式"><a class="markdownIt-Anchor" href="#后缀表达式"></a> 后缀表达式</h2>
<p>后缀表达式也叫<strong>逆波兰表达式</strong> ，其表达式表述严谨，没有括号，并严格遵循“从左到右”的后缀表达式表示方法</p>
<h2 id="后缀表达式求值"><a class="markdownIt-Anchor" href="#后缀表达式求值"></a> 后缀表达式求值</h2>
<p>后缀表达式求值过程用到栈做辅助存储，假设给定后缀表达式字符串s为6523+8*+3+*,借用栈来存储数字，顺序读取，遇到数字则入栈，遇到表达符c则依次从栈中取出a和b，计算bca，并将其值入栈，最后栈中的值即为最终结果，下面演示求值过程：</p>
<ol>
<li>读取6，入栈，栈中为<code>6</code></li>
<li>读取5，入栈，栈中为<code>6、5</code></li>
<li>读取2，入栈，栈中为<code>6、5、2</code></li>
<li>读取3，入栈，栈中为<code>6、5、2、3</code></li>
<li>读取+，从栈中依次取出3、2，计算2+3，将结果5入栈，栈中为<code>6、5、5</code></li>
<li>读取8，入栈，栈中为<code>6、5、5、8</code></li>
<li>读取*，从栈中依次取出8、5,计算5*8，将结果40入栈，栈中为<code>6、5、40</code></li>
<li>读取+，从栈中依次取出40、5，计算40+5，将结果45入栈，栈中为<code>6、45</code></li>
<li>读取3，入栈，栈中为<code>6、45、3</code></li>
<li>读取+，从栈中依次取出3、45，计算45+3，将结果48入栈，栈中为<code>6、48</code></li>
<li>读取*，从栈中依次取出48、6，计算6*48，将结果288入栈，栈中为<code>288</code></li>
<li>读取到行末提示符，运算结束，结果即为栈中元素288</li>
</ol>
<h2 id="中缀表达式转后缀表达式"><a class="markdownIt-Anchor" href="#中缀表达式转后缀表达式"></a> 中缀表达式转后缀表达式</h2>
<h3 id="简便方法"><a class="markdownIt-Anchor" href="#简便方法"></a> 简便方法</h3>
<p>以中缀表达式<code>a+b*c+(d*e+f)*g</code>为例，转换为后缀表达式：</p>
<ol>
<li>对每一次运算（只要出现加减乘除符号）及其运算数加括号，为<code>((a+(b*c))+(((d*e)+f)*g))</code></li>
<li>将运算符移到括号后面，为<code>((a(bc)*)+(((de)*f)+g)*)+</code></li>
<li>去掉括号，为<code>abc*+de*f+g*+</code></li>
</ol>
<h3 id="一般方法"><a class="markdownIt-Anchor" href="#一般方法"></a> 一般方法</h3>
<p>待补充</p>
]]></content>
  </entry>
  <entry>
    <title>公式渲染测试</title>
    <url>/blog/2022/06784dd132.html</url>
    <content><![CDATA[<blockquote>
<p>主题添加公式渲染功能，测试</p>
</blockquote>
<p>整行：</p>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>sin<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> + cos<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> = 1<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mi>θ</mi><mo>+</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mn>2</mn></msup><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sin^2\theta + cos^2\theta = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>行内：</p>
<pre class="highlight"><code class="Latex">这是一个行内公式： <span class="hljs-built_in">$</span>sin<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> + cos<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> = 1<span class="hljs-built_in">$</span>
</code></pre>
<p>效果：<br>
这是一个行内公式： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mi>θ</mi><mo>+</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mn>2</mn></msup><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sin^2\theta + cos^2\theta = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>数学公式测试：</p>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
<span class="hljs-keyword">\begin</span>{aligned}
f<span class="hljs-built_in">_</span>Y(y) <span class="hljs-built_in">&amp;</span> = f<span class="hljs-built_in">_</span>X[h(y)]|h'(y)| <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = f<span class="hljs-built_in">_</span>X[h(y)]h'(y) <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{-<span class="hljs-keyword">\frac</span>{x}{<span class="hljs-keyword">\theta</span>}}[<span class="hljs-keyword">\frac</span>{dx}{dy}(-<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{ln(1-y)})] <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{-<span class="hljs-keyword">\frac</span>{-<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{ln(1-y)}}{<span class="hljs-keyword">\theta</span>}}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{ln(1-y)}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1-y}{<span class="hljs-keyword">\theta</span>}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = 1
<span class="hljs-keyword">\end</span>{aligned}
<span class="hljs-keyword">\tag</span>{1}
<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>f</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">[</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">[</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mi>x</mi><mi>θ</mi></mfrac></mrow></msup><mo stretchy="false">[</mo><mfrac><mrow><mi>d</mi><mi>x</mi></mrow><mrow><mi>d</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>θ</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo>−</mo><mfrac><mi>θ</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><mi>θ</mi></mfrac></mrow></msup><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow><mi>θ</mi></mfrac><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
f_Y(y) &amp; = f_X[h(y)]|h'(y)| \\[2ex]
&amp; = f_X[h(y)]h'(y) \\[2ex]
&amp; = \frac{1}{\theta}e^{-\frac{x}{\theta}}[\frac{dx}{dy}(-\frac{\theta}{ln(1-y)})] \\[2ex]
&amp; = \frac{1}{\theta}e^{-\frac{-\frac{\theta}{ln(1-y)}}{\theta}}\frac{\theta}{1-y} \\[2ex]
&amp; = \frac{1}{\theta}e^{ln(1-y)}\frac{\theta}{1-y} \\[2ex]
&amp; = \frac{1-y}{\theta}\frac{\theta}{1-y} \\[2ex]
&amp; = 1
\end{aligned}
\tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:18.01824em;vertical-align:-8.75912em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.25912em;"><span style="top:-12.01104em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-9.64904em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-6.755599999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-3.641679999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-0.7482399999999989em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:2.145200000000001em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:4.507199999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.75912em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.25912em;"><span style="top:-12.01104em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-9.64904em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-6.755599999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89708em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span><span style="top:-3.641679999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.59192em;"><span style="top:-3.59192em;margin-right:0.05em;"><span class="pstrut" style="height:3.1789199999999997em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6841714285714287em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.911714285714286em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.08144em;"><span style="top:-2.4265em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8235em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.7482399999999989em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:2.145200000000001em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:4.507199999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.75912em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:18.01824em;vertical-align:-8.75912em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
<span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\sigma</span>} 
<span class="hljs-keyword">\tag</span>{this is a test}
<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mfrac><mn>1</mn><mi>σ</mi></mfrac></mtd><mtd width="50%"></mtd><mtd><mtext>(this&nbsp;is&nbsp;a&nbsp;test)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\frac{1}{\sigma} 
\tag{this is a test}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">t</span><span class="mord">h</span><span class="mord">i</span><span class="mord">s</span><span class="mord">&nbsp;</span><span class="mord">i</span><span class="mord">s</span><span class="mord">&nbsp;</span><span class="mord">a</span><span class="mord">&nbsp;</span><span class="mord">t</span><span class="mord">e</span><span class="mord">s</span><span class="mord">t</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>Latex语法测试：</p>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><span class="hljs-keyword">\underline</span>{给这条语句加一个下划线}<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder accentunder="true"><mtext>给这条语句加一个下划线</mtext><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{给这条语句加一个下划线}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:-0.20000000000000007em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">语</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">划</span><span class="mord cjk_fallback">线</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20000000000000007em;"><span></span></span></span></span></span></span></span></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>关于Eclipse安卓开发中的文件调用</title>
    <url>/blog/2022/05442e8a7e.html</url>
    <content><![CDATA[<h2 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h2>
<p>最近在用Eclipse做Android的时候使用jxl库简单处理了xls文件，由于我对xls文件处理不太熟练，于是创建了一个Java项目进行简单测试，没问题之后直接在安卓项目使用，但是却发现<strong>即使我把xls文件放在assets文件夹下并在Build Path里面勾选了assets文件夹</strong>依旧会抛出找不到文件的错误：FileNotFoundException，采用了</p>
<pre class="highlight"><code class="java">file:<span class="hljs-comment">///android_asset/xxx.html</span>
</code></pre>
<p>和</p>
<pre class="highlight"><code class="java">/assets/xxx.xls
</code></pre>
<p>均没有效果，依旧会抛出错误。</p>
<h2 id="问题原因"><a class="markdownIt-Anchor" href="#问题原因"></a> 问题原因</h2>
<p>一般情况下我们在本地项目引用文件，直接用绝对路径或者相对路径都可以，这两者都可以在资源文件的属性里面查看，如下图所示：</p>
<p><img src="https://s2.loli.net/2022/05/18/r6SBcVZJkpTGbOE.png" alt="image-20220518100916219"></p>
<p>Android项目打包生成APK之后，会将项目打包成Jar包或者war包，此时就不会存在 assets/resources 目录，JVM会在编译项目时，主动将 java文件编译成 class文件 和 resources 下的静态文件放在 target/classes目录下；</p>
<p>也就是说我们在打包之后上述目录结构已经发生变化，此时再用原来的路径去索引文件，必然是索引不到的，那么我们还想去索引这个文件怎么办呢？</p>
<h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2>
<p>我们可以用Java提供的方法获取文件流</p>
<pre class="highlight"><code class="Java"><span class="hljs-type">InputStream</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getClass().getResourceAsStream(<span class="hljs-string">"/assets/xxx.xls"</span>);
</code></pre>
<p>从而去使用文件。</p>
<p>需要注意的是，路径的开头的 / 是不能少的，它代表的就是从src目录-根目录，而资源文件路径就是从src开始找，这样工程打包以后同样可以找到路径。</p>
<p>参考：<a href="https://www.cnblogs.com/blogtech/p/11151780.html">Java项目读取resources资源文件路径那点事 </a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>原码、反码、补码、移码</title>
    <url>/blog/2022/0920d1f156.html</url>
    <content><![CDATA[<p><strong>真值：</strong> 通常用正负号来表示正负数，如+15，-13等，这种带符号的数称为真值，真值是机器数所代表的实际值</p>
<p>计算机中通常用0表示正，1表示负，若没有特殊规定，通常按这种表示方式</p>
<p>在现代计算机中，通常用<strong>定点补码表示整数</strong> ，用<strong>定点原码表示小数</strong> ，用<strong>移码表示浮点数的阶码</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">原码</th>
<th style="text-align:center">反码</th>
<th style="text-align:center">补码</th>
<th style="text-align:center">移码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">正整数</td>
<td style="text-align:center">本身，符号位为0</td>
<td style="text-align:center">与原码相同</td>
<td style="text-align:center">与原码相同</td>
<td style="text-align:center">符号位取反</td>
</tr>
<tr>
<td style="text-align:center">负整数</td>
<td style="text-align:center">本身，符号位为1</td>
<td style="text-align:center">符号位不变，数值位按位取反</td>
<td style="text-align:center">反码末位加1</td>
<td style="text-align:center">符号位取反</td>
</tr>
<tr>
<td style="text-align:center">正小数</td>
<td style="text-align:center">本身，符号位为0</td>
<td style="text-align:center">与原码相同</td>
<td style="text-align:center">与原码相同</td>
<td style="text-align:center">小数无移码</td>
</tr>
<tr>
<td style="text-align:center">负小数</td>
<td style="text-align:center">本身，符号位为1</td>
<td style="text-align:center">符号位不变，数值位按位取反</td>
<td style="text-align:center">反码末位加1</td>
<td style="text-align:center">小数无移码</td>
</tr>
</tbody>
</table>
<p>补码变原码：正数为本身，负数依然是先取反，然后末位加一</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">表示范围（机器字长为n + 1）</th>
<th style="text-align:center">特征</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">整数原码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mtext>（</mtext><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mtext>）</mtext><mo>≤</mo><mi>x</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-（2^n -1）\le x \le 2^n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
<td style="text-align:center">0的表示方法有两种,原点对称</td>
</tr>
<tr>
<td style="text-align:center">小数原码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">-(1 - 2^{-n}) \le x \le 1 - 2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.021331em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">0的表示方法有两种,原点对称</td>
</tr>
<tr>
<td style="text-align:center">整数反码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mtext>（</mtext><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mtext>）</mtext><mo>≤</mo><mi>x</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-（2^n -1）\le x \le 2^n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
<td style="text-align:center">0的表示方法有两种,原点对称</td>
</tr>
<tr>
<td style="text-align:center">小数反码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">-(1 - 2^{-n}) \le x \le 1 - 2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.021331em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">0的表示方法有两种,原点对称</td>
</tr>
<tr>
<td style="text-align:center">整数补码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>≤</mo><mi>x</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">- 2^n \le x \le 2^n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.800362em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
<td style="text-align:center">真值0只有一种形式，并规定1000，0000表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><msup><mn>2</mn><mn>7</mn></msup></mrow><annotation encoding="application/x-tex">x = -2^7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">小数补码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo>≤</mo><mo>≤</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">-1 \le \le 1 - 2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">真值0只有一种格式，规定1.000，0000表示x = -1</td>
</tr>
<tr>
<td style="text-align:center">整数移码</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>≤</mo><mi>x</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">- 2^n \le x \le 2^n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.800362em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
<td style="text-align:center">移码只能用于表示整数，0同样只有一种表示形式，很容易对比大小，移码表示数依次真值递增</td>
</tr>
</tbody>
</table>
<ul>
<li>由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[x]_{补}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[-x]_{补}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，将所有位取反，末尾加一</li>
<li>原码实现乘除运算比较简单，加减比较麻烦</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>利用RSA加密算法和MD5哈希算法实现加密通信（C++）</title>
    <url>/blog/2022/052824aa7.html</url>
    <content><![CDATA[<blockquote>
<p>本篇为作者个人作业，仅供参考，转载请注明出处</p>
</blockquote>
<!-- toc -->
<h2 id="实验目的"><a class="markdownIt-Anchor" href="#实验目的"></a> 实验目的</h2>
<p>在保密通信过程中，对消息完整性的检验和对消息来源的认证，是一个非常重要的问题，本次大作业的内容为：</p>
<p>设计一个协议，利用rsa公钥加密算法和MD5哈希算法，实现对消息的完整性检验和发送者身份验证的功能，并编程实现这个协议。程序的要求是假设通讯双方为A和B，并假设发方拥有自己的RSA公钥PKA和私钥SKA ，同时收方B已经通过某种方式知道了发方的公钥PKA  。协议要求对发方A发来的消息，收方B通过检验，能够确定：</p>
<ol>
<li>B收到的消息是完整的，即消息在传送过程中没有遭到非法修改；</li>
<li>B收到的消息来源是真实的，即该消息的确是由A发来的，而不是由其他人伪造的。</li>
</ol>
<h2 id="实验要求"><a class="markdownIt-Anchor" href="#实验要求"></a> 实验要求</h2>
<ol>
<li>分别编写两个程序，一个为发方程序，一个为收方程序，写清楚两个程序分别要完成的功能，并能够在两个程序间进行通讯。</li>
<li>大作业的提交方式同实验报告的提交，也就是说既要提交程序实现的说明文档，也要提交源代码和可执行程序。</li>
</ol>
<h2 id="设计思路"><a class="markdownIt-Anchor" href="#设计思路"></a> 设计思路</h2>
<p>RSA公钥加密算法可以实现对消息的加密和解密，而MD5仅可对消息进行加密处理，且在之前的实验中经过测试均满足雪崩效应，因此初步思路是：</p>
<ol>
<li>利用MD5算法实现对发送方和接收方的身份确认
<ul>
<li>双方均知道对方身份，因此可以发送方对自己的ID使用MD5算法进行加密，并把加密后的密文ID发送给接收方</li>
<li>接收方接收到发送方的密文ID之后，利用自己已知的发送方ID（ID双方均已知，攻击者未知）同样对发送方原始ID进行MD5加密，并与发送方发送的密文ID进行比较，
<ul>
<li>如果一致，由于MD5算法具有雪崩效应，因此可认为发送方即为本人</li>
<li>如果不一致，则立即中止对话，保证信息的安全性</li>
</ul>
</li>
<li>身份确认之后即可进行消息发送接收</li>
</ul>
</li>
<li>身份确认之后利用RSA公钥体系对双方发送消息进行加密和解密
<ul>
<li>双方输入消息，利用RSA对消息进行加密，并把加密后消息使用TCP协议进行发送，这样即便消息被截获没有密钥也无法破译</li>
<li>接收方接收到密文后，利用密钥对其进行解密即可获取消息内容，同样也可发送消息<br>
利用TCP协议进行消息的收发，这里仅用来实现发送消息，TCP协议的安全性暂不考虑</li>
</ul>
</li>
</ol>
<h2 id="实验设计流程图"><a class="markdownIt-Anchor" href="#实验设计流程图"></a> 实验设计流程图</h2>
<p>实验流程图如下：<br>
<img src="https://s2.loli.net/2022/06/02/HJvAI4Raqdk1nxi.png" alt="1654167804"></p>
<p>RSA算法流程图如下：</p>
<p><img src="https://s2.loli.net/2022/06/02/oHS6y7IKfLsnj2D.png" alt="20220602191118"></p>
<p>MD5算法流程图如下：</p>
<p><img src="https://s2.loli.net/2022/05/23/Uj4DuPtrp7wq82v.png" alt="result4"></p>
<h2 id="md5算法实现身份验证"><a class="markdownIt-Anchor" href="#md5算法实现身份验证"></a> MD5算法实现身份验证</h2>
<ol>
<li>
<p>获取输入，该模块用于获取一段明文字符，不定长</p>
</li>
<li>
<p>对获取的不定长字符串进行填充,使其字节长度满足n*512 + 448, 填充规则是第一位填充1，后续填充0，直至满足上述条件，最后再用一个64为二进制字符串表示明文长度，这样填充之后长度为(n + 1)*512</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// 填充字符串</span>
<span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">padding</span><span class="hljs-params">(string src)</span> </span>{
    <span class="hljs-comment">// 以512位,64个字节为一组</span>
    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num = ((src.<span class="hljs-built_in">length</span>() + <span class="hljs-number">8</span>) / <span class="hljs-number">64</span>) + <span class="hljs-number">1</span>;
    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">rec</span><span class="hljs-params">(num*<span class="hljs-number">16</span>)</span></span>;
    strlength = num*<span class="hljs-number">16</span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; src.<span class="hljs-built_in">length</span>(); i++){
        <span class="hljs-comment">// 一个unsigned int对应4个字节，保存4个字符信息</span>
        rec[i&gt;&gt;<span class="hljs-number">2</span>] |= (<span class="hljs-type">int</span>)(src[i]) &lt;&lt; ((i % <span class="hljs-number">4</span>) * <span class="hljs-number">8</span>);
    }
    <span class="hljs-comment">// 补充1000...000</span>
    rec[src.<span class="hljs-built_in">length</span>() &gt;&gt; <span class="hljs-number">2</span>] |= (<span class="hljs-number">0x80</span> &lt;&lt; ((src.<span class="hljs-built_in">length</span>() % <span class="hljs-number">4</span>)*<span class="hljs-number">8</span>));
    <span class="hljs-comment">// 填充原文长度</span>
    rec[rec.<span class="hljs-built_in">size</span>()<span class="hljs-number">-2</span>] = (src.<span class="hljs-built_in">length</span>() &lt;&lt; <span class="hljs-number">3</span>);
    <span class="hljs-keyword">return</span> rec;
}
</code></pre>
</li>
<li>
<p>字符串分块函数，将上述填充之后的字符串分割为L个512字节长度的字符串</p>
</li>
<li>
<p>循环压缩函数：对每个512-bit分组进行64轮迭代运算</p>
<ol>
<li>
<p>对分组（A, B, C, D）中的A进行迭代运算<br>
公式为：A &lt;= B + ((A + f(B,C,D) + X[k] + T[i])) &lt;&lt; S[i]<br>
其中：</p>
<ul>
<li>A,B,C,D代表MD5缓冲区当前的数值</li>
<li>f为轮函数，1-16轮迭代使用F函数，17-32轮迭代使用G函数，33-48轮迭 代使用H函数，49-64轮迭代使用I函数</li>
</ul>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// F函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> (b &amp; c) | ((~b) &amp; d);
}
<span class="hljs-comment">// G函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">G</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> (b &amp; d) | (c &amp; (~d));
}
<span class="hljs-comment">// H函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">H</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> b ^ c ^ d;
}
<span class="hljs-comment">// I函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">I</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
    <span class="hljs-keyword">return</span> c ^ (b | (~d));
}
<span class="hljs-comment">// 移位操作函数</span>
<span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">shift</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> n)</span> </span>{
    <span class="hljs-keyword">return</span> (a &lt;&lt; n) | (a &gt;&gt; (<span class="hljs-number">32</span> - n));
}
</code></pre>
<ul>
<li>X[k]代表当前处理消息分组的第k个32位字，X[k]由第n轮迭代对应的顺序表决定</li>
<li>T[i]代表T表的第i项的值，T[i] = int(2^32 * |sin(i)|)</li>
<li>S[i]对应第i轮的左循环移位的s值</li>
</ul>
</li>
<li>
<p>对分组（A,B,C,D）作循环轮换<br>
公式为：（B,C,D,A）&lt;=（A,B,C,D）</p>
</li>
<li>
<p>按照1， 2步骤进行四轮循环压缩</p>
</li>
</ol>
<pre class="highlight"><code class="C++">    <span class="hljs-comment">// 循环压缩</span>
 <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">iterateFunc</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>* X, <span class="hljs-type">int</span> size = <span class="hljs-number">16</span>)</span> </span>{
     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a = tempA,
                  b = tempB,
                  c = tempC,
                  d = tempD,
                  rec = <span class="hljs-number">0</span>,
                  g, k;
     <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++) {
         <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">16</span>) {
             <span class="hljs-comment">// F迭代</span>
             g = <span class="hljs-built_in">F</span>(b, c, d);
             k = i;
         }
         <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">32</span>) {
             <span class="hljs-comment">// G迭代</span>
             g = <span class="hljs-built_in">G</span>(b, c, d);
             k = (<span class="hljs-number">1</span> + <span class="hljs-number">5</span>*i) % <span class="hljs-number">16</span>;
         }
         <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">48</span>) {
             <span class="hljs-comment">// H迭代</span>
             g = <span class="hljs-built_in">H</span>(b, c, d);
             k = (<span class="hljs-number">5</span> + <span class="hljs-number">3</span>*i) % <span class="hljs-number">16</span>;
         }
         <span class="hljs-keyword">else</span> {
             <span class="hljs-comment">// I迭代</span>
             g = <span class="hljs-built_in">I</span>(b, c, d);
             k = (<span class="hljs-number">7</span>*i) % <span class="hljs-number">16</span>;
         }
         rec = d;
         d = c;
         c = b;
         b = b + <span class="hljs-built_in">shift</span>(a + g + X[k] + T[i], s[i]);
         a = rec;
     }
     tempA += a;
     tempB += b;
     tempC += c;
     tempD += d;
 }
</code></pre>
</li>
<li>
<p>MD5编码主函数：用于调用前面的功能函数对明文字符串进行MD5编码</p>
<ol>
<li>输入待加密的明文字符串</li>
<li>对明文字符串进行填充</li>
<li>对填充后的明文字符串进行分块（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">Y_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>使用预设的初始值初始化MD5缓冲区间（IV）</li>
<li>对各个分块字符串利用公式HMD5(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mo stretchy="false">(</mo></msub><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CV_(i-1), Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)进行循环压缩，运算结果作为下一块的输入（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CV_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>当所有的分块迭代完成后，输出结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">CV_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，L表示最后一个分块的序号</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// MD5加密函数</span>
 <span class="hljs-function">string <span class="hljs-title">encode</span><span class="hljs-params">(string src)</span> </span>{
     vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; rec = <span class="hljs-built_in">padding</span>(src);
     <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; strlength/<span class="hljs-number">16</span>; i++) {
         <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num[<span class="hljs-number">16</span>];
         <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">16</span>; j++) {
             num[j] = rec[i*<span class="hljs-number">16</span>+j];
         }
         <span class="hljs-built_in">iterateFunc</span>(num, <span class="hljs-number">16</span>);
     }
     <span class="hljs-keyword">return</span> format(tempA) + format(tempB) + format(tempC) + format(tempD);
 }
</code></pre>
</li>
</ol>
<h2 id="rsa实现信息加密解密"><a class="markdownIt-Anchor" href="#rsa实现信息加密解密"></a> RSA实现信息加密解密</h2>
<h3 id="rsa原理"><a class="markdownIt-Anchor" href="#rsa原理"></a> RSA原理</h3>
<ol>
<li>公钥<br>
选择两个不同的大素数p和q，n是二者的乘积，即$ n=pq <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，使</mtext></mrow><annotation encoding="application/x-tex">，
 使</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">使</span></span></span></span>$ \varphi (n)=(p-1)(q-1) $$为欧拉函数。<br>
随机选取正整数e，使其满足$ gcd(e,\varphi (n))=1 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，即</mtext><mi>e</mi><mtext>和</mtext></mrow><annotation encoding="application/x-tex">，即e和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">即</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">和</span></span></span></span>\phi (n)$互素，则将(e,n)作为公钥。</li>
<li>私钥<br>
求出正数d，使其满足$ e \times d \equiv 1mod\varphi (n) $，则将(d,n)作为私钥。</li>
<li>加密算法<br>
对于明文m，由$ c \equiv m^emodn $，得到密文c，这里需要注意明文的分组方法。</li>
<li>解密算法<br>
对于密文c，由$ m \equiv c^dmodn $，得到明文m。</li>
</ol>
<h3 id="实现过程"><a class="markdownIt-Anchor" href="#实现过程"></a> 实现过程</h3>
<p>C++中大数需要用到gmp库,简单说下怎么安装</p>
<ul>
<li>
<p>Linux一行命令的事情</p>
<pre class="highlight"><code class="C++">sudo apt-get install libgmp-dev
</code></pre>
</li>
<li>
<p>Windows下需要MinGW,打开<code>MinGW Installation Manager</code>,左侧<code>All Packages</code>选中，然后找到<code>MinGW-gmp</code>，版本的话选择<code>dev</code>，右键<code>Mark for Installation</code>，然后菜单栏<code>Installation</code>选择<code>Apply Changes</code>即可，等待安装即可。<br>
<img src="https://s2.loli.net/2022/06/02/WMX1Tlh4Q2aUpLb.png" alt="20220602224307"></p>
</li>
</ul>
<ol>
<li>首先定义一个密钥对结构体：</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">key_pair</span> {
    string n;
    string d;
    <span class="hljs-type">int</span> e;
};
</code></pre>
<ol start="2">
<li>利用GMP的素性测试和数据生成完成两个大素数p，q的生成</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-comment">//生成两个大素数</span>
<span class="hljs-function"><span class="hljs-type">mpz_t</span> * <span class="hljs-title">gen_primes</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-type">gmp_randstate_t</span> grt;
    <span class="hljs-built_in">gmp_randinit_default</span>(grt);
    <span class="hljs-built_in">gmp_randseed_ui</span>(grt, <span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));
    
    <span class="hljs-type">mpz_t</span> key_p, key_q;
    <span class="hljs-built_in">mpz_init</span>(key_p);
    <span class="hljs-built_in">mpz_init</span>(key_q);
 
    <span class="hljs-built_in">mpz_urandomb</span>(key_p, grt, KEY_LENGTH / <span class="hljs-number">2</span>);
    <span class="hljs-built_in">mpz_urandomb</span>(key_q, grt, KEY_LENGTH / <span class="hljs-number">2</span>); <span class="hljs-comment">//随机生成两个大整数</span>
 
    <span class="hljs-type">mpz_t</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">mpz_t</span>[<span class="hljs-number">2</span>];
    <span class="hljs-built_in">mpz_init</span>(result[<span class="hljs-number">0</span>]);
    <span class="hljs-built_in">mpz_init</span>(result[<span class="hljs-number">1</span>]);
 
    <span class="hljs-built_in">mpz_nextprime</span>(result[<span class="hljs-number">0</span>], key_p);  <span class="hljs-comment">//使用GMP自带的素数生成函数</span>
    <span class="hljs-built_in">mpz_nextprime</span>(result[<span class="hljs-number">1</span>], key_q);
 
    <span class="hljs-built_in">mpz_clear</span>(key_p);
    <span class="hljs-built_in">mpz_clear</span>(key_q);
 
    <span class="hljs-keyword">return</span> result;    
}
</code></pre>
<ol start="3">
<li>根据RSA原理生成密钥对</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-comment">//生成密钥对</span>
<span class="hljs-function">key_pair * <span class="hljs-title">gen_key_pair</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-type">mpz_t</span> * primes = <span class="hljs-built_in">gen_primes</span>();
 
    <span class="hljs-type">mpz_t</span> key_n, key_e, key_f;
    <span class="hljs-built_in">mpz_init</span>(key_n);
    <span class="hljs-built_in">mpz_init</span>(key_f);
    <span class="hljs-built_in">mpz_init_set_ui</span>(key_e, <span class="hljs-number">65537</span>);    <span class="hljs-comment">//设置e为65537</span>
 
    <span class="hljs-built_in">mpz_mul</span>(key_n, primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">1</span>]);        <span class="hljs-comment">//计算n=p*q</span>
    <span class="hljs-built_in">mpz_sub_ui</span>(primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>);        <span class="hljs-comment">//p=p-1</span>
    <span class="hljs-built_in">mpz_sub_ui</span>(primes[<span class="hljs-number">1</span>], primes[<span class="hljs-number">1</span>], <span class="hljs-number">1</span>);        <span class="hljs-comment">//q=q-1</span>
    <span class="hljs-built_in">mpz_mul</span>(key_f, primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">1</span>]);        <span class="hljs-comment">//计算欧拉函数φ(n)=(p-1)*(q-1)</span>
 
    <span class="hljs-type">mpz_t</span> key_d;    
    <span class="hljs-built_in">mpz_init</span>(key_d);
    <span class="hljs-built_in">mpz_invert</span>(key_d, key_e, key_f);   <span class="hljs-comment">//计算数论倒数</span>
 
    key_pair * result = <span class="hljs-keyword">new</span> key_pair;
 
    <span class="hljs-type">char</span> * buf_n = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-type">char</span> * buf_d = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
 
    <span class="hljs-built_in">mpz_get_str</span>(buf_n, BASE, key_n);
    result-&gt;n = buf_n;
    <span class="hljs-built_in">mpz_get_str</span>(buf_d, BASE, key_d);
    result-&gt;d = buf_d;
    result-&gt;e = <span class="hljs-number">65537</span>;
 
    <span class="hljs-built_in">mpz_clear</span>(primes[<span class="hljs-number">0</span>]);   <span class="hljs-comment">//释放内存</span>
    <span class="hljs-built_in">mpz_clear</span>(primes[<span class="hljs-number">1</span>]);
    <span class="hljs-built_in">mpz_clear</span>(key_n);
    <span class="hljs-built_in">mpz_clear</span>(key_d);
    <span class="hljs-built_in">mpz_clear</span>(key_e);
    <span class="hljs-built_in">mpz_clear</span>(key_f);
    <span class="hljs-keyword">delete</span> []primes;

    <span class="hljs-keyword">return</span> result;
}
</code></pre>
<ol start="4">
<li>加密函数</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-type">char</span> * plain_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">int</span> key_e)</span>  </span>{
    <span class="hljs-type">mpz_t</span> M, C1, n;
    <span class="hljs-built_in">mpz_init_set_str</span>(M, plain_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_ui</span>(C1, <span class="hljs-number">0</span>);
 
    <span class="hljs-built_in">mpz_powm_ui</span>(C1, M, key_e, n);    <span class="hljs-comment">//使用GMP中模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, C1);
 
    <span class="hljs-keyword">return</span> result;
}
</code></pre>
<ol start="5">
<li>解密函数</li>
</ol>
<pre class="highlight"><code class="C++"><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">char</span> * cipher_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_d)</span>  </span>{
    <span class="hljs-type">mpz_t</span> M, C1, n, d;
    <span class="hljs-built_in">mpz_init_set_str</span>(C1, cipher_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_str</span>(d, key_d, BASE);
    <span class="hljs-built_in">mpz_init</span>(M);
 
    <span class="hljs-built_in">mpz_powm</span>(M, C1, d, n);   <span class="hljs-comment">//使用GMP中的模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, M);
 
    <span class="hljs-keyword">return</span> result;
}
</code></pre>
<h2 id="主程序"><a class="markdownIt-Anchor" href="#主程序"></a> 主程序</h2>
<ol>
<li>对A,B双方分别创建套接字，采用TCP，IPv4协议，输入自己的昵称之后经过TCP的三次握手即可连接成功</li>
<li>接下来进入身份确认环节，对AB双方发送的身份信息进行确认，利用对方昵称生成MD5密文，对比发送密文即可判断</li>
</ol>
<pre class="highlight"><code class="C++">    MD5 tmp_name;
    string tmp_s = tmp_name.<span class="hljs-built_in">encode</span>(client_name_tmp);
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; tmp_s.<span class="hljs-built_in">length</span>(); i++) {
        client_name[i] = tmp_s[i];
    }

    send_len = <span class="hljs-built_in">send</span>(client, client_name, <span class="hljs-built_in">sizeof</span>(client_name), <span class="hljs-number">0</span>);
    receive_len = <span class="hljs-built_in">recv</span>(client, server_name, <span class="hljs-built_in">sizeof</span>(server_name), <span class="hljs-number">0</span>);

    <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY|FOREGROUND_RED);
    cout &lt;&lt; endl;
    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">IdConfirm</span>(server_name, <span class="hljs-string">"lkp1"</span>)) {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm success, Let's chatting..."</span> &lt;&lt; endl &lt;&lt; endl;
    } <span class="hljs-keyword">else</span> {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm failed, Conversation aborted..."</span>;
        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    }
</code></pre>
<ol start="3">
<li>身份确认成功之后即可进入发送环节，双方回合制发送信息
<ul>
<li>如果输入12582则表示当前回合结束，对方可发送信息</li>
<li>如果输入12581则表示想要退出聊天，则发送双方结束本次聊天</li>
<li>如果是其他信息，则相对信息进行加密然后发送，为了演示加密过程，在发送信息下方打印出密文和明文详情</li>
</ul>
</li>
</ol>
<h2 id="实验演示截图"><a class="markdownIt-Anchor" href="#实验演示截图"></a> 实验演示截图</h2>
<p>为了演示清晰，程序对文字进行了颜色处理，采用最原始聊天的蓝绿风格，并对身份确认环节进行红色处理。</p>
<p>默认双方昵称为lkp1和lkp2。</p>
<p>双方正常对话发送消息<br>
<img src="https://s2.loli.net/2022/06/02/XO8BGUYbve3xVuC.png" alt="20220602193209"></p>
<p>client结束本轮对话，由server发送消息<br>
<img src="https://s2.loli.net/2022/06/02/JeGg7Fcfu6vq8CE.png" alt="20220602193357"></p>
<p>server发送完消息之后输入12581结束本次对话<br>
<img src="https://s2.loli.net/2022/06/02/QT1hBk8ixKj7pGv.png" alt="20220602193553"></p>
<p>接下来演示身份错误环节<br>
<img src="https://s2.loli.net/2022/06/02/3DixqSKjXVzYZ9M.png" alt="20220602194244"></p>
<p>实验实现了目标里面的功能并且能够双向通信。</p>
<h2 id="源代码"><a class="markdownIt-Anchor" href="#源代码"></a> 源代码</h2>
<h3 id="文件树"><a class="markdownIt-Anchor" href="#文件树"></a> 文件树</h3>
<p>├───Client<br>
│——|——client.cpp<br>
│——|——client.exe<br>
│——|——client.h<br>
│——|——MD5.h<br>
├───Server<br>
│——|——generateKey.cpp<br>
│——|——generateKey.exe<br>
│——|——MD5.h<br>
│——|——server.cpp<br>
│——|——server.exe<br>
│——|——server.h</p>
<h3 id="md5h"><a class="markdownIt-Anchor" href="#md5h"></a> MD5.h</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span>

<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;

<span class="hljs-meta">#<span class="hljs-keyword">define</span> A 0x67452301</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> B 0xefcdab89</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> C 0x98badcfe</span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> D 0x10325476</span>

<span class="hljs-type">const</span> <span class="hljs-type">char</span> str16[] = <span class="hljs-string">"0123456789abcdef"</span>;

<span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> T[] = {
    <span class="hljs-number">0xd76aa478</span>,<span class="hljs-number">0xe8c7b756</span>,<span class="hljs-number">0x242070db</span>,<span class="hljs-number">0xc1bdceee</span>,
    <span class="hljs-number">0xf57c0faf</span>,<span class="hljs-number">0x4787c62a</span>,<span class="hljs-number">0xa8304613</span>,<span class="hljs-number">0xfd469501</span>,
    <span class="hljs-number">0x698098d8</span>,<span class="hljs-number">0x8b44f7af</span>,<span class="hljs-number">0xffff5bb1</span>,<span class="hljs-number">0x895cd7be</span>,
    <span class="hljs-number">0x6b901122</span>,<span class="hljs-number">0xfd987193</span>,<span class="hljs-number">0xa679438e</span>,<span class="hljs-number">0x49b40821</span>,
    <span class="hljs-number">0xf61e2562</span>,<span class="hljs-number">0xc040b340</span>,<span class="hljs-number">0x265e5a51</span>,<span class="hljs-number">0xe9b6c7aa</span>,
    <span class="hljs-number">0xd62f105d</span>,<span class="hljs-number">0x02441453</span>,<span class="hljs-number">0xd8a1e681</span>,<span class="hljs-number">0xe7d3fbc8</span>,
    <span class="hljs-number">0x21e1cde6</span>,<span class="hljs-number">0xc33707d6</span>,<span class="hljs-number">0xf4d50d87</span>,<span class="hljs-number">0x455a14ed</span>,
    <span class="hljs-number">0xa9e3e905</span>,<span class="hljs-number">0xfcefa3f8</span>,<span class="hljs-number">0x676f02d9</span>,<span class="hljs-number">0x8d2a4c8a</span>,
    <span class="hljs-number">0xfffa3942</span>,<span class="hljs-number">0x8771f681</span>,<span class="hljs-number">0x6d9d6122</span>,<span class="hljs-number">0xfde5380c</span>,
    <span class="hljs-number">0xa4beea44</span>,<span class="hljs-number">0x4bdecfa9</span>,<span class="hljs-number">0xf6bb4b60</span>,<span class="hljs-number">0xbebfbc70</span>,
    <span class="hljs-number">0x289b7ec6</span>,<span class="hljs-number">0xeaa127fa</span>,<span class="hljs-number">0xd4ef3085</span>,<span class="hljs-number">0x04881d05</span>,
    <span class="hljs-number">0xd9d4d039</span>,<span class="hljs-number">0xe6db99e5</span>,<span class="hljs-number">0x1fa27cf8</span>,<span class="hljs-number">0xc4ac5665</span>,
    <span class="hljs-number">0xf4292244</span>,<span class="hljs-number">0x432aff97</span>,<span class="hljs-number">0xab9423a7</span>,<span class="hljs-number">0xfc93a039</span>,
    <span class="hljs-number">0x655b59c3</span>,<span class="hljs-number">0x8f0ccc92</span>,<span class="hljs-number">0xffeff47d</span>,<span class="hljs-number">0x85845dd1</span>,
    <span class="hljs-number">0x6fa87e4f</span>,<span class="hljs-number">0xfe2ce6e0</span>,<span class="hljs-number">0xa3014314</span>,<span class="hljs-number">0x4e0811a1</span>,
    <span class="hljs-number">0xf7537e82</span>,<span class="hljs-number">0xbd3af235</span>,<span class="hljs-number">0x2ad7d2bb</span>,<span class="hljs-number">0xeb86d391</span> };

<span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> s[] = { <span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">22</span>,
                           <span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">20</span>,
                           <span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">16</span>,<span class="hljs-number">23</span>,
                           <span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">21</span>};

<span class="hljs-comment">// 第一部分是要进行 HASH 运算的原始明文，第二部分则是其对应的 HASH 值</span>
<span class="hljs-type">static</span> <span class="hljs-type">const</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">data</span>{
    string msg;
    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> hash[<span class="hljs-number">16</span>];
}tests[] = {
    { <span class="hljs-string">""</span>,
      { <span class="hljs-number">0xd4</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x04</span>, 
        <span class="hljs-number">0xe9</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x7e</span> } },
    { <span class="hljs-string">"a"</span>,
      {<span class="hljs-number">0x0c</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xa8</span>, 
       <span class="hljs-number">0x31</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x61</span> } },
    { <span class="hljs-string">"abc"</span>,
      { <span class="hljs-number">0x90</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xb0</span>, 
        <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x72</span> } },
    { <span class="hljs-string">"message digest"</span>, 
      { <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x8d</span>, 
        <span class="hljs-number">0x52</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xd0</span> } }, 
    { <span class="hljs-string">"abcdefghijklmnopqrstuvwxyz"</span>,
      { <span class="hljs-number">0xc3</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x00</span>, 
        <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x3b</span> } },
    { <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>,
      { <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0xf5</span>, 
        <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x9f</span> } },
    { <span class="hljs-string">"12345678901234567890123456789012345678901234567890123456789012345678901234567890"</span>,
      { <span class="hljs-number">0x57</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x55</span>, 
        <span class="hljs-number">0xac</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x7a</span> } },

};

<span class="hljs-keyword">class</span> <span class="hljs-title class_">MD5</span> {
<span class="hljs-keyword">private</span>:
    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> tempA, tempB, tempC, tempD, strlength;
<span class="hljs-keyword">public</span>:
    <span class="hljs-built_in">MD5</span>() {
        tempA = A;
        tempB = B;
        tempC = C;
        tempD = D;
        strlength = <span class="hljs-number">0</span>;
    }
    <span class="hljs-comment">// 填充字符串</span>
    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">padding</span><span class="hljs-params">(string src)</span> </span>{
        <span class="hljs-comment">// 以512位,64个字节为一组</span>
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num = ((src.<span class="hljs-built_in">length</span>() + <span class="hljs-number">8</span>) / <span class="hljs-number">64</span>) + <span class="hljs-number">1</span>;
        <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; <span class="hljs-title">rec</span><span class="hljs-params">(num*<span class="hljs-number">16</span>)</span></span>;
        strlength = num*<span class="hljs-number">16</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; src.<span class="hljs-built_in">length</span>(); i++){
            <span class="hljs-comment">// 一个unsigned int对应4个字节，保存4个字符信息</span>
            rec[i&gt;&gt;<span class="hljs-number">2</span>] |= (<span class="hljs-type">int</span>)(src[i]) &lt;&lt; ((i % <span class="hljs-number">4</span>) * <span class="hljs-number">8</span>);
        }
        <span class="hljs-comment">// 补充1000...000</span>
        rec[src.<span class="hljs-built_in">length</span>() &gt;&gt; <span class="hljs-number">2</span>] |= (<span class="hljs-number">0x80</span> &lt;&lt; ((src.<span class="hljs-built_in">length</span>() % <span class="hljs-number">4</span>)*<span class="hljs-number">8</span>));
        <span class="hljs-comment">// 填充原文长度</span>
        rec[rec.<span class="hljs-built_in">size</span>()<span class="hljs-number">-2</span>] = (src.<span class="hljs-built_in">length</span>() &lt;&lt; <span class="hljs-number">3</span>);
        <span class="hljs-keyword">return</span> rec;
    }
    <span class="hljs-comment">// F函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> (b &amp; c) | ((~b) &amp; d);
    }
    <span class="hljs-comment">// G函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">G</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> (b &amp; d) | (c &amp; (~d));
    }
    <span class="hljs-comment">// H函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">H</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> b ^ c ^ d;
    }
    <span class="hljs-comment">// I函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">I</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d)</span> </span>{
        <span class="hljs-keyword">return</span> c ^ (b | (~d));
    }
    <span class="hljs-comment">// 移位操作函数</span>
    <span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title">shift</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> n)</span> </span>{
        <span class="hljs-keyword">return</span> (a &lt;&lt; n) | (a &gt;&gt; (<span class="hljs-number">32</span> - n));
    }
    <span class="hljs-comment">// 循环压缩</span>
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">iterateFunc</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>* X, <span class="hljs-type">int</span> size = <span class="hljs-number">16</span>)</span> </span>{
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a = tempA,
                     b = tempB,
                     c = tempC,
                     d = tempD,
                     rec = <span class="hljs-number">0</span>,
                     g, k;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++) {
            <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">16</span>) {
                <span class="hljs-comment">// F迭代</span>
                g = <span class="hljs-built_in">F</span>(b, c, d);
                k = i;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">32</span>) {
                <span class="hljs-comment">// G迭代</span>
                g = <span class="hljs-built_in">G</span>(b, c, d);
                k = (<span class="hljs-number">1</span> + <span class="hljs-number">5</span>*i) % <span class="hljs-number">16</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">48</span>) {
                <span class="hljs-comment">// H迭代</span>
                g = <span class="hljs-built_in">H</span>(b, c, d);
                k = (<span class="hljs-number">5</span> + <span class="hljs-number">3</span>*i) % <span class="hljs-number">16</span>;
            }
            <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">// I迭代</span>
                g = <span class="hljs-built_in">I</span>(b, c, d);
                k = (<span class="hljs-number">7</span>*i) % <span class="hljs-number">16</span>;
            }
            rec = d;
            d = c;
            c = b;
            b = b + <span class="hljs-built_in">shift</span>(a + g + X[k] + T[i], s[i]);
            a = rec;
        }
        tempA += a;
        tempB += b;
        tempC += c;
        tempD += d;
    }
    <span class="hljs-comment">// 整理输出</span>
    <span class="hljs-function">string <span class="hljs-title">format</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num)</span> </span>{
        string res = <span class="hljs-string">""</span>;
        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> base = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">8</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) {
            string tmp = <span class="hljs-string">""</span>;
            <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b = (num &gt;&gt; (i * <span class="hljs-number">8</span>)) % base &amp; <span class="hljs-number">0xff</span>;
            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">2</span>; j++) {
                tmp = str16[b%<span class="hljs-number">16</span>] + tmp;
                b /= <span class="hljs-number">16</span>;
            }
            res += tmp;
        }
        <span class="hljs-keyword">return</span> res;
    }
    <span class="hljs-comment">// 编码函数</span>
    <span class="hljs-function">string <span class="hljs-title">encode</span><span class="hljs-params">(string src)</span> </span>{
        vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt; rec = <span class="hljs-built_in">padding</span>(src);
        <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; strlength/<span class="hljs-number">16</span>; i++) {
            <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num[<span class="hljs-number">16</span>];
            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">16</span>; j++) {
                num[j] = rec[i*<span class="hljs-number">16</span>+j];
            }
            <span class="hljs-built_in">iterateFunc</span>(num, <span class="hljs-number">16</span>);
        }
        <span class="hljs-keyword">return</span> format(tempA) + format(tempB) + format(tempC) + format(tempD);
    }
};
</code></pre>
<h3 id="generatekeycpp"><a class="markdownIt-Anchor" href="#generatekeycpp"></a> generateKey.cpp</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ctime&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstring&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;gmp.h&gt;</span></span>
 
<span class="hljs-meta">#<span class="hljs-keyword">define</span> KEY_LENGTH 2048  <span class="hljs-comment">//公钥的长度</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> BASE 16    <span class="hljs-comment">//输入输出的数字进制</span></span>
 
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;
 
<span class="hljs-keyword">struct</span> <span class="hljs-title class_">key_pair</span> {
    string n;
    string d;
    <span class="hljs-type">int</span> e;
};
 
<span class="hljs-comment">//生成两个大素数</span>
<span class="hljs-function"><span class="hljs-type">mpz_t</span> * <span class="hljs-title">gen_primes</span><span class="hljs-params">()</span>
</span>{                                        
    <span class="hljs-type">gmp_randstate_t</span> grt;                
    <span class="hljs-built_in">gmp_randinit_default</span>(grt);    
    <span class="hljs-built_in">gmp_randseed_ui</span>(grt, <span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));    
    
    <span class="hljs-type">mpz_t</span> key_p, key_q;
    <span class="hljs-built_in">mpz_init</span>(key_p);
    <span class="hljs-built_in">mpz_init</span>(key_q);
 
    <span class="hljs-built_in">mpz_urandomb</span>(key_p, grt, KEY_LENGTH / <span class="hljs-number">2</span>);        
    <span class="hljs-built_in">mpz_urandomb</span>(key_q, grt, KEY_LENGTH / <span class="hljs-number">2</span>);    <span class="hljs-comment">//随机生成两个大整数</span>
 
    <span class="hljs-type">mpz_t</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">mpz_t</span>[<span class="hljs-number">2</span>];
    <span class="hljs-built_in">mpz_init</span>(result[<span class="hljs-number">0</span>]);
    <span class="hljs-built_in">mpz_init</span>(result[<span class="hljs-number">1</span>]);
 
    <span class="hljs-built_in">mpz_nextprime</span>(result[<span class="hljs-number">0</span>], key_p);  <span class="hljs-comment">//使用GMP自带的素数生成函数</span>
    <span class="hljs-built_in">mpz_nextprime</span>(result[<span class="hljs-number">1</span>], key_q);
 
    <span class="hljs-built_in">mpz_clear</span>(key_p);
    <span class="hljs-built_in">mpz_clear</span>(key_q);
 
    <span class="hljs-keyword">return</span> result;    
}
 
<span class="hljs-comment">//生成密钥对</span>
<span class="hljs-function">key_pair * <span class="hljs-title">gen_key_pair</span><span class="hljs-params">()</span>
</span>{
    <span class="hljs-type">mpz_t</span> * primes = <span class="hljs-built_in">gen_primes</span>();
 
    <span class="hljs-type">mpz_t</span> key_n, key_e, key_f;
    <span class="hljs-built_in">mpz_init</span>(key_n);
    <span class="hljs-built_in">mpz_init</span>(key_f);
    <span class="hljs-built_in">mpz_init_set_ui</span>(key_e, <span class="hljs-number">65537</span>);    <span class="hljs-comment">//设置e为65537</span>
 
    <span class="hljs-built_in">mpz_mul</span>(key_n, primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">1</span>]);        <span class="hljs-comment">//计算n=p*q</span>
    <span class="hljs-built_in">mpz_sub_ui</span>(primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>);        <span class="hljs-comment">//p=p-1</span>
    <span class="hljs-built_in">mpz_sub_ui</span>(primes[<span class="hljs-number">1</span>], primes[<span class="hljs-number">1</span>], <span class="hljs-number">1</span>);        <span class="hljs-comment">//q=q-1</span>
    <span class="hljs-built_in">mpz_mul</span>(key_f, primes[<span class="hljs-number">0</span>], primes[<span class="hljs-number">1</span>]);        <span class="hljs-comment">//计算欧拉函数φ(n)=(p-1)*(q-1)</span>
 
    <span class="hljs-type">mpz_t</span> key_d;    
    <span class="hljs-built_in">mpz_init</span>(key_d);
    <span class="hljs-built_in">mpz_invert</span>(key_d, key_e, key_f);   <span class="hljs-comment">//计算数论倒数</span>
 
    key_pair * result = <span class="hljs-keyword">new</span> key_pair;
 
    <span class="hljs-type">char</span> * buf_n = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-type">char</span> * buf_d = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
 
    <span class="hljs-built_in">mpz_get_str</span>(buf_n, BASE, key_n);
    result-&gt;n = buf_n;
    <span class="hljs-built_in">mpz_get_str</span>(buf_d, BASE, key_d);
    result-&gt;d = buf_d;
    result-&gt;e = <span class="hljs-number">65537</span>;
 
    <span class="hljs-built_in">mpz_clear</span>(primes[<span class="hljs-number">0</span>]);   <span class="hljs-comment">//释放内存</span>
    <span class="hljs-built_in">mpz_clear</span>(primes[<span class="hljs-number">1</span>]);
    <span class="hljs-built_in">mpz_clear</span>(key_n);
    <span class="hljs-built_in">mpz_clear</span>(key_d);
    <span class="hljs-built_in">mpz_clear</span>(key_e);
    <span class="hljs-built_in">mpz_clear</span>(key_f);
    <span class="hljs-keyword">delete</span> []primes;

    <span class="hljs-keyword">return</span> result;
}

<span class="hljs-function">key_pair* <span class="hljs-title">getKey</span> <span class="hljs-params">(<span class="hljs-type">char</span> name)</span> </span>{
    key_pair * p = <span class="hljs-built_in">gen_key_pair</span>();
 
    cout &lt;&lt; <span class="hljs-string">"n = "</span> &lt;&lt; p-&gt;n &lt;&lt; endl;
    cout &lt;&lt; <span class="hljs-string">"d = "</span> &lt;&lt; p-&gt;d &lt;&lt; endl;
    cout &lt;&lt; <span class="hljs-string">"e = "</span> &lt;&lt; p-&gt;e &lt;&lt; endl;

    cout &lt;&lt; name &lt;&lt; <span class="hljs-string">"s public key is:("</span> &lt;&lt; p-&gt;n &lt;&lt; <span class="hljs-string">", "</span> &lt;&lt; p-&gt;e &lt;&lt; <span class="hljs-string">")"</span> &lt;&lt; endl &lt;&lt; endl; <span class="hljs-comment">//输出公钥(n, e)</span>
    cout &lt;&lt; name &lt;&lt; <span class="hljs-string">"s private key is:("</span> &lt;&lt; p-&gt;n &lt;&lt; <span class="hljs-string">", "</span> &lt;&lt; p-&gt;d &lt;&lt; <span class="hljs-string">")"</span> &lt;&lt; endl &lt;&lt; endl; <span class="hljs-comment">//输出私钥(n, d)</span>
    <span class="hljs-keyword">return</span> p;
}

<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">generateABKey</span><span class="hljs-params">()</span> </span>{
    key_pair * A = <span class="hljs-built_in">getKey</span>(<span class="hljs-string">'A'</span>);
    key_pair * B = <span class="hljs-built_in">getKey</span>(<span class="hljs-string">'B'</span>);
}

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>
</span>{        
    <span class="hljs-built_in">generateABKey</span>();
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
}
</code></pre>
<h3 id="serverh"><a class="markdownIt-Anchor" href="#serverh"></a> Server.h</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ctime&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstring&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;gmp.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">"MD5.h"</span></span>
 
<span class="hljs-meta">#<span class="hljs-keyword">define</span> KEY_LENGTH 2048  <span class="hljs-comment">//公钥的长度</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> BASE 16    <span class="hljs-comment">//输入输出的数字进制</span></span>
 
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;
 
<span class="hljs-keyword">struct</span> <span class="hljs-title class_">key_pair</span>
{
    string n;
    string d;
    <span class="hljs-type">int</span> e;
    string k;
};

key_pair* key = <span class="hljs-keyword">new</span> key_pair;

<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">keyInit</span><span class="hljs-params">()</span> </span>{
    key-&gt;n = <span class="hljs-string">"42ed95a8c26d10e856d7ac17e9451037457d5f6e66b824471229ac1422d28f868d6699492c7c31b6d10ed32ee6ad3cbb00bbefe2e76de75b924342781f3f67fd09a3d67c639363c97af569fb52863901f1b6b5e7901c00c989dd7847fc7f55989bf4775969254c2dc0d8e9f7e7dbb5e158c97f5d7d18de47766ee1efb2a3d7e899d019240701e2dec5ca8473a34cea6b6dcb62cff25d40858df7b37e3c14bac390d26926cf30c977b7417130bced9fcce5b7ff6923ab21652a2bf73c3dd0c40a3398f02261e9bd75a24134264412b3371c03daa715e2ad74c20d0ab895ab7025b0bec1eea316146127a5a6d97aa4f09c82624d7f897ef93a7d114cc0757d4253"</span>;
    key-&gt;d = <span class="hljs-string">"1f3c797be0fa3c48e3b716e7b60478b40327a77184596efd089a1068f973a26edef1c29ae73b338caa77abd298f0c38657aa5f245c74ebe4ce17bc1f0a1e72af235fa70c3901223277c3b06a0eb2fc4a4f00c25747e7f9ea16011a5126a45b53b57ddc720b63cff10eaf6e4b38984f83d4077efd281482318231f01b0a19f3fb58f835baa189bd387e4ba9d7da4b597d84fdcffc22e707be41adb6ca20f05787cf7e6d1ef27fb8e18ecb4d7ba9f544488e0d109cad4e7befa47020b8e568cf509543fc972b79aa1a8fb49149b517384b5b458f7a8052c299e3605fe12c786cd80f3fd8a2dc7f0ae67ecf1c3b2212d2b21fe5b7588a2d977af636cc461ec78c99"</span>;
    key-&gt;e = <span class="hljs-number">65537</span>;
    key-&gt;k = <span class="hljs-string">"77232546f0b2983adb0ab839b04b81278bcbdc2d34f06a248333cd33e3c139fb578ca19b389e0253fa6f3b3b41e2fd0f6f1fa7e94499fa212afa7f0b2a89f8681dd00e3207c09586c7c6f923016455b652e93ae4bf3b905d7e955fb3102286d9947247f1e75921aaa35840ad3359091e701c167f28be312116c43a13946d0c8d5da8fa21938be40c1f60821d45ef8530d6e24adfd5ab2a1a6ad34545d83c5fcca02a7f29541d6d4cf29778593958957c9b4ad9693289db7743a05bf88480473dc028e4f8e32ff6bdd206910b971ae00c649038aa59baebe8b7af542e9a9b65f69e7efcc17d6a88244cc9520d4b009371c268058e62d707561825ad5a98a81d11"</span>;
}

<span class="hljs-comment">//加密函数</span>
<span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> * plain_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">int</span> key_e)</span>  
</span>{
    <span class="hljs-type">mpz_t</span> M, C1, n;
    <span class="hljs-built_in">mpz_init_set_str</span>(M, plain_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_ui</span>(C1, <span class="hljs-number">0</span>);
 
    <span class="hljs-built_in">mpz_powm_ui</span>(C1, M, key_e, n);    <span class="hljs-comment">//使用GMP中模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, C1);
 
    <span class="hljs-keyword">return</span> result;
}
 
<span class="hljs-comment">//解密函数</span>
<span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> * cipher_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_d)</span>  
</span>{
    <span class="hljs-type">mpz_t</span> M, C1, n, d;
    <span class="hljs-built_in">mpz_init_set_str</span>(C1, cipher_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_str</span>(d, key_d, BASE);
    <span class="hljs-built_in">mpz_init</span>(M);
 
    <span class="hljs-built_in">mpz_powm</span>(M, C1, d, n);   <span class="hljs-comment">//使用GMP中的模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, M);
 
    <span class="hljs-keyword">return</span> result;
}

<span class="hljs-function">string <span class="hljs-title">getTime</span><span class="hljs-params">()</span> </span>{<span class="hljs-comment">//时间函数，返回一个时间戳</span>
    <span class="hljs-type">time_t</span> timep;
    <span class="hljs-built_in">time</span>(&amp;timep);
    <span class="hljs-type">char</span> tmp[<span class="hljs-number">64</span>];
    <span class="hljs-built_in">strftime</span>(tmp, <span class="hljs-built_in">sizeof</span>(tmp), <span class="hljs-string">"%Y-%m-%d %H:%M:%S"</span>, <span class="hljs-built_in">localtime</span>(&amp;timep));
    <span class="hljs-keyword">return</span> tmp;
}

<span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IdConfirm</span> <span class="hljs-params">(string ID, string name)</span> </span>{
    MD5 tmp;
    string hash = tmp.<span class="hljs-built_in">encode</span>(name);
    <span class="hljs-keyword">if</span> (ID.<span class="hljs-built_in">compare</span>(hash)) {
        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;
    }
    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
}
</code></pre>
<h3 id="servercpp"><a class="markdownIt-Anchor" href="#servercpp"></a> Server.cpp</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;winsock.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">"windows.h"</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">"server.h"</span></span>

<span class="hljs-meta">#<span class="hljs-keyword">pragma</span> comment(lib,<span class="hljs-string">"ws2_32.lib"</span>)<span class="hljs-comment">//加载ws2_32.dll</span></span>

<span class="hljs-meta">#<span class="hljs-keyword">define</span> BUF_SIZE 4096   <span class="hljs-comment">//指定聊天信息缓冲区大小</span></span>

<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    WSADATA wsaData;
    <span class="hljs-built_in">WSAStartup</span>(<span class="hljs-built_in">MAKEWORD</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), &amp;wsaData);

    SOCKET server = <span class="hljs-built_in">socket</span>(AF_INET, SOCK_STREAM, <span class="hljs-number">0</span>);<span class="hljs-comment">//创建server套接字，采用ipv4地址，默认TCP协议</span>

    sockaddr_in server_addr;
    <span class="hljs-built_in">memset</span>(&amp;server_addr, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(server_addr));
    server_addr.sin_family = AF_INET;<span class="hljs-comment">//套接字地址也采用IPv4地址</span>
    server_addr.sin_addr.S_un.S_addr = <span class="hljs-built_in">inet_addr</span>(<span class="hljs-string">"127.0.0.1"</span>);<span class="hljs-comment">//本机地址</span>
    server_addr.sin_port = <span class="hljs-built_in">htons</span>(<span class="hljs-number">1234</span>);<span class="hljs-comment">//端口号</span>
    <span class="hljs-built_in">bind</span>(server, (SOCKADDR*)&amp;server_addr, <span class="hljs-built_in">sizeof</span>(server_addr));<span class="hljs-comment">//将套接字和地址绑定</span>

    <span class="hljs-type">char</span> server_name[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };<span class="hljs-comment">//申请一个2048字节的缓冲区，用于储存服务器的名称</span>
    <span class="hljs-type">char</span> server_name_tmp[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };
    cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Please enter your nickname:"</span>;
    cin.<span class="hljs-built_in">getline</span>(server_name_tmp, <span class="hljs-number">2048</span>);  <span class="hljs-comment">//gets()  </span>
    cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Waiting for connection...\n"</span>;

    <span class="hljs-built_in">listen</span>(server, <span class="hljs-number">1</span>);<span class="hljs-comment">//进入监听状态，数字1表示队列中只能存在一个请求</span>

    <span class="hljs-comment">/*服务器已经初始化完毕，等待客户机连接*/</span>

    <span class="hljs-type">char</span> client_name[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };
    SOCKET client;
    SOCKADDR_IN client_addr;
    <span class="hljs-type">int</span> client_addr_len = <span class="hljs-built_in">sizeof</span>(client_addr);

    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
        client = <span class="hljs-built_in">accept</span>(server, (SOCKADDR*)&amp;client_addr, &amp;client_addr_len);
        <span class="hljs-keyword">if</span> (client == INVALID_SOCKET) {
            cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Connection failed.\n"</span> &lt;&lt; <span class="hljs-built_in">WSAGetLastError</span>();
        }
        <span class="hljs-keyword">else</span> {
            cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Connection succeeded!!!\n"</span>;
            <span class="hljs-keyword">break</span>;
        }
    }
    
    <span class="hljs-type">char</span> buffer[BUF_SIZE] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> buffer_send[BUF_SIZE + <span class="hljs-number">100</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> buffer_receive[BUF_SIZE + <span class="hljs-number">100</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">int</span> receive_len = <span class="hljs-number">0</span>;
    <span class="hljs-type">int</span> send_len = <span class="hljs-number">0</span>;
    <span class="hljs-comment">/*通过建立的连接进行通信*/</span>
    <span class="hljs-comment">//发送和接受客户端与服务端的名字  </span>

    MD5 tmp_name;
    string tmp_s = tmp_name.<span class="hljs-built_in">encode</span>(server_name_tmp);
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; tmp_s.<span class="hljs-built_in">length</span>(); i++) {
        server_name[i] = tmp_s[i];
    }
    send_len = <span class="hljs-built_in">send</span>(client, server_name, <span class="hljs-built_in">sizeof</span>(server_name), <span class="hljs-number">0</span>);
    receive_len = <span class="hljs-built_in">recv</span>(client, client_name, <span class="hljs-built_in">sizeof</span>(client_name), <span class="hljs-number">0</span>);
    
    <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY|FOREGROUND_RED);
    cout &lt;&lt; endl;
    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">IdConfirm</span>(client_name, <span class="hljs-string">"lkp2"</span>)) {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm success, Let's chatting..."</span> &lt;&lt; endl &lt;&lt; endl;
    } <span class="hljs-keyword">else</span> {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm failed, Conversation aborted..."</span>;
        <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);
        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    }

    <span class="hljs-built_in">keyInit</span>();

    <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);
    cout &lt;&lt; <span class="hljs-string">"Please enter the message(just number) you want to send, or enter \"12582\" to abort this conversation, or enter \"12581\" to abort this chat"</span> &lt;&lt; endl;

    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {<span class="hljs-comment">//接收消息</span>
            <span class="hljs-built_in">memset</span>(buffer_receive, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer_receive));<span class="hljs-comment">//初始化缓冲区  </span>
            receive_len = <span class="hljs-built_in">recv</span>(client, buffer_receive, <span class="hljs-built_in">sizeof</span>(buffer_receive), <span class="hljs-number">0</span>);
            <span class="hljs-comment">//string tmp(buffer_receive);</span>
            string tmp = <span class="hljs-built_in">decrypt</span>(buffer_receive, key-&gt;n.<span class="hljs-built_in">data</span>(), key-&gt;d.<span class="hljs-built_in">data</span>());
            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer_receive, <span class="hljs-string">"12581"</span>) == <span class="hljs-number">0</span>) {<span class="hljs-comment">//如果聊天内容中含有12581，则退出聊天，关闭socket</span>
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 3 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 2 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 1 seconds..."</span>;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);<span class="hljs-comment">//恢复原来的颜色</span>
                <span class="hljs-built_in">closesocket</span>(server);
                <span class="hljs-built_in">closesocket</span>(client);
                <span class="hljs-built_in">WSACleanup</span>();
                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer_receive, <span class="hljs-string">"12582"</span>) == <span class="hljs-number">0</span>)<span class="hljs-comment">//如果聊天内容中含有12582，则本回合聊天结束，不然可以继续发送信息</span>
                <span class="hljs-keyword">break</span>;
            <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_BLUE);<span class="hljs-comment">//设置蓝色</span>
            <span class="hljs-keyword">if</span> (tmp.<span class="hljs-built_in">find</span>(<span class="hljs-string">"0"</span>) != string::npos) {
                <span class="hljs-keyword">continue</span>;
            }
            cout &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">"Message:"</span> &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"Ciphertext:"</span> &lt;&lt; buffer_receive &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl;
        }
        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {<span class="hljs-comment">//发送消息</span>
            <span class="hljs-built_in">memset</span>(buffer, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer));<span class="hljs-comment">//清空缓冲区</span>
            <span class="hljs-built_in">memset</span>(buffer_send, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer_send));
            <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_GREEN);<span class="hljs-comment">//设置绿色</span>
            string tmp_time = <span class="hljs-built_in">getTime</span>();
            cout &lt;&lt; tmp_time &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; server_name_tmp &lt;&lt; <span class="hljs-string">":"</span>;
            cin.<span class="hljs-built_in">getline</span>(buffer, BUF_SIZE);
            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer, <span class="hljs-string">"12582"</span>) == <span class="hljs-number">0</span>) {
                send_len = <span class="hljs-built_in">send</span>(client, buffer, <span class="hljs-built_in">sizeof</span>(buffer), <span class="hljs-number">0</span>);
                <span class="hljs-keyword">break</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer, <span class="hljs-string">"12581"</span>) == <span class="hljs-number">0</span>) {
                send_len = <span class="hljs-built_in">send</span>(client, buffer, <span class="hljs-built_in">sizeof</span>(buffer), <span class="hljs-number">0</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 3 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 2 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 1 seconds..."</span>;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);<span class="hljs-comment">//恢复原来的颜色</span>
                <span class="hljs-built_in">closesocket</span>(server);
                <span class="hljs-built_in">closesocket</span>(client);
                <span class="hljs-built_in">WSACleanup</span>();
                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
            }
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">"Message:"</span> &lt;&lt; buffer &lt;&lt; endl;
            <span class="hljs-type">char</span>* tmp = <span class="hljs-built_in">encrypt</span>(buffer, key-&gt;k.<span class="hljs-built_in">data</span>(), key-&gt;e);
            cout &lt;&lt; <span class="hljs-string">"Ciphertext:"</span> &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl;
            <span class="hljs-type">char</span> tmp1[<span class="hljs-number">10240</span>];
            <span class="hljs-built_in">strncpy</span>(tmp1, tmp, <span class="hljs-built_in">strlen</span>(tmp) + <span class="hljs-number">1</span>);
            send_len = <span class="hljs-built_in">send</span>(client, tmp1, <span class="hljs-built_in">sizeof</span>(tmp1), <span class="hljs-number">0</span>);
        }
    }
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
}
</code></pre>
<h3 id="clienth"><a class="markdownIt-Anchor" href="#clienth"></a> Client.h</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ctime&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstring&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;gmp.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">"MD5.h"</span></span>

<span class="hljs-meta">#<span class="hljs-keyword">define</span> KEY_LENGTH 2048  <span class="hljs-comment">//公钥的长度</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">define</span> BASE 16    <span class="hljs-comment">//输入输出的数字进制</span></span>
 
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;
 
<span class="hljs-keyword">struct</span> <span class="hljs-title class_">key_pair</span>
{
    string n;
    string d;
    <span class="hljs-type">int</span> e;
    string k;
};

key_pair* key = <span class="hljs-keyword">new</span> key_pair;

<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">keyInit</span><span class="hljs-params">()</span> </span>{
    key-&gt;n = <span class="hljs-string">"77232546f0b2983adb0ab839b04b81278bcbdc2d34f06a248333cd33e3c139fb578ca19b389e0253fa6f3b3b41e2fd0f6f1fa7e94499fa212afa7f0b2a89f8681dd00e3207c09586c7c6f923016455b652e93ae4bf3b905d7e955fb3102286d9947247f1e75921aaa35840ad3359091e701c167f28be312116c43a13946d0c8d5da8fa21938be40c1f60821d45ef8530d6e24adfd5ab2a1a6ad34545d83c5fcca02a7f29541d6d4cf29778593958957c9b4ad9693289db7743a05bf88480473dc028e4f8e32ff6bdd206910b971ae00c649038aa59baebe8b7af542e9a9b65f69e7efcc17d6a88244cc9520d4b009371c268058e62d707561825ad5a98a81d11"</span>;
    key-&gt;d = <span class="hljs-string">"369979d5082ca14d9fe34ac8cd7ddd0415b26906a2d367a1b22b8468ba816ca43edc6997ec9ba5af7cff8b22be305c0fbdbac1464bb55187efdd7b69cfa6099d15c4ab2ccc96bb3058d05c8f696ce54738ba40ce62c1d688b2a19c8940e4c1ee6774f479edafd099166134caebd46b3472e6bc7cac5c75c1976078c94e65a7b164a983dc15d98ed7d95041fa52adb643f87d7590bc1f476264caad4ea47adc7ec6aaedb5afe341a68afc6b8ee32a8eacf17b0d372afcf14258e87901395349a797443e50ee8bddf2fbf121799ba40a3e3b22e76341f07606dc7a810fb000dcbed3fc05a15223b04ff5f9610e9febae25a27a2871a2b75eacaba745e63bbc295d"</span>;
    key-&gt;e = <span class="hljs-number">65537</span>;
    key-&gt;k = <span class="hljs-string">"42ed95a8c26d10e856d7ac17e9451037457d5f6e66b824471229ac1422d28f868d6699492c7c31b6d10ed32ee6ad3cbb00bbefe2e76de75b924342781f3f67fd09a3d67c639363c97af569fb52863901f1b6b5e7901c00c989dd7847fc7f55989bf4775969254c2dc0d8e9f7e7dbb5e158c97f5d7d18de47766ee1efb2a3d7e899d019240701e2dec5ca8473a34cea6b6dcb62cff25d40858df7b37e3c14bac390d26926cf30c977b7417130bced9fcce5b7ff6923ab21652a2bf73c3dd0c40a3398f02261e9bd75a24134264412b3371c03daa715e2ad74c20d0ab895ab7025b0bec1eea316146127a5a6d97aa4f09c82624d7f897ef93a7d114cc0757d4253"</span>;
}

<span class="hljs-comment">//加密函数</span>
<span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-type">char</span> * plain_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">int</span> key_e)</span>  
</span>{
    <span class="hljs-type">mpz_t</span> M, C1, n;
    <span class="hljs-built_in">mpz_init_set_str</span>(M, plain_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_ui</span>(C1, <span class="hljs-number">0</span>);
 
    <span class="hljs-built_in">mpz_powm_ui</span>(C1, M, key_e, n);    <span class="hljs-comment">//使用GMP中模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, C1);
 
    <span class="hljs-keyword">return</span> result;
}
 
<span class="hljs-comment">//解密函数</span>
<span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">char</span> * cipher_text, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_n, <span class="hljs-type">const</span> <span class="hljs-type">char</span> * key_d)</span>  
</span>{
    <span class="hljs-type">mpz_t</span> M, C1, n, d;
    <span class="hljs-built_in">mpz_init_set_str</span>(C1, cipher_text, BASE); 
    <span class="hljs-built_in">mpz_init_set_str</span>(n, key_n, BASE);
    <span class="hljs-built_in">mpz_init_set_str</span>(d, key_d, BASE);
    <span class="hljs-built_in">mpz_init</span>(M);
 
    <span class="hljs-built_in">mpz_powm</span>(M, C1, d, n);   <span class="hljs-comment">//使用GMP中的模幂计算函数</span>
 
    <span class="hljs-type">char</span> * result = <span class="hljs-keyword">new</span> <span class="hljs-type">char</span>[KEY_LENGTH + <span class="hljs-number">10</span>];
    <span class="hljs-built_in">mpz_get_str</span>(result, BASE, M);
 
    <span class="hljs-keyword">return</span> result;
}

<span class="hljs-function">string <span class="hljs-title">getTime</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-type">time_t</span> timep;
    <span class="hljs-built_in">time</span>(&amp;timep);
    <span class="hljs-type">char</span> tmp[<span class="hljs-number">64</span>];
    <span class="hljs-built_in">strftime</span>(tmp, <span class="hljs-built_in">sizeof</span>(tmp), <span class="hljs-string">"%Y-%m-%d %H:%M:%S"</span>, <span class="hljs-built_in">localtime</span>(&amp;timep));
    <span class="hljs-keyword">return</span> tmp;
}

<span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IdConfirm</span> <span class="hljs-params">(string ID, string name)</span> </span>{
    MD5 tmp;
    string hash = tmp.<span class="hljs-built_in">encode</span>(name);
    <span class="hljs-keyword">if</span> (ID.<span class="hljs-built_in">compare</span>(hash)) {
        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;
    }
    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
}
</code></pre>
<h3 id="clientcpp"><a class="markdownIt-Anchor" href="#clientcpp"></a> Client.cpp</h3>
<pre class="highlight"><code class="C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;winsock.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">"windows.h"</span></span>
<span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">"client.h"</span></span>

<span class="hljs-meta">#<span class="hljs-keyword">pragma</span> comment(lib,<span class="hljs-string">"ws2_32.lib"</span>)<span class="hljs-comment">//加载ws2_32.dll</span></span>

<span class="hljs-meta">#<span class="hljs-keyword">define</span> BUF_SIZE 4096   <span class="hljs-comment">//指定聊天信息缓冲区大小</span></span>

<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    WSADATA wsaData;
    <span class="hljs-built_in">WSAStartup</span>(<span class="hljs-built_in">MAKEWORD</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), &amp;wsaData);

    SOCKET client = <span class="hljs-built_in">socket</span>(AF_INET, SOCK_STREAM, <span class="hljs-number">0</span>);

    sockaddr_in server_addr;
    <span class="hljs-built_in">memset</span>(&amp;server_addr, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.S_un.S_addr = <span class="hljs-built_in">inet_addr</span>(<span class="hljs-string">"127.0.0.1"</span>);
    server_addr.sin_port = <span class="hljs-built_in">htons</span>(<span class="hljs-number">1234</span>);

    <span class="hljs-type">char</span> client_name[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> client_name_tmp[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };
    cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Please enter your nickname:"</span>;
    cin.<span class="hljs-built_in">getline</span>(client_name_tmp, <span class="hljs-number">2048</span>);
    <span class="hljs-built_in">connect</span>(client, (SOCKADDR*)&amp;server_addr, <span class="hljs-built_in">sizeof</span>(server_addr));
    cout &lt;&lt; <span class="hljs-built_in">getTime</span>() &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; <span class="hljs-string">"Connection ready.\n"</span>;


    <span class="hljs-type">char</span> server_name[<span class="hljs-number">2048</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> buffer[BUF_SIZE] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> buffer_send[BUF_SIZE + <span class="hljs-number">100</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">char</span> buffer_receive[BUF_SIZE + <span class="hljs-number">100</span>] = { <span class="hljs-number">0</span> };
    <span class="hljs-type">int</span> receive_len = <span class="hljs-number">0</span>;
    <span class="hljs-type">int</span> send_len = <span class="hljs-number">0</span>;

    MD5 tmp_name;
    string tmp_s = tmp_name.<span class="hljs-built_in">encode</span>(client_name_tmp);
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; tmp_s.<span class="hljs-built_in">length</span>(); i++) {
        client_name[i] = tmp_s[i];
    }

    send_len = <span class="hljs-built_in">send</span>(client, client_name, <span class="hljs-built_in">sizeof</span>(client_name), <span class="hljs-number">0</span>);
    receive_len = <span class="hljs-built_in">recv</span>(client, server_name, <span class="hljs-built_in">sizeof</span>(server_name), <span class="hljs-number">0</span>);

    <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY|FOREGROUND_RED);
    cout &lt;&lt; endl;
    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">IdConfirm</span>(server_name, <span class="hljs-string">"lkp1"</span>)) {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm success, Let's chatting..."</span> &lt;&lt; endl &lt;&lt; endl;
    } <span class="hljs-keyword">else</span> {
        cout &lt;&lt; <span class="hljs-string">"ID Confirm failed, Conversation aborted..."</span>;
        <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);
        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    }

    <span class="hljs-built_in">keyInit</span>();

    <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);
    cout &lt;&lt; <span class="hljs-string">"Please enter the message(just number) you want to send, or enter \"12582\" to abort this conversation, or enter \"12581\" to abort this chat"</span> &lt;&lt; endl;

    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
            <span class="hljs-built_in">memset</span>(buffer, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer));
            <span class="hljs-built_in">memset</span>(buffer_send, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer_send));
            <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_GREEN);<span class="hljs-comment">//设置绿色</span>
            string tmp_time = <span class="hljs-built_in">getTime</span>();
            cout &lt;&lt; tmp_time &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; client_name_tmp &lt;&lt; <span class="hljs-string">":"</span>;
            cin.<span class="hljs-built_in">getline</span>(buffer, <span class="hljs-built_in">sizeof</span>(buffer));
            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer, <span class="hljs-string">"12581"</span>) == <span class="hljs-number">0</span>) {
                send_len = <span class="hljs-built_in">send</span>(client, buffer, <span class="hljs-built_in">sizeof</span>(buffer), <span class="hljs-number">0</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 3 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 2 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 1 seconds..."</span>;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);<span class="hljs-comment">//恢复原来的颜色</span>
                <span class="hljs-built_in">closesocket</span>(client);
                <span class="hljs-built_in">WSACleanup</span>();
                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer, <span class="hljs-string">"12582"</span>) == <span class="hljs-number">0</span>) {
                send_len = <span class="hljs-built_in">send</span>(client, buffer, <span class="hljs-built_in">sizeof</span>(buffer), <span class="hljs-number">0</span>);
                <span class="hljs-keyword">break</span>;
            }
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">"Message:"</span> &lt;&lt; buffer &lt;&lt; endl;
            <span class="hljs-type">char</span> * tmp = <span class="hljs-built_in">encrypt</span>(buffer, key-&gt;k.<span class="hljs-built_in">data</span>(), key-&gt;e);
            cout &lt;&lt; <span class="hljs-string">"Ciphertext:"</span> &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl;
            <span class="hljs-type">char</span> tmp1[<span class="hljs-number">10240</span>];
            <span class="hljs-built_in">strncpy</span>(tmp1, tmp, <span class="hljs-built_in">strlen</span>(tmp) + <span class="hljs-number">1</span>);
            send_len = <span class="hljs-built_in">send</span>(client, tmp1, <span class="hljs-built_in">sizeof</span>(tmp1), <span class="hljs-number">0</span>);
        }
        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
            <span class="hljs-built_in">memset</span>(buffer_receive, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(buffer_receive));
            receive_len = <span class="hljs-built_in">recv</span>(client, buffer_receive, <span class="hljs-built_in">sizeof</span>(buffer_receive), <span class="hljs-number">0</span>);
            string tmp = <span class="hljs-built_in">decrypt</span>(buffer_receive, key-&gt;n.<span class="hljs-built_in">data</span>(), key-&gt;d.<span class="hljs-built_in">data</span>());
            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer_receive, <span class="hljs-string">"12581"</span>) == <span class="hljs-number">0</span>) {
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 3 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 2 seconds..."</span> &lt;&lt; endl;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                cout &lt;&lt; <span class="hljs-string">"The program will exit in 1 seconds..."</span>;
                <span class="hljs-built_in">Sleep</span>(<span class="hljs-number">1000</span>);
                <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY|FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);<span class="hljs-comment">//恢复原来的颜色</span>
                <span class="hljs-built_in">closesocket</span>(client);
                <span class="hljs-built_in">WSACleanup</span>();
                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
            }
            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(buffer_receive, <span class="hljs-string">"12582"</span>) == <span class="hljs-number">0</span>)
                <span class="hljs-keyword">break</span>;
            <span class="hljs-built_in">SetConsoleTextAttribute</span>(<span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_BLUE);<span class="hljs-comment">//设置蓝色</span>
            <span class="hljs-keyword">if</span> (tmp.<span class="hljs-built_in">find</span>(<span class="hljs-string">"0"</span>) != string::npos) {
                <span class="hljs-keyword">continue</span>;
            }
            cout &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">"Message:"</span> &lt;&lt; tmp &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"Ciphertext:"</span> &lt;&lt; buffer_receive &lt;&lt; endl;
            cout &lt;&lt; <span class="hljs-string">"----------------------Detail--------------------"</span> &lt;&lt; endl;
        }
    }
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
}
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>可视化第一次作业</title>
    <url>/blog/2021/042021410.html</url>
    <content><![CDATA[<h2 id="作业内容"><a class="markdownIt-Anchor" href="#作业内容"></a> 作业内容</h2>
<p>1．编程实现消息测试程序，满足以下要求：</p>
<ul>
<li>按下键盘任意字符键（至少识别两个功能键），客户区中显示按键信息（字符或功能键内容）；</li>
<li>单击鼠标左键，消息对话框中显示鼠标信息（鼠标左键+坐标）；</li>
<li>假设鼠标右键失灵，用Ctrl+鼠标左键代替，消息对话框中显示鼠标信息（鼠标右键+坐标）；</li>
<li>自定义WM_MY_MESSAGE消息，带10和100两个参数，由“#”（不是“3”）键激活，客户区中显示相应信息（自定义消息+参数）。</li>
</ul>
<p>2．编程实现SmallBall程序，满足以下要求：</p>
<ul>
<li>
<p>黑色小球，从左上角开始，沿着45度方向移动，遇到边界反弹；</p>
</li>
<li>
<p>通过两个菜单项（加速与减速），调节小球的移动幅度（递增或递减）；</p>
</li>
<li>
<p>通过两个工具栏按钮，控制小球停止与再次启动。</p>
</li>
</ul>
<h2 id="展示"><a class="markdownIt-Anchor" href="#展示"></a> 展示</h2>
<h3 id="key"><a class="markdownIt-Anchor" href="#key"></a> Key</h3>
<ul>
<li>常规按键<img src="https://i.loli.net/2021/04/10/LtxDPg4NpKm3bJX.png" alt="image-20210410023017458"></li>
<li>功能键<img src="https://i.loli.net/2021/04/10/HPatbpGTQgdBCJN.png" alt="image-20210410023048135"></li>
<li>单击鼠标左键<img src="https://i.loli.net/2021/04/10/JfwLslFUXH6tzTB.png" alt="image-20210410023059952"></li>
<li>Ctrl+鼠标左键替代鼠标右键<img src="https://i.loli.net/2021/04/10/PYLnBzyw5SKOXeI.png" alt="image-20210410023133667"></li>
<li>自定义Message<img src="https://i.loli.net/2021/04/10/cCtlwdvs8QXrESo.png" alt="image-20210410023153774"></li>
</ul>
<h3 id="ball"><a class="markdownIt-Anchor" href="#ball"></a> Ball</h3>
<p><img src="https://i.loli.net/2021/04/10/WS6rURfknB49DNc.png" alt="image-20210410030903621"></p>
<ul>
<li>加速<img src="https://i.loli.net/2021/04/10/PHjtbaTiSw37Xl6.png" alt="image-20210410030933797"></li>
<li>减速<img src="https://i.loli.net/2021/04/10/YzKMdRfaXbGpCDI.png" alt="image-20210410030948776"><img src="https://i.loli.net/2021/04/10/Uq483YVEaDMZKc2.png" alt="image-20210410031001983"></li>
<li>暂停<img src="https://i.loli.net/2021/04/10/7n9xGEIcN6SXsrw.png" alt="image-20210410031024027"></li>
<li>启动<img src="https://i.loli.net/2021/04/10/VkzQeE72lSgiXbr.png" alt="image-20210410031045983"></li>
<li>有轨迹<img src="https://i.loli.net/2021/04/10/eG64R9viCbpTWoL.png" alt="image-20210410031059904"></li>
<li>状态栏<img src="https://i.loli.net/2021/04/10/CBJrvedRExpFKhy.png" alt="image-20210410031125221"></li>
</ul>
<h2 id="实现过程"><a class="markdownIt-Anchor" href="#实现过程"></a> 实现过程</h2>
<h3 id="key-2"><a class="markdownIt-Anchor" href="#key-2"></a> Key</h3>
<h5 id="添加命令"><a class="markdownIt-Anchor" href="#添加命令"></a> 添加命令</h5>
<p>在MESSAGE_MAP处添加本项目所需所有打印命令，包括自定义命令。</p>
<pre class="highlight"><code class="">BEGIN_MESSAGE_MAP(CKeyView, CView)
	//标准打印命令
	ON_COMMAND(ID_FILE_PRINT, &amp;CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_DIRECT, &amp;CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_PREVIEW, &amp;CView::OnFilePrintPreview)
	ON_WM_LBUTTONUP()
	ON_WM_CHAR()
	ON_WM_KEYDOWN()
	ON_MESSAGE(WM_MYMESSAGE, OnMyMessage)
END_MESSAGE_MAP()
</code></pre>
<h5 id="头文件函数声明"><a class="markdownIt-Anchor" href="#头文件函数声明"></a> 头文件函数声明</h5>
<p>在KeyView.h头文件里面声明OnLButtonUp，OnChar，PreTranslateMessages，以及OnMyMessage函数</p>
<pre class="highlight"><code class="">protected:
	afx_msg void OnLButtonUp(UINT nFlags, CPoint point);      //添加鼠标左键点击函数，以及按键事件函数
	afx_msg void OnChar(UINT nChar, UINT nRedCnt, UINT nFlags);
	virtual BOOL PreTranslateMessage(MSG* pMsg);
	afx_msg LRESULT OnMyMessage(WPARAM wParam, LPARAM lParam);
</code></pre>
<h5 id="void-ckeyviewonlbuttonupuint-nflags-cpoint-point"><a class="markdownIt-Anchor" href="#void-ckeyviewonlbuttonupuint-nflags-cpoint-point"></a> void CKeyView::OnLButtonUp(UINT nFlags, CPoint point)</h5>
<p>本函数主要实现鼠标左键点击以及替代右键功能，利用if语句如果是Ctrl+鼠标左键的话，则输出右键点击，并利用point来获取当前坐标，使用TextOutW来输出，如果if条件不成立，则输出左键点击</p>
<pre class="highlight"><code class="">void CKeyView::OnLButtonUp(UINT nFlags, CPoint point)
{
	CDC* pDC = GetDC();
	CString m_str;
	if (nFlags &amp; MK_CONTROL)//ctrl+左键代表右键
		m_str.Format(L"X:%d,Y:%d:Right Mouse Button Clicked!", point.x, point.y);
	else
		m_str.Format(L"X:%d,Y:%d:Left Mouse Button Clicked!", point.x, point.y);
	pDC-&gt;TextOutW(point.x, point.y, m_str);
}
</code></pre>
<h5 id="void-ckeyviewoncharuint-nchar-uint-nredcnt-uint-nflags"><a class="markdownIt-Anchor" href="#void-ckeyviewoncharuint-nchar-uint-nredcnt-uint-nflags"></a> void CKeyView::OnChar(UINT nChar, UINT nRedCnt, UINT nFlags)</h5>
<p>本函数主要实现常规按键和自定义消息#键（在自定义消息里面讲）的输出，首先获取当前按键的字符，如果不是#，则弹出弹框声明</p>
<pre class="highlight"><code class="">void CKeyView::OnChar(UINT nChar, UINT nRedCnt, UINT nFlags)
{
	if (nChar == '#') //按键如果是#则调用自定义消息，其他则调用系统消息
		SendMessage(WM_MYMESSAGE, 10, 100);
	else
	{
		CString str;
		str.Format(L"%c Key Entered!", nChar);
		MessageBox(str);
	}
	CView::OnChar(nChar, nRedCnt, nFlags);
}
</code></pre>
<h5 id="bool-ckeyviewpretranslatemessagemsg-pmsg"><a class="markdownIt-Anchor" href="#bool-ckeyviewpretranslatemessagemsg-pmsg"></a> BOOL CKeyView::PreTranslateMessage(MSG* pMsg)</h5>
<p>本函数实现功能按键，主要思路就是通过pMsg的wParam来对应不同功能键，从而进行输出，考虑到shift和ctrl的常用性，并没有对其进行添加，其他功能键也类似</p>
<pre class="highlight"><code class="">BOOL CKeyView::PreTranslateMessage(MSG* pMsg)
{
	if (pMsg-&gt;message == WM_KEYDOWN)//添加功能键，方法类似可添加更多，常用ctrl和shift注释掉了以免影响其他键的操作
	{
		if (pMsg-&gt;wParam == VK_F1)  MessageBox(L"F1 Key Entered!");
		if (pMsg-&gt;wParam == VK_F2)  MessageBox(L"F2 Key Entered!");
		if (pMsg-&gt;wParam == VK_F3)  MessageBox(L"F3 Key Entered!");
		if (pMsg-&gt;wParam == VK_F4)  MessageBox(L"F4 Key Entered!");
		if (pMsg-&gt;wParam == VK_F5)  MessageBox(L"F5 Key Entered!");
		if (pMsg-&gt;wParam == VK_F6)  MessageBox(L"F6 Key Entered!");
		if (pMsg-&gt;wParam == VK_F7)  MessageBox(L"F7 Key Entered!");
		if (pMsg-&gt;wParam == VK_F8)  MessageBox(L"F8 Key Entered!");
		if (pMsg-&gt;wParam == VK_F9)  MessageBox(L"F9 Key Entered!");
		if (pMsg-&gt;wParam == VK_F10)  MessageBox(L"F10 Key Entered!");
		if (pMsg-&gt;wParam == VK_F11)  MessageBox(L"F11 Key Entered!");
		if (pMsg-&gt;wParam == VK_F12)  MessageBox(L"F12 Key Entered!");
		if (pMsg-&gt;wParam == VK_UP)  MessageBox(L"↑ Key Entered!");
		if (pMsg-&gt;wParam == VK_DOWN)  MessageBox(L"↓ Key Entered!");
		if (pMsg-&gt;wParam == VK_LEFT)  MessageBox(L"← Key Entered!");
		if (pMsg-&gt;wParam == VK_RIGHT)  MessageBox(L"→ Key Entered!");
		//if (pMsg-&gt;wParam == VK_CONTROL)  MessageBox(L"Ctrl Key Entered!");
		if (pMsg-&gt;wParam == VK_CAPITAL)  MessageBox(L"CapsLk Key Entered!");
		//if (pMsg-&gt;wParam == VK_SHIFT)  MessageBox(L"Shift Key Entered!");
	}

	return CView::PreTranslateMessage(pMsg);
}
</code></pre>
<h5 id="自定义消息"><a class="markdownIt-Anchor" href="#自定义消息"></a> 自定义消息</h5>
<ul>
<li>首先声明自己的消息名字和编号<pre class="highlight"><code class="">#define WM_MYMESSAGE WM_USER+10
</code></pre>
</li>
<li>声明一个关于自定义消息的响应函数OnMyMessage</li>
<li>在Onchar里面实现，如果按下#键，则SendMessage，含有两个参数10和100<pre class="highlight"><code class="">if (nChar == '#') //按键如果是#则调用自定义消息，其他则调用系统消息
  	SendMessage(WM_MYMESSAGE, 10, 100);
</code></pre>
</li>
</ul>
<h5 id="定义主面板名称"><a class="markdownIt-Anchor" href="#定义主面板名称"></a> 定义主面板名称</h5>
<pre class="highlight"><code class="">cs.style &amp;= ~FWS_ADDTOTITLE;                    //修改主窗口标题
m_strTitle = _T("Key");
</code></pre>
<h3 id="ball-2"><a class="markdownIt-Anchor" href="#ball-2"></a> Ball</h3>
<p>小球采用异或方法来实现小球的消除，也可以实现小球的轨迹消除，通过Timer来实现小球的不断移动和刷新，从而造成一种小球运动的现象，</p>
<h5 id="声明ball类变量"><a class="markdownIt-Anchor" href="#声明ball类变量"></a> 声明Ball类变量</h5>
<pre class="highlight"><code class="">public:
	afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);//声明timer
	afx_msg void OnDestroy();
	afx_msg void OnTimer(UINT_PTR nIDEvent);
private:          
	int x;        //x，y表示当前坐标，step_num表示步幅倍数，step_x,step_y表示每次移动距离的单位
	int y;
	int step_num;
	int step_x;
	int step_y;
	int size;   //小球大小
	bool begin_pause;   //小球状态
	bool trail;     //小球轨迹状态
public:
	afx_msg void OnSpeedUp();   //声明加速函数
	afx_msg void OnSpeedDown();  //声明减速函数
	afx_msg void OnTrail();     //声明轨迹函数
	afx_msg void OnBegin_Pause();  //声明状态函数
</code></pre>
<h5 id="实现小球运动"><a class="markdownIt-Anchor" href="#实现小球运动"></a> 实现小球运动</h5>
<p>不断函数调用来实现小球的运动，采用step_num来控制小球的速度，当按下加速键是step_num加1，加速，减速同理，当速度为1是，如果继续减速，将强制停止此操作，并弹出消息提示，暂停功能的实现是通过阶数当前计时器，开始则重新开启一个同样编号的计时器，轨迹的消除通过控制变量trail来实现，如果不需要轨迹，则执行异或操作将轨迹消除，并进行清屏，反之则不执行</p>
<pre class="highlight"><code class="">int CBallView::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
	if (CView::OnCreate(lpCreateStruct) == -1)
		return -1;

	// TODO:  在此添加您专用的创建代码
	SetTimer(1, 100, NULL);//计时器编号，刷新时间（ms)可以通过刷新时间来实现加速和减速
	return 0;
}

void CBallView::OnDestroy()
{
	CView::OnDestroy();

	KillTimer(1);
}

void CBallView::OnTimer(UINT_PTR nIDEvent)
{
	if (nIDEvent == 1)
	{
		CRect rect;
		GetClientRect(&amp;rect);
		CDC* pDC = GetDC();
		pDC-&gt;SetROP2(R2_XORPEN);
		pDC-&gt;Ellipse(x, y, x + size, y + size);
		x += step_x*step_num;  //通过改变步幅倍率来改变速度
		y += step_y*step_num;
		theApp.x_ = x;
		theApp.y_ = y;
		if (x&lt;0 || x&gt;rect.right - size)  //转向操作
		{
			step_x = 0 - step_x;
		}
		if (y&lt;0 || y&gt;rect.bottom - size)
		{
			step_y = 0 - step_y;
		}
		if (!trail) //是否保留轨迹，不保留则通过异或消除
			pDC-&gt;Ellipse(x,y,x+size,y+size);
	}
	CView::OnTimer(nIDEvent);
}
</code></pre>
<h5 id="菜单栏的实现"><a class="markdownIt-Anchor" href="#菜单栏的实现"></a> 菜单栏的实现</h5>
<p>在资源视图中找到主视图进行添加相应部分，并添加事件来响应<img src="https://i.loli.net/2021/04/10/CGXbiHruFw5kjBp.png" alt="image-20210410031318645"></p>
<pre class="highlight"><code class="">void CBallView::OnSpeedUp() //加速函数，并弹出弹框提示速度信息
{
	// TODO: 在此添加命令处理程序代码
	step_num++;
	theApp.speed_ = step_num;
	CString str;
	str.Format(L"Current speed:%d", step_num);
	MessageBox(str);
}


void CBallView::OnSpeedDown()  //减速函数，并弹出弹框提示速度信息，如果速度为1，仍要减速，则不允许减速，弹出提示消息
{
	// TODO: 在此添加命令处理程序代码
	if (step_num &gt; 1)
	{
		step_num--;
		theApp.speed_ = step_num;
		CString str;
		str.Format(L"Current speed:%d", step_num);
		MessageBox(str);
	}
	else//速度为1
	{
		CString str;
		str.Format(L"                          Current speed:%d\n\dThe current speed is already the minimum.\n           No more deceleration is allowed.", step_num);
		MessageBox(str);
	}
}


void CBallView::OnTrail()//是否保留轨迹，不保留则通过用白色刷新全屏来实现清屏
{
	// TODO: 在此添加命令处理程序代码
	if (trail)
	{
		trail = false;
		CDC* pDC = GetDC();
		CRect rc;
		GetClientRect(&amp;rc);

		pDC-&gt;FillSolidRect(&amp;rc, RGB(255, 255, 255));
		pDC-&gt;SetROP2(R2_XORPEN);
		pDC-&gt;Ellipse(x, y, x + size, y + size);
		ReleaseDC(pDC);
	}
	else
		trail = true; 
}


//void CBallView::OnBegin_Pause()//暂停实现方法一，步幅倍率为0，则一直在原地刷新，小球会一直闪动
//{
//	// TODO: 在此添加命令处理程序代码
//	if (begin_pause == 0)
//	{
//		begin_pause = step_num;
//		step_num = 0;
//	}
//	else
//	{
//		step_num = begin_pause;
//		begin_pause = 0;
//	}
//}
void CBallView::OnBegin_Pause()//暂停实现方法二，通过kill掉Timer来实现暂停，开始则重新申请一个Timer
{
	// TODO: 在此添加命令处理程序代码
	if (!begin_pause)
	{
		begin_pause = true;
		KillTimer(1);
	}
	else
	{
		SetTimer(1, 100, NULL);
		begin_pause = false;
	}
}
</code></pre>
<h5 id="状态栏的实现"><a class="markdownIt-Anchor" href="#状态栏的实现"></a> 状态栏的实现</h5>
<p>新建三个状态 速度，位置和时间，并将其添加到indicators数组里面，使用SetPaneInfo函数来设置三个状态的信息以及宽度，然后继续利用Timer来不断刷新，速度和位置采用全局变量来获得，时间则通过CTime::GetCurrentTime()函数实现。<img src="https://i.loli.net/2021/04/10/5Q8AhTBCuRIslO7.png" alt="image-20210410031352719"></p>
<pre class="highlight"><code class="">m_wndStatusBar.SetIndicators(indicators, sizeof(indicators)/sizeof(UINT));
	
m_wndStatusBar.SetPaneInfo(4, IDS_INDICATOR_SPEED, SBPS_POPOUT, 50);//设置三个信息的位置和宽度
m_wndStatusBar.SetPaneInfo(5, IDS_INDICATOR_MESSAGE, SBPS_POPOUT, 110);
m_wndStatusBar.SetPaneInfo(6, IDS_INDICATOR_TIME, SBPS_POPOUT, 50);
RepositionBars(AFX_IDW_CONTROLBAR_FIRST, AFX_IDW_CONTROLBAR_LAST, IDS_INDICATOR_TIME);

//添加时间显示函数
SetTimer(2, 100, NULL);
CTime t1;

CString str_1;                                      //对三栏信息进行初始化
str_1.Format(L"Speed:%d", theApp.speed_);
m_wndStatusBar.SetPaneText(4, str_1);

CString str_2;
str_2.Format(L"Location(%d,%d)", theApp.x_, theApp.y_);
m_wndStatusBar.SetPaneText(5, str_2);

t1 = CTime::GetCurrentTime();
m_wndStatusBar.SetPaneText(6, t1.Format("%H:%M:%S"));
</code></pre>
<pre class="highlight"><code class="">void CMainFrame::OnTimer(UINT_PTR nIDEvent)//通过timer来实现刷新
{
	CTime t1;

	CString str_1;
	str_1.Format(L"Speed:%d", theApp.speed_);
	m_wndStatusBar.SetPaneText(4, str_1);

	CString str_2;
	str_2.Format(L"Location(%d,%d)", theApp.x_, theApp.y_);
	m_wndStatusBar.SetPaneText(5, str_2);

	t1 = CTime::GetCurrentTime();//获取当前时间来刷新状态栏
	m_wndStatusBar.SetPaneText(6, t1.Format("%H:%M:%S"));


	CFrameWnd::OnTimer(nIDEvent);
}
</code></pre>
<h5 id="定义主面板名称-2"><a class="markdownIt-Anchor" href="#定义主面板名称-2"></a> 定义主面板名称</h5>
<pre class="highlight"><code class="">cs.style &amp;= ~FWS_ADDTOTITLE;                    //修改主窗口标题
m_strTitle = _T("Ball");
</code></pre>
<h2 id="实验收获"><a class="markdownIt-Anchor" href="#实验收获"></a> 实验收获</h2>
<p>通过本次实验掌握了MFC的基本操作，理解了其实现功能的机制（消息的发送和执行），了解了一些基本函数的使用的，在对其界面优化过程中，通过实践对其理解加深，主要存在困难就是对函数的使用，以及初步接触MFc对其实现机制不太了解，实验过后相信会有所提升。</p>
]]></content>
      <categories>
        <category>Homework</category>
      </categories>
      <tags>
        <tag>Homework</tag>
        <tag>MFC</tag>
      </tags>
  </entry>
  <entry>
    <title>如何利用网易云盘同步歌曲歌词</title>
    <url>/blog/2022/0762e9162.html</url>
    <content><![CDATA[<blockquote>
<p>起源：版权限制一个音乐软件很难拥有所有我们想要的歌曲来源，周杰伦的就只有咪咕有版权，如此一来，就要在各个软件之间切换，很不方便<br>
而利用网盘可以很好解决这一问题，以网易云举例</p>
</blockquote>
<h2 id="音频文件下载"><a class="markdownIt-Anchor" href="#音频文件下载"></a> 音频文件下载</h2>
<p>这个不难，直接面向<a href="www.baidu.com">百度</a>,搜索下载即可</p>
<h2 id="歌词文件"><a class="markdownIt-Anchor" href="#歌词文件"></a> 歌词文件</h2>
<p>解决了音频文件问题之后，很容易遇到的就是网盘收藏歌曲只有音频文件，没有歌词，而由于是本地文件，我们也无法从网络获取歌词，就像下面这样</p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725164205.png" alt="20220725164205"></p>
<p>在网易云云盘中上传歌曲时会自动识别是否有歌词文件，比如这样，我们将歌词文件（lrc文件）和歌曲文件放在同一个文件夹下，注意：<strong>这两个文件除了后缀，文件名要完全相同</strong>，然后转网易云网盘上传文件即可，如下图所示：<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725164620.png" alt="20220725164620"><br>
然后，我们就可以拥有带歌词的网盘文件了，像这样：<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725164738.png" alt="20220725164738"></p>
<h2 id="制作lrc歌词文件"><a class="markdownIt-Anchor" href="#制作lrc歌词文件"></a> 制作lrc歌词文件</h2>
<h3 id="面向百度"><a class="markdownIt-Anchor" href="#面向百度"></a> 面向百度</h3>
<p>一般的歌词文件都是lrc格式的，我们用记事本打开文件<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725164849.png" alt="20220725164849"><br>
可以看到基本的歌曲信息，至于歌词就是下面的格式</p>
<pre class="highlight"><code class="md">[时间]歌词
</code></pre>
<p>这些歌词信息直接面向<a href="www.baidu.com">百度</a>很轻易就可以获取</p>
<p>获取之后直接新建一个lrc文件，将歌词内容复制进去保存之后，上传到网易云即可</p>
<h3 id="lrc-maker"><a class="markdownIt-Anchor" href="#lrc-maker"></a> LRC Maker</h3>
<p>当然网络歌词文件并不一定和我们的音频文件匹配，同源的当然更好，不是同源的也没关系，推荐一个在线歌词编辑器<a href="https://lrc-maker.github.io/">LRC Maker</a></p>
<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725165518.png" alt="20220725165518"></p>
<p>介绍很详细，我们首先添加音频文件<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725165646.png" alt="20220725165646"></p>
<p>在上方的编辑界面可以直接编辑歌词，编辑完成之后，点击右上方第二个<code>打轴</code>选项，可以试听，并且对歌词进行微调<br>
<img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20220725165841.png" alt="20220725165841"></p>
<p>点击下方播放之后歌词会随着我们编辑的时间和音频文件进行滚动，并且上方也有时间定位，如果歌词时间有点误差（过快或过慢）都可以暂停进行微调</p>
<p>微调之后再次进入编辑界面导出lrc文件即可，注意音频文件一定要和歌词文件同名</p>
<p>这样我们就可以不用频繁的去切换软件了，甚是方便。</p>
]]></content>
  </entry>
  <entry>
    <title>数字签名算法DSA</title>
    <url>/blog/2022/059d9eab6e.html</url>
    <content><![CDATA[<blockquote>
<p>本文为作者个人作业，仅供参考</p>
</blockquote>
<!-- toc -->
<h3 id="实验要求"><a class="markdownIt-Anchor" href="#实验要求"></a> 实验要求</h3>
<p>通过对数字签字算法DSA的实际操作，理解DSS的基本工作原理。</p>
<h4 id="实验内容"><a class="markdownIt-Anchor" href="#实验内容"></a> 实验内容</h4>
<ol>
<li>参照教材，熟悉数字签名算法DSA；</li>
<li>参照教材，熟悉杂凑函数算法SHA；</li>
<li>这里给出一个可运行的DSA数字签字演示程序，运行这个程序，对一段文字进行签字和验证，了解DSA算法的签字和验证过程。</li>
</ol>
<h4 id="杂凑函数sha-1"><a class="markdownIt-Anchor" href="#杂凑函数sha-1"></a> 杂凑函数SHA-1</h4>
<p>安全哈希算法(SHA)是基于MD4算法，其结构与MD4非常类似，用于数字签名的标准算法DSS中。</p>
<h5 id="算法实现步骤"><a class="markdownIt-Anchor" href="#算法实现步骤"></a> 算法实现步骤</h5>
<ol>
<li>
<p>将消息摘要转换成位字符串<br>
因为在SHA-算法中，它的输入必须为位，所以首先要将其转化为位字符串，以“abc”字符串来说明问题，因为’a’=97, ‘b’=98, ‘c’=99，所以将其转换为位串后为：</p>
<blockquote>
<p>01100001 01100010 01100011</p>
</blockquote>
</li>
<li>
<p>对转换后的位字符串进行补位操作<br>
SHA-算法标准规定，必须对消息摘要进行补位操作，即将输入的数据进行填充，使得数据长度对512求余的结果为448，填充比特位的最高位补一个1，其余的位补0，如果在补位之前已经满足对512取模余数为448，也要进行补位，在其后补一位1即可。总之，补位是至少补一位，最多补512位，依然以“abc”为例，其补位过程如下：</p>
<ul>
<li>初始的信息摘要：01100001 01100010 01100011</li>
<li>第一步补位：01100001 01100010 01100011 1…  …</li>
<li>补位最后一位：01100001 01100010 01100011 10…0(后面补了423个0)</li>
</ul>
<p>而后将补位操作后的信息摘要转换为十六进制，如下所示：<br>
61626380 00000000 00000000 00000000<br>
00000000 00000000 00000000 00000000<br>
00000000 00000000 00000000 00000000<br>
00000000 00000000</p>
</li>
<li>
<p>附加长度值<br>
在信息摘要后面附加64bit的信息，用来表示原始信息摘要的长度，在这步操作之后，信息报文便是512bit的倍数。通常来说用一个64位的数据表示原始消息的长度，如果消息长度不大于2^64，那么前32bit就为0，在进行附加长度值操作后，其“abc”数据报文即变成如下形式：<br>
61626380 00000000 00000000 00000000<br>
00000000 00000000 00000000 00000000<br>
00000000 00000000 00000000 00000000<br>
00000000 00000000 00000000 00000018<br>
因为“abc”占3个字节，即24位 ，换算为十六进制即为0x18。</p>
</li>
<li>
<p>初始化缓存<br>
一个160位MD缓冲区用以保存中间和最终散列函数的结果。它可以表示为5个32位的寄存器(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)。初始化为：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x67452301<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0xEFCDAB89<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x98BADCFE<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x10325476<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0xC3D2E1F0<br>
前四个与上周的MD-5一样，但不同之处为存储为大端序</p>
</li>
<li>
<p>计算消息摘要<br>
在计算报文之前还要做一些基本的工作，就是在计算过程中要用到的方法。</p>
<ol>
<li>循环左移操作符Sn(x),x是一个字，也就是32bit大小的变量，n是一个整数且0&lt;=n&lt;=32。Sn(X) = (X&lt;&lt;n)OR(X&gt;&gt;32-n)</li>
<li>在程序中所要用到的常量，这一系列常量字k(0)、k(1)、…k(79)，将其以十六进制表示如下：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x5A827999  (0 &lt;= t &lt;= 19)<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x6ED9EBA1 (20 &lt;= t &lt;= 39)<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0x8F1BBCDC (40 &lt;= t &lt;= 59)<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0xCA62C1D6 (60 &lt;= t &lt;= 79)</li>
<li>所要用到的一系列函数<br>
Ft(b,c,d)  ((b&amp;c)|((~b)&amp;d))    (0 &lt;= t &lt;= 19)<br>
Ft(b,c,d) (b<sup>c</sup>d)             (20 &lt;= t &lt;= 39)<br>
Ft(b,c,d) ((b&amp;c)|(b&amp;d)|(c&amp;d))  (40 &lt;= t &lt;= 59)<br>
Ft(b,c,d) (b<sup>c</sup>d)               (60 &lt;= t &lt;= 79)</li>
<li>计算<br>
计算需要一个缓冲区，由5个32位的字组成，还需要一个80个32位字的缓冲区。第一个5个字的缓冲区被标识为A，B，C，D，E。80个字的缓冲区被标识为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>W</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>W</mi><mn>79</mn></msub></mrow><annotation encoding="application/x-tex">W_0, W_1,..., W_{79}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>
另外还需要一个一个字的TEMP缓冲区。<br>
为了产生消息摘要，在第4部分中定义的16个字的数据块<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>M</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">M_1, M_2,..., M_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>会依次进行处理，处理每个数据块<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 包含80个步骤。</li>
</ol>
<p>现在开始处理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>M</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">M_1, M_2, ... , M_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。为了处理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,需要进行下面的步骤</p>
<ul>
<li>将 Mi 分成 16 个字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>W</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>W</mi><mn>15</mn></msub><mo separator="true">,</mo><msub><mi>W</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">W_0, W_1, ... , W_{15},  W_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是最左边的字</li>
<li>对于 t = 16 到 79 令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>t</mi></msub><mo>=</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>t</mi><mo>−</mo><mn>3</mn></mrow></msub><mi>X</mi><mi>O</mi><mi>R</mi><msub><mi>W</mi><mrow><mi>t</mi><mo>−</mo><mn>8</mn></mrow></msub><mi>X</mi><mi>O</mi><mi>R</mi><msub><mi>W</mi><mrow><mi>t</mi><mo>−</mo><mn>14</mn></mrow></msub><mi>X</mi><mi>O</mi><mi>R</mi><msub><mi>W</mi><mrow><mi>t</mi><mo>−</mo><mn>16</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W_t = S_1(W_{t-3} XOR W_{t-8} XOR W_{t- 14} XOR W_{t-16})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>令 A = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, B = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, C = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, D = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, E = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li>对于 t = 0 到 79，执行下面的循环<br>
TEMP = S5(A) + ft(B,C,D) + E + Wt + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>;<br>
E = D; D = C; C = S30(B); B = A; A = TEMP;</li>
</ul>
<ol start="5">
<li>令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> + A, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> + B, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> + C, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> + D, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> + E.<br>
在处理完所有的 Mn, 后，消息摘要是一个160位的字符串，以下面的顺序标识<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">H_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">H_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
</ol>
</li>
</ol>
<h5 id="sha-1在dss中的应用"><a class="markdownIt-Anchor" href="#sha-1在dss中的应用"></a> SHA-1在DSS中的应用</h5>
<p>在DSS（数字签名标准）中，使用数字签名算法DSA和哈希函数SHA-1结合完成数字签名。</p>
<h4 id="数字签名算法dsa"><a class="markdownIt-Anchor" href="#数字签名算法dsa"></a> 数字签名算法DSA</h4>
<p>DSA是在ElGamal和Schnorr两个签名方案的基础上设计的，其安全性基于求离散对数的困难性。</p>
<h5 id="算法描述"><a class="markdownIt-Anchor" href="#算法描述"></a> 算法描述</h5>
<ol>
<li>
<p>全局变量</p>
<ul>
<li>p：满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>&lt;</mo><mi>p</mi><mo>&lt;</mo><msup><mn>2</mn><mi>L</mi></msup></mrow><annotation encoding="application/x-tex">2^{L-1}&lt;p&lt;2^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.880431em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span></span></span></span>的大素数，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>512</mn><mo>≤</mo><mi>L</mi><mo>≤</mo><mn>1024</mn></mrow><annotation encoding="application/x-tex">512\leq L\leq 1024</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>是64的倍数。</li>
<li>q：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的素因子，满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>159</mn></msup><mo>&lt;</mo><mi>p</mi><mo>&lt;</mo><mn>2160</mn></mrow><annotation encoding="application/x-tex">2^{159}&lt;p&lt;2{160}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.853208em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span><span class="mord mtight">9</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span></span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>长为160比特。</li>
<li>g：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo>≡</mo><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>q</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">g\equiv h^{(p-1)/q}modp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65819em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span>是满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mi>h</mi><mo>&lt;</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1&lt;h&lt;p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>且使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>q</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h^{(p-1)/q}modp&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的任一整数。</li>
</ul>
</li>
<li>
<p>密钥x</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>是满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">0&lt;x&lt;q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>的随机数或伪随机数。</li>
</ul>
</li>
<li>
<p>公钥y</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>≡</mo><msup><mi>g</mi><mi>x</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">y\equiv g^xmodp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65819em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span></li>
</ul>
</li>
<li>
<p>用户的随机数选择k</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>是满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">0&lt;k&lt;q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>的随机数或伪随机数。</li>
</ul>
</li>
<li>
<p>签名过程<br>
用户对消息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>的签名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>≡</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">r\equiv (g^kmodp)modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>≡</mo><mo stretchy="false">[</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">s\equiv [k^{-1}(H(M)+xr)]modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>是由SHA求出的哈希值。</p>
</li>
<li>
<p>验证过程<br>
设接收方接收到的消息为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">M'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，签名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r',s')</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。计算</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo>≡</mo><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">\omega \equiv (s')^{-1}modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo>≡</mo><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mi>ω</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">u_1\equiv [H(M')\omega ]modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mn>2</mn></msub><mo>≡</mo><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>ω</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">u_2\equiv r'\omega modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>≡</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msup><mi>g</mi><msub><mi>u</mi><mn>1</mn></msub></msup><msup><mi>y</mi><msub><mi>u</mi><mn>2</mn></msub></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">v\equiv [(g^{u_1}y^{u_2})modp]modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>。</li>
</ul>
<p>检查<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>是否等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">r'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，若相等，则证明签名有效，这是因为<br>
若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>M</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(M',r',s')=(M,r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>，<br>
则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>≡</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mi>ω</mi></mrow></msup><msup><mi>g</mi><mrow><mi>x</mi><mi>r</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mo>≡</mo><mo stretchy="false">[</mo><msup><mi>g</mi><mrow><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mi>r</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mo>≡</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mo>≡</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">v\equiv [(g^{H(M)\omega }g^{xr\omega })modp]modq\equiv [g^{(H(M)+xr)^{-1}}modp]modq\equiv (g^kmodp)modq\equiv r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2369199999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></p>
</li>
</ol>
<p>算法的其中的4个函数分别为：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>≡</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">]</mo><mo>≡</mo><mo stretchy="false">[</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">s\equiv f_1[H(M),k,x,r,q]\equiv [k^{-1}(H(M)+xr)]modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mo>≡</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">r=f_2(k,q,p,g)\equiv (g^kmodp)modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo>=</mo><msub><mi>f</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>≡</mo><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">\omega =f_3(s',q)\equiv (s')^{-1}modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>≡</mo><msub><mi>f</mi><mn>4</mn></msub><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">(</mo><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ω</mi><mo separator="true">,</mo><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>≡</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mrow><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mi>ω</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow></msup><msup><mi>y</mi><mrow><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>ω</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">v\equiv f_4(y,q,g,H(M'),\omega ,r')\equiv [(g^{(H(M')\omega )modq}y^{r'\omega modq})modp]modq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19248em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></li>
</ul>
<h5 id="dsa实例"><a class="markdownIt-Anchor" href="#dsa实例"></a> DSA实例</h5>
<p>实验将对消息“i love you，china”进行签名。</p>
<ol>
<li>
<p>在DSATool.exe程序中，选择大素数P的位数为512，数据呈现格式为10进制，生成如下所示的大素数P、素因子Q、G以及用户秘密钥X和用户公开钥Y。<br>
<img src="https://s2.loli.net/2022/05/27/pw6t42NP7fxJc8u.png" alt="20220527172547"></p>
</li>
<li>
<p>为待签消息选取如下所示的随机秘密数K，并产生签名(r,s)。K=2553DD1A0EEEABFC7781E5444DCD517932AB269E<br>
<img src="https://s2.loli.net/2022/05/27/MAbkWnjx2v5XS7p.png" alt="20220527172705"></p>
<p>对该签名进行验证，计算能成功通过。<br>
<img src="https://s2.loli.net/2022/05/27/NKkyctCQ3T5EBLm.png" alt="20220527172737"><br>
当修改签名中的某一位时（如将第一位7改为8），则验证将无法通过。<br>
<img src="https://s2.loli.net/2022/05/27/pjOqMy64mBC5fFx.png" alt="end{center}"></p>
<p>通过上述检测可以验证DSA的有效性和雪崩效应。</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>排序</title>
    <url>/blog/2022/10a444b428.html</url>
    <content><![CDATA[<p><img src="https://picture-0111.oss-cn-beijing.aliyuncs.com/img/20221015114004.png" alt="20221015114004"></p>
<h2 id="冒泡排序bubble-sort稳定排序超出时间限制"><a class="markdownIt-Anchor" href="#冒泡排序bubble-sort稳定排序超出时间限制"></a> 冒泡排序（Bubble Sort）（稳定排序）（超出时间限制）</h2>
<p>比较相邻元素，如果第一个比第二个大，则交换。</p>
<p>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，空间复杂度1</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// bubbleSort</span>
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; ++i) {
            <span class="hljs-type">bool</span> flag = <span class="hljs-literal">false</span>;
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; n - <span class="hljs-number">1</span> - i; ++j) {
                <span class="hljs-keyword">if</span> (nums[j] &gt; nums[j + <span class="hljs-number">1</span>]) {
                    <span class="hljs-built_in">swap</span>(nums[j], nums[j + <span class="hljs-number">1</span>]);
                    flag = <span class="hljs-literal">true</span>;
                }                 
            }
            <span class="hljs-keyword">if</span> (flag == <span class="hljs-literal">false</span>) <span class="hljs-keyword">break</span>; <span class="hljs-comment">//无交换，代表当前序列已经最优 </span>
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="选择排序select-sort非稳定排序超出时间限制"><a class="markdownIt-Anchor" href="#选择排序select-sort非稳定排序超出时间限制"></a> 选择排序（Select Sort）（非稳定排序）（超出时间限制）</h2>
<p>依次给每个位置选择当前位置及以后最小的元素（交换当前元素与之后最小元素的位置）。</p>
<p>不稳定举例：<br>
排序前：5, 5*, 1, 7<br>
排序后：1, 5*, 5, 7</p>
<p>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，空间复杂度1</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// selectSort 选择排序</span>
        <span class="hljs-type">int</span> minIndex;
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; ++i) {
            minIndex = i;
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt; n; ++j) {
                <span class="hljs-keyword">if</span> (nums[j] &lt; nums[minIndex]) {
                    minIndex = j;
                }
            }
            <span class="hljs-built_in">swap</span>(nums[i], nums[minIndex]);
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="插入排序insect-sort稳定排序超出时间限制"><a class="markdownIt-Anchor" href="#插入排序insect-sort稳定排序超出时间限制"></a> 插入排序（Insect Sort）（稳定排序）（超出时间限制）</h2>
<p>在前 1~i - 1元素有序的情况下，（依次）将第 i 个元素插入前面已经有序的小序列，使其有序。使用哨兵减少比较</p>
<p>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，空间复杂度1</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-type">int</span> i, j;
        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= nums.<span class="hljs-built_in">size</span>(); i++) {
            <span class="hljs-keyword">if</span> (nums[i] &lt; nums[i - <span class="hljs-number">1</span>]) {
                nums[<span class="hljs-number">0</span>] = nums[i]; <span class="hljs-comment">//nums[0]为哨兵</span>
                <span class="hljs-keyword">for</span> (j = i - <span class="hljs-number">1</span>; nums[<span class="hljs-number">0</span>] &lt; nums[j]; j--) {
                    nums[j + <span class="hljs-number">1</span>] =nums[j];
                }
                nums[j + <span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>];
            }
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<p>插入排序在此基础上也可以将搜索和移动分开，使用二分查找先找到要插入位置，然后再移动</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-type">int</span> i, j, low, high, mid;
        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= nums.<span class="hljs-built_in">size</span>(); i++) {
            nums[<span class="hljs-number">0</span>] = nums[i];
            low = <span class="hljs-number">1</span>; high = i - <span class="hljs-number">1</span>;
            <span class="hljs-keyword">while</span> (low &lt;= high) {
                mid = (low + high) / <span class="hljs-number">2</span>;
                <span class="hljs-keyword">if</span> (nums[mid] &gt; nums[<span class="hljs-number">0</span>]) high = mid - <span class="hljs-number">1</span>;
                <span class="hljs-keyword">else</span> low = mid + <span class="hljs-number">1</span>;
            }
            <span class="hljs-keyword">for</span> (j = i - <span class="hljs-number">1</span>; j &gt; high + <span class="hljs-number">1</span>; j--)
                nums[j + <span class="hljs-number">1</span>] = nums[j];
            nums[high + <span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>];
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="希尔排序shell-sort非稳定排序"><a class="markdownIt-Anchor" href="#希尔排序shell-sort非稳定排序"></a> 希尔排序（Shell Sort）（非稳定排序）</h2>
<p>改进的插入排序（优化：原数组的一个元素距离正确位置很远的情况）<br>
先让间隔 h 的元素有序，在使得间隔为 h / 2，一直缩小，一直到 h = 1（此时数组有序）。</p>
<p>时间复杂度介于nlogn和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>之间，空间复杂度1</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">shellSort</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp;nums, <span class="hljs-type">int</span> gap, <span class="hljs-type">int</span> i)</span> </span>{
        <span class="hljs-type">int</span> j, tmp = nums[i];
        <span class="hljs-keyword">for</span> (j = i - gap; j &gt;= <span class="hljs-number">0</span> &amp;&amp; tmp &lt; nums[j]; j -= gap) {
            <span class="hljs-comment">// 依次后移</span>
            nums[j + gap] = nums[j];
        }
        nums[j + gap] = tmp;
    }
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-comment">// 分组，最开始时，间隔 gap 为数组的一半</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> gap = n / <span class="hljs-number">2</span>; gap &gt;= <span class="hljs-number">1</span> ; gap /= <span class="hljs-number">2</span>) {
            <span class="hljs-comment">// 对各个分组进行插入分组</span>
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = gap; i &lt; n; ++i) {
                <span class="hljs-built_in">shellSort</span>(nums, gap, i);
            }
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="归并排序merge-sort稳定排序"><a class="markdownIt-Anchor" href="#归并排序merge-sort稳定排序"></a> 归并排序（Merge Sort）（稳定排序）</h2>
<p>将无序数组拆分，排序后再合并成大的有序数组。</p>
<p>时间复杂度nlogn，空间复杂度n</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    vector&lt;<span class="hljs-type">int</span>&gt; tmp;
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">merge</span> <span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> low, <span class="hljs-type">int</span> mid, <span class="hljs-type">int</span> high)</span> </span>{
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = low; k &lt;= high; k++) {
            tmp[k] = nums[k];
        }

        <span class="hljs-type">int</span> i, j;
        <span class="hljs-keyword">for</span> (i = low, j = mid + <span class="hljs-number">1</span>, k = i; i &lt;= mid &amp;&amp; j &lt;=high; k++) {
            <span class="hljs-keyword">if</span> (tmp[i] &lt;= tmp[j]) {
                nums[k] = tmp[i++];
            } <span class="hljs-keyword">else</span> {
                nums[k] = tmp[j++];
            }
        }
        <span class="hljs-keyword">while</span> (i &lt;= mid) nums[k++] = tmp[i++];
        <span class="hljs-keyword">while</span> (j &lt;= high) nums[k++] = tmp[j++];
    }
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">mergeSort</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> low, <span class="hljs-type">int</span> high)</span> </span>{
        <span class="hljs-keyword">if</span> (low &lt; high) {
            <span class="hljs-type">int</span> mid = (low + high) / <span class="hljs-number">2</span>;
            <span class="hljs-built_in">mergeSort</span>(nums, low, mid + <span class="hljs-number">1</span>);
            <span class="hljs-built_in">mergeSort</span>(nums, mid + <span class="hljs-number">1</span>, high);
            <span class="hljs-built_in">merge</span>(nums, low, mid, high);
        }
    }
};
</code></pre>
<h2 id="快速排序quick-sort非稳定排序"><a class="markdownIt-Anchor" href="#快速排序quick-sort非稳定排序"></a> 快速排序（Quick Sort）（非稳定排序）</h2>
<p>随机选取一个数（x = rand() % len + startIndex）作为基准；<br>
把比基准小的数交换到前面，比基准大的数交换到后面；<br>
对左右区间递归重复。</p>
<p>时间复杂度nlogn，空间复杂度logn</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">quickSort</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp;nums, <span class="hljs-type">int</span> startIndex, <span class="hljs-type">int</span> endIndex)</span> </span>{
        <span class="hljs-keyword">if</span> (startIndex &gt;= endIndex) <span class="hljs-keyword">return</span>;
        
        <span class="hljs-type">int</span> x = <span class="hljs-built_in">rand</span>() % (endIndex - startIndex + <span class="hljs-number">1</span>) + startIndex; <span class="hljs-comment">// 基于随机的原则</span>
        <span class="hljs-built_in">swap</span>(nums[startIndex], nums[x]);
        <span class="hljs-type">int</span> firstNum = nums[startIndex];
        
        <span class="hljs-type">int</span> l = startIndex, r = endIndex;
        <span class="hljs-keyword">while</span> (l &lt; r) {
            <span class="hljs-comment">// 从后往前走，将比第一个小的移到前面</span>
            <span class="hljs-keyword">while</span> (l &lt; r &amp;&amp; nums[r] &gt;= firstNum) --r;
            <span class="hljs-keyword">if</span> (l &lt; r) {
                nums[l] = nums[r];
            }
            <span class="hljs-comment">// 从前往后走，将比第一个大的移到后面</span>
            <span class="hljs-keyword">while</span> (l &lt; r &amp;&amp; nums[l] &lt;= firstNum) ++l;
            <span class="hljs-keyword">if</span> (l &lt; r) {
                nums[r] = nums[l];
            }
        }
        nums[l] = firstNum;
        <span class="hljs-comment">// 自顶向下</span>
        <span class="hljs-built_in">quickSort</span>(nums, startIndex, l - <span class="hljs-number">1</span>);
        <span class="hljs-built_in">quickSort</span>(nums, l + <span class="hljs-number">1</span>, endIndex);
    }

<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-built_in">quickSort</span>(nums, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="堆排序heap-sort非稳定排序"><a class="markdownIt-Anchor" href="#堆排序heap-sort非稳定排序"></a> 堆排序（Heap Sort）（非稳定排序）</h2>
<p>先在原先数组的基础上构造大根堆（时间复杂度nlogn）；<br>
再依次弹出最大元素（每次弹出的时间复杂度为logk，k为当前大根堆中元素数目）。</p>
<p>时间复杂度nlogn，空间复杂度1</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">buildMaxHeap</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = (n - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>; i &gt;= <span class="hljs-number">0</span>; --i) {
            <span class="hljs-built_in">maxHeapify</span>(nums, i, n);
        }
    }

    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">maxHeapify</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> i, <span class="hljs-type">int</span> n)</span> </span>{
        <span class="hljs-keyword">while</span> (i * <span class="hljs-number">2</span> + <span class="hljs-number">1</span> &lt; n) {
            <span class="hljs-comment">// 代表当前 i 节点的左右儿子；</span>
            <span class="hljs-comment">// 超出数组大小则代表当前 i 节点为叶子节点，不需要移位</span>
            <span class="hljs-type">int</span> lSon = <span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>;
            <span class="hljs-type">int</span> rSon = <span class="hljs-number">2</span> * i + <span class="hljs-number">2</span>;
            <span class="hljs-type">int</span> large = i;
            <span class="hljs-keyword">if</span> (lSon &lt; n &amp;&amp; nums[lSon] &gt; nums[i]) large = lSon;
            <span class="hljs-keyword">if</span> (rSon &lt; n &amp;&amp; nums[rSon] &gt; nums[large]) large = rSon;

            <span class="hljs-keyword">if</span> (large != i) {
                <span class="hljs-built_in">swap</span>(nums[i], nums[large]);
                <span class="hljs-comment">// 迭代判断对应子节点及其儿子节点的大小关系</span>
                i = large;
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-keyword">break</span>;
            }
        }
    }

<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// heapSort 堆排序</span>
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-comment">// 将数组整理成大根堆</span>
        <span class="hljs-built_in">buildMaxHeap</span>(nums);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = n - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">1</span>; --i) {
            <span class="hljs-comment">// 依次弹出最大元素，放到数组最后，当前排序对应数组大小 - 1</span>
            <span class="hljs-built_in">swap</span>(nums[<span class="hljs-number">0</span>], nums[i]);
            --n;
            <span class="hljs-built_in">maxHeapify</span>(nums, <span class="hljs-number">0</span>, n);
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="计数排序count-sort稳定排序"><a class="markdownIt-Anchor" href="#计数排序count-sort稳定排序"></a> 计数排序（Count Sort）（稳定排序）</h2>
<p>创建数组 counts，用于统计原数组 nums 中各元素值的出现次数；<br>
再依次将元素值赋值到 nums 中对应位置。</p>
<p>计数排序，时间复杂度n + k，空间复杂度k（k = maxNum - minNum + 1）</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// CountSort 计数排序</span>
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-type">int</span> minNum = INT_MAX, maxNum = INT_MIN;
        <span class="hljs-comment">// 找到数组中的最小和最大元素</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            <span class="hljs-keyword">if</span> (nums[i] &lt; minNum) minNum = nums[i];
            <span class="hljs-keyword">if</span> (nums[i] &gt; maxNum) maxNum = nums[i];
        }
        <span class="hljs-comment">// 构造计数数组</span>
        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">counts</span><span class="hljs-params">(maxNum - minNum + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            ++counts[nums[i] - minNum];
        }
        <span class="hljs-comment">// 计数排序</span>
        <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; counts.<span class="hljs-built_in">size</span>(); ++i) {
            <span class="hljs-keyword">while</span> (counts[i] != <span class="hljs-number">0</span>) {
                nums[index++] = i + minNum;
                counts[i]--;
            }
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="桶排序bucket-sort稳定排序"><a class="markdownIt-Anchor" href="#桶排序bucket-sort稳定排序"></a> 桶排序（Bucket Sort）（稳定排序）</h2>
<p>将原数组的元素分到有限数量的桶里（大编号桶里的所有元素均大于小编号桶里的任意元素）；<br>
分别对每个桶进行排序；<br>
依次合并。</p>
<p>时间复杂度n + k，空间复杂度n + k（k为桶的数量）</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// BucketSort 桶排序</span>
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-comment">// 获取数组的最小值和最大值</span>
        <span class="hljs-type">int</span> maxNum = nums[<span class="hljs-number">0</span>], minNum = nums[<span class="hljs-number">0</span>];
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; ++i) {
            <span class="hljs-keyword">if</span> (nums[i] &gt; maxNum) maxNum = nums[i];
            <span class="hljs-keyword">if</span> (nums[i] &lt; minNum) minNum = nums[i];
        }
        <span class="hljs-comment">// 初始化桶</span>
        <span class="hljs-type">int</span> bucketNum = <span class="hljs-number">5</span>, bucketSize = (maxNum - minNum) / bucketNum + <span class="hljs-number">1</span>;
        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">buckets</span>(bucketNum, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(<span class="hljs-number">0</span>));
        <span class="hljs-comment">// 小至大分桶</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> num : nums) {
            <span class="hljs-type">int</span> bucketIndex = (num - minNum) / bucketSize;
            buckets[bucketIndex].<span class="hljs-built_in">emplace_back</span>(num);
        }
        <span class="hljs-comment">// 桶内排序</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; buckets.<span class="hljs-built_in">size</span>(); ++i) {
            <span class="hljs-built_in">sort</span>(buckets[i].<span class="hljs-built_in">begin</span>(), buckets[i].<span class="hljs-built_in">end</span>());
        }
        <span class="hljs-comment">// 从桶中依次取数</span>
        <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span>&amp; bucket : buckets) {
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> num : bucket) {
                nums[index++] = num;
            }
        }

        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
<h2 id="基数排序radix-sort稳定排序"><a class="markdownIt-Anchor" href="#基数排序radix-sort稳定排序"></a> 基数排序（Radix Sort）（稳定排序）</h2>
<p>对数组中所有数依次按由低到高的位数进行多次排序；<br>
每次排序都基于上次排序的结果。<br>
（相对位置顺序保持不变）</p>
<p>例：原始数组 1，23，21，11，32<br>
第一次排序后 1，21，11，32，23<br>
第二次排序后 1，11，21，23，32<br>
时间复杂度n x k，空间复杂度k（k为最大元素的位数）</p>
<p>代码：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    vector&lt;<span class="hljs-type">int</span>&gt; counts;
    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">radixSort</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, vector&lt;<span class="hljs-type">int</span>&gt;&amp; tmp, <span class="hljs-type">int</span> divisor)</span> </span>{
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        counts = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(<span class="hljs-number">10</span>, <span class="hljs-number">0</span>);
        <span class="hljs-comment">// 统计个、十、百、千、万上对应 0 ~ 9 的出现次数</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            <span class="hljs-type">int</span> x = (nums[i] / divisor) % <span class="hljs-number">10</span>;
            ++counts[x];
        }
        <span class="hljs-comment">// 前缀和</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span>; ++i) {
            counts[i] += counts[i - <span class="hljs-number">1</span>];
        }
        <span class="hljs-comment">// 从后向前赋值</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = n - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; --i) {
            <span class="hljs-type">int</span> x = (nums[i] / divisor) % <span class="hljs-number">10</span>;
            <span class="hljs-type">int</span> index = counts[x] - <span class="hljs-number">1</span>;
            tmp[index] = nums[i];
            --counts[x];
        }
    }

<span class="hljs-keyword">public</span>:
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>{
        <span class="hljs-comment">// RadixSort 基数排序</span>
        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();
        <span class="hljs-comment">// 预处理，让所有的数都大于等于0</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            nums[i] += <span class="hljs-number">50000</span>; <span class="hljs-comment">// 50000为最小可能的数组大小</span>
        }
        <span class="hljs-comment">// 找出最大的数字，并获得其最大位数</span>
        <span class="hljs-type">int</span> maxNum = nums[<span class="hljs-number">0</span>];
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            <span class="hljs-keyword">if</span> (nums[i] &gt; maxNum) {
                maxNum = nums[i];
            }
        }
        <span class="hljs-type">int</span> num = maxNum, maxLen = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">while</span> (num) {
            ++maxLen;
            num /= <span class="hljs-number">10</span>;
        }
        <span class="hljs-comment">// 基数排序，低位优先</span>
        <span class="hljs-type">int</span> divisor = <span class="hljs-number">1</span>;
        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">tmp</span><span class="hljs-params">(n, <span class="hljs-number">0</span>)</span></span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; maxLen; ++i) {
            <span class="hljs-built_in">radixSort</span>(nums, tmp, divisor);
            <span class="hljs-built_in">swap</span>(tmp, nums);
            divisor *= <span class="hljs-number">10</span>;
        }
        <span class="hljs-comment">// 减去预处理量</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            nums[i] -= <span class="hljs-number">50000</span>;
        }
        <span class="hljs-keyword">return</span> nums;
    }
};
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>智能电灯</title>
    <url>/blog/2022/06373cfef8.html</url>
    <content><![CDATA[<h2 id="esp8266实现智能电灯"><a class="markdownIt-Anchor" href="#esp8266实现智能电灯"></a> ESP8266实现智能电灯</h2>
<p>本实验目的是要通过腾讯云服务器和ESP8266芯片实现远程操纵一个LED灯的颜色和亮度</p>
<h3 id="实验原理"><a class="markdownIt-Anchor" href="#实验原理"></a> 实验原理</h3>
<p>首先在<a href="https://console.cloud.tencent.com/iotexplorer">腾讯云物联网开发平台</a>注册一个项目，并设置一个电灯产品，采用Wifi通信，然后在芯片上编写代码实现对LED灯的控制以及对信号的接收，然后用腾讯云配套小程序即可实现远程控制。</p>
<h3 id="实验步骤"><a class="markdownIt-Anchor" href="#实验步骤"></a> 实验步骤</h3>
<ol>
<li>使用一根提供USB数据线将NodeMCU开发板和电脑连接起来，在命令行执行指令<code>pip install esptool</code>,然后执行<code>esptool read_mac·</code>查看开发板信息<br>
<img src="https://s2.loli.net/2022/06/07/WlHSxXRKCFIP4pD.png" alt="20220607190411"><br>
图中红框内即为使用的接口，如果缺少驱动可以通过驱动精灵下载</li>
<li>烧录固件，首先执行<code>esptool --port COM9 erase_flash</code>擦除flash芯片，接口名称要更换为自己的设备名称，然后执行<code>esptool --port COM9 write_flash --flash_size=detect 0 esp8266-20220117-v1.18.bin</code>重新烧录固件,之后重启即可</li>
<li>在<a href="https://console.cloud.tencent.com/iotexplorer">腾讯云物联网开发平台</a>注册一个项目，命名为智能家居<br>
<img src="https://s2.loli.net/2022/06/07/x1y9UAjHKvGMBVu.png" alt="20220607190919"></li>
<li>进入项目创建一个新产品’智能电灯’，设置几个参数
<ul>
<li>产品品类：直接选择“智能生活”–&gt;“电工照明”–&gt;“灯”</li>
<li>认证方式：选择密钥认证，这个比较简单，而且适合我们的开发板 NodeMCU。</li>
<li>通信方式：选择 Wi-Fi。</li>
<li>数据协议：选择物模型来解析数据。</li>
</ul>
</li>
<li>设置完成后其他默认配置就可以，这样即可生成一个新产品，之后再测试设备列表里面可以查看我们的设备信息<br>
<img src="https://s2.loli.net/2022/06/07/u68xodkXEBMLZ7S.png" alt="20220607191329"><br>
记录下设备名称、设备密钥、和产品ID，然后在调试标签页点击下图中二维码<br>
<img src="https://s2.loli.net/2022/06/07/5uzbKpsS7JDcRVZ.png" alt="20220607191456"><br>
然后利用<code>腾讯连连</code>小程序添加该设备即可</li>
<li>代码部分我们需要将产品信息的三元组和利用password生成器生成的Username和Password替换main文件里面对应部分，并完善Button.py和LED.py文件实现NodeMCU开发板引脚和LED灯的绑定</li>
<li>实现远程控制需要在 NodeMCU 开发板上安装一个 MQTT 客户端代码库 umqtt.simple 库。它来自MicroPython 官方维护的非内核标准库 micropython-lib</li>
<li>使用Putty，协议选择<code>Serial</code>，频率设置为<code>115200</code>,流控制选择<code>None</code>即可使用Putty来连接开发板，执行以下指令连接WiFi并安装库<pre class="highlight"><code class="py"> <span class="hljs-keyword">import</span> network
 
 wifi = network.WLAN(network.STA_IF)
 wifi.active(<span class="hljs-literal">True</span>)
 wifi.scan() <span class="hljs-comment">#扫描WIFI列表</span>
 wifi.isconnected() <span class="hljs-comment">#查看当前连接状态，理论上应该是False</span>
 wifi.connect(<span class="hljs-string">'Wi-Fi的SSID'</span>, <span class="hljs-string">'Wi-Fi密码'</span>) <span class="hljs-comment"># 连接对应WiFi</span>
 wifi.isconnected() <span class="hljs-comment">#再次查看状态，应该是True</span>

 <span class="hljs-keyword">import</span> upip
 upip.install(<span class="hljs-string">'micropython-umqtt.simple'</span>)
</code></pre>
</li>
<li>烧写代码，执行<code>ampy --port COM9 --baud 115200 --delay 0.5 put main.py</code>烧写main文件,同样方式烧写其他三个文件，烧写完成之后重启即可实现远程控制</li>
<li>按照下图连接LED灯和开发板<br>
<img src="https://s2.loli.net/2022/06/07/Gy7ZlrDf3OwXM2j.png" alt="20220607193258"><br>
要注意面包板的正负极，连接好如下图所示<br>
<img src="https://s2.loli.net/2022/06/07/o6sxtJjz9YInaD7.jpg" alt="1654601661755"></li>
<li>打开小程序即可操控LED灯</li>
</ol>
<h3 id="演示"><a class="markdownIt-Anchor" href="#演示"></a> 演示</h3>
<p>见演示视频Esp8266.mp4</p>
<h2 id="esp32实现光照传感器"><a class="markdownIt-Anchor" href="#esp32实现光照传感器"></a> Esp32实现光照传感器</h2>
<h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3>
<p>因为光照传感器设备的部署位置比较灵活，不太可能像智能电灯一样连接房间里的电源线，所以我们要用一种比 Wi-Fi 功耗更低的通信技术。这样的话，就算使用电池供电，也可以长时间（一年以上）持续工作。因此选择 BLE 低功耗蓝牙技术。</p>
<p>BLE 设备可以在 4 种模式下工作：</p>
<ol>
<li>广播模式（Broadcaster），这里特指单纯的广播模式。这种模式下设备不可以被连接，只能够以一定的时间间隔把数据广播出来，供其他设备使用，比如手机扫描处理。蓝牙 Beacon 设备就是工作在这种模式。</li>
<li>从机模式（Peripheral），这种模式下设备仍然可以广播数据，同时也可以被连接。建立连接后，双方可以进行双向通信。比如你用手机连接一个具有蓝牙功能的体温计，这时体温计就是从机（Peripheral）。</li>
<li>主机模式（Central），这种模式下设备不进行广播，但是可以扫描周围的蓝牙广播包，发现其他设备，然后主动对这些设备发起连接。还是刚才那个例子，主动连接蓝牙体温计的手机就是主机（Central）角色。</li>
<li>观察者模式（Observer），这种模式下设备像主机模式一样，也不进行广播，而是扫描周围的蓝牙广播包，但是不同的地方是，它不会与从机设备建立连接。一般收集蓝牙设备广播包的网关就是在这种模式下工作的，它会将收集的广播数据通过网线、Wi-Fi 或者 4G 等蜂窝网络上传到云平台。</li>
</ol>
<h3 id="实验步骤-2"><a class="markdownIt-Anchor" href="#实验步骤-2"></a> 实验步骤</h3>
<ol>
<li>
<p>用面包板连接NodeMCU和感光元件，如下图所示：<br>
<img src="https://s2.loli.net/2022/06/07/6b9H5JChOUswyFc.jpg" alt="1654603216377"></p>
</li>
<li>
<p>基于 PT550 环保型光敏二极管的光照传感器元器件，它的灵敏度更高，测量范围是 0Lux～6000Lux。这个元器件通过信号管脚输出模拟量，我们读取 NodeMCU ESP32 的 ADC 模数转换器（ADC0，对应GPIO36）的数值，就可以得到光照强度。这个数值越大，表示光照强度越大。因为 ADC 支持的最大位数是 12bit，所以这个数值范围是 0~4095 之间。这里我们粗略地按照线性关系做一个转换,代码如下：</p>
<pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">LightSensor</span>():

 <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pin</span>):
     self.light = ADC(Pin(pin))

 <span class="hljs-keyword">def</span> <span class="hljs-title function_">value</span>(<span class="hljs-params">self</span>):
     value = self.light.read()
     <span class="hljs-built_in">print</span>(<span class="hljs-string">"Light ADC value:"</span>,value)
     <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(value / <span class="hljs-number">4095</span> * <span class="hljs-number">6000</span>)
</code></pre>
</li>
<li>
<p>和Esp8266一样，擦除固件，然后重装固件，将补充好的代码文件写入开发板</p>
<pre class="highlight"><code class="python">esptool --chip esp32 --port COM9 erase_flash <span class="hljs-comment">#擦除固件</span>
esptool --chip esp32 --port COM9 write_flash -z <span class="hljs-number">0x1000</span> esp32-<span class="hljs-number">20220117</span>-v1<span class="hljs-number">.18</span>.<span class="hljs-built_in">bin</span> <span class="hljs-comment">#烧写固件</span>
</code></pre>
</li>
</ol>
<h3 id="验证光照传感器"><a class="markdownIt-Anchor" href="#验证光照传感器"></a> 验证光照传感器</h3>
<p>使用nRF Connect，扫描到开发板如下：<br>
<img src="https://s2.loli.net/2022/06/07/4ADxrkJauIsqP85.jpg" alt="1654603649419"><br>
<img src="https://s2.loli.net/2022/06/07/XaBInrARLp9MySZ.jpg" alt="1654603668287"></p>
<h2 id="esp32的网关实现"><a class="markdownIt-Anchor" href="#esp32的网关实现"></a> Esp32的网关实现</h2>
<p>NodeMCU ESP32 开发板是蓝牙设备，本身无法直接联网上报数据，因此需要借助网关来实现联网的目的。</p>
<p>网关的主要功能是协议转换，一方面它需要接收低功耗蓝牙技术的光照传感器的广播数据，另一方面，它需要把解析的数据上传到云平台：<br>
<img src="https://s2.loli.net/2022/06/08/8Jy3nYC2ENzUhp4.png" alt="20220608150802"><br>
配置完虚拟机环境之后，虚拟机即充当了树莓派的作用</p>
<p>在<a href="https://console.cloud.tencent.com/iotexplorer">腾讯云物联网开发平台</a>同样按照上述方式配置一个Lightsensor_1部件，把光照值在<code>智能联动配置</code>里面设置为联动值，后面要用到光照值为灯泡提供光照数据，记录下三元组。</p>
<p>接下来补充<code>gateway.py</code>缺失部分代码，把三元组替换为我们的生成的三元组以及username和password,中间光照的loop函数调用bles成员函数读取扫描到的光照强度数值并上传扫描到的光照强度数值，代码如下：<br>
<img src="https://s2.loli.net/2022/06/08/4ITymNwzp87QEZx.png" alt="20220608151535"></p>
<h3 id="部署"><a class="markdownIt-Anchor" href="#部署"></a> 部署</h3>
<p>接下来就是可以让程序作为后台服务运行，首先打开虚拟机，执行以下几条命令,为虚拟机增添Pi Gateway服务</p>
<pre class="highlight"><code class="C++">$ sudo cp /home/pi/pi-gateway/pi-gateway.service /etc/systemd/system/
$ sudo systemctl daemon-reload
$ sudo systemctl start pi-gateway
$ sudo systemctl status pi-gateway
$ sudo systemctl enable pi-gateway
</code></pre>
<p>执行之后，网关程序就在虚拟机上运行起来了，在腾讯云平台上可以看到，光照传感器变为在线状态。<br>
<img src="https://s2.loli.net/2022/06/08/BN6cl591dCTAwbH.png" alt="1654673109845"><br>
<img src="https://s2.loli.net/2022/06/08/afO8ilYupnDoxKc.jpg" alt="1654672929610"></p>
<h3 id="设置场景联动"><a class="markdownIt-Anchor" href="#设置场景联动"></a> 设置场景联动</h3>
<p>我们希望实现的联动场景是，基于环境的光照强度自动控制电灯的开和关。具体来说，这个目标可以拆解为 3 个自动触发任务：</p>
<ol>
<li>当光照强度大于 1024Lux 时，关闭电灯。</li>
<li>当光照强度小于 1024Lux 时，打开电灯。</li>
<li>至于光照强度等于 1024Lux 时，也打开电灯。</li>
</ol>
<p>在腾讯连连小程序上面添加上述三个场景<br>
<img src="https://s2.loli.net/2022/06/08/vMQ89oRFUXLNe5J.jpg" alt="1a43aac93a87fd3ab3fbc6785c875e0"></p>
<h2 id="源代码"><a class="markdownIt-Anchor" href="#源代码"></a> 源代码</h2>
<h3 id="智能电灯"><a class="markdownIt-Anchor" href="#智能电灯"></a> 智能电灯</h3>
<pre class="highlight"><code class="python"><span class="hljs-comment"># main.py</span>
<span class="hljs-keyword">from</span> LED <span class="hljs-keyword">import</span> Led
<span class="hljs-keyword">from</span> Button <span class="hljs-keyword">import</span> Button
<span class="hljs-keyword">from</span> Relay <span class="hljs-keyword">import</span> Relay

<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">import</span> uasyncio
<span class="hljs-keyword">import</span> network
<span class="hljs-keyword">import</span> ujson
<span class="hljs-keyword">from</span> umqtt.simple <span class="hljs-keyword">import</span> MQTTClient

<span class="hljs-string">"""
Wi-Fi Gateway : SSID and Password
"""</span>
WIFI_AP_SSID = <span class="hljs-string">"Xiaomi_301"</span>
WIFI_AP_PSW = <span class="hljs-string">"76780211"</span>

<span class="hljs-string">"""
QCloud Device Info
"""</span>
DEVICE_NAME = <span class="hljs-string">"Led_1"</span>
PRODUCT_ID = <span class="hljs-string">"XICW4V8C51"</span>
DEVICE_KEY = <span class="hljs-string">"sBgj/K/mb+/F01FYk5IJcw=="</span>

<span class="hljs-string">"""
MQTT topic
"""</span>
MQTT_CONTROL_TOPIC = <span class="hljs-string">"$thing/down/property/"</span>+PRODUCT_ID+<span class="hljs-string">"/"</span>+DEVICE_NAME
MQTT_CONTROL_REPLY_TOPIC = <span class="hljs-string">"$thing/up/property/"</span>+PRODUCT_ID+<span class="hljs-string">"/"</span>+DEVICE_NAME

led = Led(<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>)
relay = Relay(<span class="hljs-number">16</span>)
button = Button(<span class="hljs-number">14</span>)

mqtt_client = <span class="hljs-literal">None</span>
color = <span class="hljs-number">0</span>   <span class="hljs-comment">#enum 0=red, 1=green, 2=blue</span>
name= <span class="hljs-string">""</span>    <span class="hljs-comment">#light name. it is optional</span>
brightness = <span class="hljs-number">100</span>  <span class="hljs-comment"># 0%~100%</span>
light_changed = <span class="hljs-literal">False</span>

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">wifi_connect</span>(<span class="hljs-params">ssid, pwd</span>):
    sta = network.WLAN(network.STA_IF)
    sta.active(<span class="hljs-literal">True</span>)
    sta.connect(ssid, pwd)

    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> sta.isconnected():
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Wi-Fi Connecting..."</span>)
        time.sleep_ms(<span class="hljs-number">500</span>)

<span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_callback</span>(<span class="hljs-params">topic, msg</span>):
    <span class="hljs-keyword">global</span> led, relay, button
    <span class="hljs-keyword">global</span> color, name, brightness, light_changed

    <span class="hljs-built_in">print</span>((topic, msg))
    msg_json = ujson.loads(msg)
    <span class="hljs-keyword">if</span> msg_json[<span class="hljs-string">'method'</span>] == <span class="hljs-string">'control'</span>:
        params = msg_json[<span class="hljs-string">'params'</span>]

        power_switch_tmp = params.get(<span class="hljs-string">'power_switch'</span>)
        <span class="hljs-keyword">if</span> power_switch_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            power_switch = power_switch_tmp
            relay.set_state(power_switch)

        brightness_tmp = params.get(<span class="hljs-string">'brightness'</span>)
        <span class="hljs-keyword">if</span> brightness_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            brightness = brightness_tmp

        color_tmp = params.get(<span class="hljs-string">'color'</span>)
        <span class="hljs-keyword">if</span> color_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            color = color_tmp

        name_tmp = params.get(<span class="hljs-string">'name'</span>)
        <span class="hljs-keyword">if</span> name_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            name = name_tmp

        <span class="hljs-keyword">if</span> brightness_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> color_tmp <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            light_changed = <span class="hljs-literal">True</span>

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_connect</span>():
    <span class="hljs-keyword">global</span> mqtt_client

    MQTT_SERVER = PRODUCT_ID + <span class="hljs-string">".iotcloud.tencentdevices.com"</span>
    MQTT_PORT = <span class="hljs-number">1883</span>
    MQTT_CLIENT_ID = PRODUCT_ID+DEVICE_NAME
    MQTT_USER_NAME = <span class="hljs-string">"XICW4V8C51Led_1;12010126;DUQ2I;1655185098"</span>
    MQTTT_PASSWORD = <span class="hljs-string">"c8e0d3a2c3b568091747e5eba7de4a6edb6280dd20d1dade64efa6debd3492cd;hmacsha256"</span>

    mqtt_client = MQTTClient(MQTT_CLIENT_ID, MQTT_SERVER, MQTT_PORT,MQTT_USER_NAME, MQTTT_PASSWORD, <span class="hljs-number">60</span>)
    mqtt_client.set_callback(mqtt_callback)
    mqtt_client.connect()

<span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_report</span>(<span class="hljs-params">client, color, name, switch, brightness</span>):

    msg = {
        <span class="hljs-string">"method"</span>: <span class="hljs-string">"report"</span>,
        <span class="hljs-string">"clientToken"</span>: <span class="hljs-string">"clientToken-2444532211"</span>,
        <span class="hljs-string">"params"</span>: {
            <span class="hljs-string">"color"</span>: color,
            <span class="hljs-string">"color_temp"</span>: <span class="hljs-number">0</span>,
            <span class="hljs-string">"name"</span>: name,
            <span class="hljs-string">"power_switch"</span>: switch,
            <span class="hljs-string">"brightness"</span>: brightness
        }
    }

    client.publish(MQTT_CONTROL_REPLY_TOPIC.encode(), ujson.dumps(msg).encode())

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">light_loop</span>():
    <span class="hljs-keyword">global</span> led, relay, button
    <span class="hljs-keyword">global</span> color, name, brightness, light_changed

    switch_status_last = <span class="hljs-number">1</span>
    LED_status = <span class="hljs-number">0</span>

    color = <span class="hljs-number">2</span>   <span class="hljs-comment">#blue</span>
    brightness = <span class="hljs-number">100</span>    <span class="hljs-comment">#here 100% == 1</span>
    led.rgb_light(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, brightness/<span class="hljs-number">100.0</span>)

    <span class="hljs-comment"># 该循环为测试LED等的开闭循环</span>
    <span class="hljs-comment"># while True:</span>
    <span class="hljs-comment">#     relay.set_on()</span>
    <span class="hljs-comment">#     await uasyncio.sleep_ms(2000)</span>
    <span class="hljs-comment">#     relay.set_off()</span>
    <span class="hljs-comment">#     await uasyncio.sleep_ms(2000)</span>

    time_cnt = <span class="hljs-number">0</span>

    mqtt_client.subscribe(MQTT_CONTROL_TOPIC.encode())

    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:
        mqtt_client.check_msg()

        switch_status = button.state()
        LED_status = relay.state()
        <span class="hljs-keyword">if</span> switch_status != switch_status_last:
            <span class="hljs-keyword">if</span> switch_status == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> switch_status_last == <span class="hljs-number">1</span>:
                LED_status = <span class="hljs-number">0</span> <span class="hljs-keyword">if</span> LED_status <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>
            relay.set_state(LED_status)
            switch_status_last = switch_status

        <span class="hljs-keyword">if</span> light_changed:
            light_changed = <span class="hljs-literal">False</span>
            led.rgb_light(<span class="hljs-number">255</span> <span class="hljs-keyword">if</span> color==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>, <span class="hljs-number">255</span> <span class="hljs-keyword">if</span> color==<span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>, <span class="hljs-number">255</span> <span class="hljs-keyword">if</span> color==<span class="hljs-number">2</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>, brightness/<span class="hljs-number">100.0</span>)

        <span class="hljs-comment"># 调整为0.02*100=2秒上报一次</span>
        <span class="hljs-keyword">if</span> time_cnt &gt;= <span class="hljs-number">100</span>:
            mqtt_report(mqtt_client, color, name, LED_status, brightness)
            time_cnt = <span class="hljs-number">0</span>
        time_cnt = time_cnt+<span class="hljs-number">1</span>
        <span class="hljs-keyword">await</span> uasyncio.sleep_ms(<span class="hljs-number">20</span>)<span class="hljs-comment"># 时间间隔最好别超过50ms，否则按钮按下时间在休眠期间的话会无效，导致按钮很不好操作</span>

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():
    <span class="hljs-keyword">global</span> mqtt_client

    <span class="hljs-comment"># Wi-Fi connection</span>
    <span class="hljs-keyword">try</span>:
        <span class="hljs-keyword">await</span> uasyncio.wait_for(wifi_connect(WIFI_AP_SSID, WIFI_AP_PSW), <span class="hljs-number">20</span>)
    <span class="hljs-keyword">except</span> uasyncio.TimeoutError:
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"wifi connected timeout!"</span>)

    <span class="hljs-comment"># MQTT connection</span>
    <span class="hljs-keyword">try</span>:
        <span class="hljs-keyword">await</span> uasyncio.wait_for(mqtt_connect(), <span class="hljs-number">20</span>)
    <span class="hljs-keyword">except</span> uasyncio.TimeoutError:
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"mqtt connected timeout!"</span>)

    <span class="hljs-keyword">await</span> uasyncio.gather(light_loop())

uasyncio.run(main())
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment"># Relay.py</span>

<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> ADC
<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> Pin, Signal

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Relay</span>():

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pin</span>):
        self.relaypin = Pin(pin, Pin.OUT)
        self.relayled = Signal(self.relaypin, invert=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 将信号置反, 实现开与关和输入信号对应</span>
        <span class="hljs-comment">#self.last_status = 1</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_state</span>(<span class="hljs-params">self, state</span>):
        self.relayled.value(state)
        <span class="hljs-comment">#self.relaypin.value(state)</span>
        <span class="hljs-comment">#self.last_status = state</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_on</span>(<span class="hljs-params">self</span>):
        <span class="hljs-comment">#self.relaypin.on() value: 1 but light is off</span>
        self.relayled.value(<span class="hljs-number">1</span>)
        <span class="hljs-built_in">print</span>(<span class="hljs-string">'Relay on value: '</span> + <span class="hljs-built_in">str</span>(self.relayled.value()))
    
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_off</span>(<span class="hljs-params">self</span>):
        <span class="hljs-comment"># self.relaypin.off() value: 0 but light is on</span>
        self.relayled.value(<span class="hljs-number">0</span>)
        <span class="hljs-built_in">print</span>(<span class="hljs-string">'Relay off value: '</span> + <span class="hljs-built_in">str</span>(self.relayled.value()))
    
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">state</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self.relayled.value()
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment">#LED.py</span>

<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> PWM
<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> Pin

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Led</span>():
    <span class="hljs-string">"""
    创建LED类
    """</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, rpin, gpin, bpin, sfreq=<span class="hljs-number">1000</span></span>):
        <span class="hljs-string">"""
        构造函数
        :param pin: 接LED的管脚，必须支持PWM
        :param freq: PWM的默认频率是1000
        """</span>
        <span class="hljs-comment">#以rpin, gpin, bpin为参数，使用Pin和PWM来绑定三个引脚来控制led灯的红黄蓝的三个PWM信号</span>
        self.led_red = PWM(Pin(rpin), freq = sfreq)
        self.led_green = PWM(Pin(gpin), freq = sfreq)
        self.led_blue = PWM(Pin(bpin), freq = sfreq)
		

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rgb_light</span>(<span class="hljs-params">self, red, green, blue, brightness</span>):
		<span class="hljs-comment">#red green blue的范围在range(256)内，brightness的范围在[0,1]内，如果取值不在正确范围内，什么也不做</span>
        <span class="hljs-comment">#调用duty成员函数来设置三种颜色的占空比</span>
        <span class="hljs-keyword">if</span> brightness &gt;= <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> brightness &lt;= <span class="hljs-number">1</span>:
            <span class="hljs-keyword">if</span> red <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):
                self.led_red.duty(<span class="hljs-built_in">int</span>(red/<span class="hljs-number">255</span>*brightness*<span class="hljs-number">1023</span>))
            <span class="hljs-keyword">if</span> green <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):
                self.led_green.duty(<span class="hljs-built_in">int</span>(green/<span class="hljs-number">255</span>*brightness*<span class="hljs-number">1023</span>))
            <span class="hljs-keyword">if</span> blue <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):
                self.led_blue.duty(<span class="hljs-built_in">int</span>(blue/<span class="hljs-number">255</span>*brightness*<span class="hljs-number">1023</span>))
		

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">deinit</span>(<span class="hljs-params">self</span>):
        <span class="hljs-string">"""
        析构函数
        """</span>
        self.led_red.deinit()
        self.led_green.deinit()
        self.led_blue.deinit()
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment"># Button.py</span>
<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> ADC 
<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> Pin

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Button</span>():
    
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pin</span>):
        self.button = Pin(pin, Pin.IN)

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">state</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self.button.value()

</code></pre>
<h3 id="光照传感器"><a class="markdownIt-Anchor" href="#光照传感器"></a> 光照传感器</h3>
<pre class="highlight"><code class="python"><span class="hljs-comment"># main.py</span>
<span class="hljs-keyword">from</span> ble_lightsensor <span class="hljs-keyword">import</span> BLELightSensor
<span class="hljs-keyword">from</span> lightsensor <span class="hljs-keyword">import</span> LightSensor
<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">import</span> bluetooth

<span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():
    ble = bluetooth.BLE()
    ble.active(<span class="hljs-literal">True</span>)
    ble_light = BLELightSensor(ble)

    light = LightSensor(<span class="hljs-number">36</span>)
    light_density = light.value()
    i = <span class="hljs-number">0</span>

    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:
        <span class="hljs-comment"># Write every second, notify every 10 seconds.</span>
        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>
        ble_light.set_light(light_density, notify=i == <span class="hljs-number">0</span>)
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Light Lux:"</span>, light_density)

        light_density = light.value()
        time.sleep_ms(<span class="hljs-number">1000</span>)

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:
    main()
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment"># ble_advertising.py</span>
<span class="hljs-comment"># Helpers for generating BLE advertising payloads.</span>

<span class="hljs-keyword">from</span> micropython <span class="hljs-keyword">import</span> const
<span class="hljs-keyword">import</span> struct
<span class="hljs-keyword">import</span> bluetooth

<span class="hljs-comment"># Advertising payloads are repeated packets of the following form:</span>
<span class="hljs-comment">#   1 byte data length (N + 1)</span>
<span class="hljs-comment">#   1 byte type (see constants below)</span>
<span class="hljs-comment">#   N bytes type-specific data</span>

_ADV_TYPE_FLAGS = const(<span class="hljs-number">0x01</span>)
_ADV_TYPE_NAME = const(<span class="hljs-number">0x09</span>)
_ADV_TYPE_UUID16_COMPLETE = const(<span class="hljs-number">0x3</span>)
_ADV_TYPE_UUID32_COMPLETE = const(<span class="hljs-number">0x5</span>)
_ADV_TYPE_UUID128_COMPLETE = const(<span class="hljs-number">0x7</span>)
_ADV_TYPE_UUID16_MORE = const(<span class="hljs-number">0x2</span>)
_ADV_TYPE_UUID32_MORE = const(<span class="hljs-number">0x4</span>)
_ADV_TYPE_UUID128_MORE = const(<span class="hljs-number">0x6</span>)
_ADV_TYPE_APPEARANCE = const(<span class="hljs-number">0x19</span>)
_ADV_TYPE_SERVICE_DATA = const(<span class="hljs-number">0x16</span>)


<span class="hljs-comment"># Generate a payload to be passed to gap_advertise(adv_data=...).</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">advertising_payload</span>(<span class="hljs-params">limited_disc=<span class="hljs-literal">False</span>, br_edr=<span class="hljs-literal">False</span>, name=<span class="hljs-literal">None</span>, services=<span class="hljs-literal">None</span>, appearance=<span class="hljs-number">0</span>, service_data = <span class="hljs-literal">None</span></span>):
    payload = <span class="hljs-built_in">bytearray</span>()

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_append</span>(<span class="hljs-params">adv_type, value</span>):
        <span class="hljs-keyword">nonlocal</span> payload
        payload += struct.pack(<span class="hljs-string">"BB"</span>, <span class="hljs-built_in">len</span>(value) + <span class="hljs-number">1</span>, adv_type) + value

    _append(
        _ADV_TYPE_FLAGS,
        struct.pack(<span class="hljs-string">"B"</span>, (<span class="hljs-number">0x01</span> <span class="hljs-keyword">if</span> limited_disc <span class="hljs-keyword">else</span> <span class="hljs-number">0x02</span>) + (<span class="hljs-number">0x18</span> <span class="hljs-keyword">if</span> br_edr <span class="hljs-keyword">else</span> <span class="hljs-number">0x04</span>)),
    )

    <span class="hljs-keyword">if</span> name:
        _append(_ADV_TYPE_NAME, name)

    <span class="hljs-keyword">if</span> services:
        <span class="hljs-keyword">for</span> uuid <span class="hljs-keyword">in</span> services:
            b = <span class="hljs-built_in">bytes</span>(uuid)
            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(b) == <span class="hljs-number">2</span>:
                _append(_ADV_TYPE_UUID16_COMPLETE, b)
            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(b) == <span class="hljs-number">4</span>:
                _append(_ADV_TYPE_UUID32_COMPLETE, b)
            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(b) == <span class="hljs-number">16</span>:
                _append(_ADV_TYPE_UUID128_COMPLETE, b)

    <span class="hljs-comment"># See org.bluetooth.characteristic.gap.appearance.xml</span>
    <span class="hljs-keyword">if</span> appearance:
        _append(_ADV_TYPE_APPEARANCE, struct.pack(<span class="hljs-string">"&lt;h"</span>, appearance))

    <span class="hljs-keyword">if</span> service_data:
        _append(_ADV_TYPE_SERVICE_DATA, service_data)

    <span class="hljs-keyword">return</span> payload


<span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_field</span>(<span class="hljs-params">payload, adv_type</span>):
    i = <span class="hljs-number">0</span>
    result = []
    <span class="hljs-keyword">while</span> i + <span class="hljs-number">1</span> &lt; <span class="hljs-built_in">len</span>(payload):
        <span class="hljs-keyword">if</span> payload[i + <span class="hljs-number">1</span>] == adv_type:
            result.append(payload[i + <span class="hljs-number">2</span> : i + payload[i] + <span class="hljs-number">1</span>])
        i += <span class="hljs-number">1</span> + payload[i]
    <span class="hljs-keyword">return</span> result


<span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_name</span>(<span class="hljs-params">payload</span>):
    n = decode_field(payload, _ADV_TYPE_NAME)
    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(n[<span class="hljs-number">0</span>], <span class="hljs-string">"utf-8"</span>) <span class="hljs-keyword">if</span> n <span class="hljs-keyword">else</span> <span class="hljs-string">""</span>


<span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_services</span>(<span class="hljs-params">payload</span>):
    services = []
    <span class="hljs-keyword">for</span> u <span class="hljs-keyword">in</span> decode_field(payload, _ADV_TYPE_UUID16_COMPLETE):
        services.append(bluetooth.UUID(struct.unpack(<span class="hljs-string">"&lt;h"</span>, u)[<span class="hljs-number">0</span>]))
    <span class="hljs-keyword">for</span> u <span class="hljs-keyword">in</span> decode_field(payload, _ADV_TYPE_UUID32_COMPLETE):
        services.append(bluetooth.UUID(struct.unpack(<span class="hljs-string">"&lt;d"</span>, u)[<span class="hljs-number">0</span>]))
    <span class="hljs-keyword">for</span> u <span class="hljs-keyword">in</span> decode_field(payload, _ADV_TYPE_UUID128_COMPLETE):
        services.append(bluetooth.UUID(u))
    <span class="hljs-keyword">return</span> services


<span class="hljs-keyword">def</span> <span class="hljs-title function_">demo</span>():
    payload = advertising_payload(
        name=<span class="hljs-string">"micropython"</span>,
        services=[bluetooth.UUID(<span class="hljs-number">0x181A</span>), bluetooth.UUID(<span class="hljs-string">"6E400001-B5A3-F393-E0A9-E50E24DCCA9E"</span>)],
    )
    <span class="hljs-built_in">print</span>(payload)
    <span class="hljs-built_in">print</span>(decode_name(payload))
    <span class="hljs-built_in">print</span>(decode_services(payload))


<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:
    demo()
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment"># ble_lightsensor.py</span>
<span class="hljs-keyword">import</span> bluetooth
<span class="hljs-keyword">import</span> struct
<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">from</span> ble_advertising <span class="hljs-keyword">import</span> advertising_payload

<span class="hljs-keyword">from</span> micropython <span class="hljs-keyword">import</span> const

_IRQ_CENTRAL_CONNECT = const(<span class="hljs-number">1</span>)
_IRQ_CENTRAL_DISCONNECT = const(<span class="hljs-number">2</span>)
_IRQ_GATTS_INDICATE_DONE = const(<span class="hljs-number">20</span>)

_FLAG_READ = const(<span class="hljs-number">0x0002</span>)
_FLAG_NOTIFY = const(<span class="hljs-number">0x0010</span>)

_ADV_SERVICE_DATA_UUID = <span class="hljs-number">0xFE95</span>
_SERVICE_UUID_ENV_SENSE = <span class="hljs-number">0x181A</span>
_CHAR_UUID_AMBIENT_LIGHT = <span class="hljs-string">'FEC66B35-937E-4938-9F8D-6E44BBD533EE'</span>

<span class="hljs-comment"># Service environmental sensing</span>
_ENV_SENSE_UUID = bluetooth.UUID(_SERVICE_UUID_ENV_SENSE)
<span class="hljs-comment"># Characteristic ambient light density</span>
_AMBIENT_LIGHT_CHAR = (
    bluetooth.UUID(_CHAR_UUID_AMBIENT_LIGHT),
    _FLAG_READ | _FLAG_NOTIFY ,
)
_ENV_SENSE_SERVICE = (
    _ENV_SENSE_UUID,
    (_AMBIENT_LIGHT_CHAR,),
)

<span class="hljs-comment"># https://specificationrefs.bluetooth.com/assigned-values/Appearance%20Values.pdf</span>
_ADV_APPEARANCE_GENERIC_AMBIENT_LIGHT = const(<span class="hljs-number">1344</span>)

<span class="hljs-keyword">class</span> <span class="hljs-title class_">BLELightSensor</span>:
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, ble, name=<span class="hljs-string">'Nodemcu'</span></span>):
        self._ble = ble
        self._ble.active(<span class="hljs-literal">True</span>)
        self._ble.irq(self._irq)
        ((self._handle,),) = self._ble.gatts_register_services((_ENV_SENSE_SERVICE,))
        self._connections = <span class="hljs-built_in">set</span>()
        time.sleep_ms(<span class="hljs-number">500</span>)
        self._payload = advertising_payload(
            name=name, services=[_ENV_SENSE_UUID], appearance=_ADV_APPEARANCE_GENERIC_AMBIENT_LIGHT
        )
        self._sd_adv = <span class="hljs-literal">None</span>
        self._advertise()

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_irq</span>(<span class="hljs-params">self, event, data</span>):
        <span class="hljs-comment"># Track connections so we can send notifications.</span>
        <span class="hljs-keyword">if</span> event == _IRQ_CENTRAL_CONNECT:
            conn_handle, _, _ = data
            self._connections.add(conn_handle)
        <span class="hljs-keyword">elif</span> event == _IRQ_CENTRAL_DISCONNECT:
            conn_handle, _, _ = data
            self._connections.remove(conn_handle)
            <span class="hljs-comment"># Start advertising again to allow a new connection.</span>
            self._advertise()
        <span class="hljs-keyword">elif</span> event == _IRQ_GATTS_INDICATE_DONE:
            conn_handle, value_handle, status = data

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_light</span>(<span class="hljs-params">self, light_den, notify=<span class="hljs-literal">False</span></span>):
        self._ble.gatts_write(self._handle, struct.pack(<span class="hljs-string">"!h"</span>, <span class="hljs-built_in">int</span>(light_den)))
        self._sd_adv = self.build_mi_sdadv(light_den)
        self._advertise()
        <span class="hljs-keyword">if</span> notify:
            <span class="hljs-keyword">for</span> conn_handle <span class="hljs-keyword">in</span> self._connections:
                <span class="hljs-keyword">if</span> notify:
                    <span class="hljs-comment"># Notify connected centrals.</span>
                    self._ble.gatts_notify(conn_handle, self._handle)

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">build_mi_sdadv</span>(<span class="hljs-params">self, density</span>):
        
        uuid = <span class="hljs-number">0xFE95</span>
        fc = <span class="hljs-number">0x0010</span>
        pid = <span class="hljs-number">0x0002</span>
        fcnt = <span class="hljs-number">0x01</span>
        mac = self._ble.config(<span class="hljs-string">'mac'</span>)
        objid = <span class="hljs-number">0x1007</span>
        objlen = <span class="hljs-number">0x03</span>
        objval = density

        <span class="hljs-comment">#service_data = struct.pack("&lt;3HB",uuid,fc,pid,fcnt)+mac+struct.pack("&lt;H2BH",objid,objlen,0,objval)</span>
        <span class="hljs-comment">#mac获取得到的是一个tuple对象 ex: (0, b'4\\x86]\\xb6\\xeb\\x0e'), 取第二个</span>
        service_data = struct.pack(<span class="hljs-string">"&lt;3HB"</span>,uuid,fc,pid,fcnt)+mac[<span class="hljs-number">1</span>]+struct.pack(<span class="hljs-string">"&lt;H2BH"</span>,objid,objlen,<span class="hljs-number">0</span>,objval)

        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Service Data:"</span>,service_data)
        
        <span class="hljs-keyword">return</span> advertising_payload(service_data=service_data)
        
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_advertise</span>(<span class="hljs-params">self, interval_us=<span class="hljs-number">500000</span></span>):
        self._ble.gap_advertise(interval_us, adv_data=self._payload)
        time.sleep_ms(<span class="hljs-number">100</span>)

        <span class="hljs-built_in">print</span>(<span class="hljs-string">"sd_adv"</span>,self._sd_adv)
        <span class="hljs-keyword">if</span> self._sd_adv <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            <span class="hljs-built_in">print</span>(<span class="hljs-string">"sdddd_adv"</span>,self._sd_adv)
            self._ble.gap_advertise(interval_us, adv_data=self._sd_adv)
</code></pre>
<pre class="highlight"><code class="python"><span class="hljs-comment"># lightsensor.py</span>

<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> ADC
<span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> Pin

<span class="hljs-keyword">class</span> <span class="hljs-title class_">LightSensor</span>():

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pin</span>):
        self.light = ADC(Pin(pin))

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">value</span>(<span class="hljs-params">self</span>):
        value = self.light.read()
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Light ADC value:"</span>,value)
        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(value / <span class="hljs-number">4095</span> * <span class="hljs-number">6000</span>)
</code></pre>
<h3 id="esp32的网关实现-2"><a class="markdownIt-Anchor" href="#esp32的网关实现-2"></a> esp32的网关实现</h3>
<pre class="highlight"><code class="py"><span class="hljs-comment"># blescan.py</span>
<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">from</span> threading <span class="hljs-keyword">import</span> Thread
<span class="hljs-keyword">from</span> interruptingcow <span class="hljs-keyword">import</span> timeout

<span class="hljs-keyword">from</span> bluepy.btle <span class="hljs-keyword">import</span> DefaultDelegate, Peripheral, Scanner, UUID, capitaliseName, BTLEInternalError
<span class="hljs-keyword">from</span> bluepy.btle <span class="hljs-keyword">import</span> BTLEDisconnectError, BTLEManagementError, BTLEGattError

<span class="hljs-keyword">class</span> <span class="hljs-title class_">LightScanner</span>():
    SCAN_TIMEOUT = <span class="hljs-number">5</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name</span>):
        self._name = name
    
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">status_update</span>(<span class="hljs-params">self</span>):
        results = self._get_data()

        <span class="hljs-comment"># messages = [</span>
        <span class="hljs-comment">#     MqttMessage(</span>
        <span class="hljs-comment">#         topic=self.format_topic("property/light"),</span>
        <span class="hljs-comment">#         payload=results.lightlevel,</span>
        <span class="hljs-comment">#     )</span>
        <span class="hljs-comment"># ]</span>

        <span class="hljs-keyword">return</span> results

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_data</span>(<span class="hljs-params">self</span>):
        <span class="hljs-string">"""
        获取光照强度数据，并对超时异常进行处理
        """</span>
        scan_processor = ScanProcessor(self._name)
        scanner = Scanner().withDelegate(scan_processor)
        scanner.scan(self.SCAN_TIMEOUT, passive=<span class="hljs-literal">True</span>)

        <span class="hljs-keyword">with</span> timeout(
            self.SCAN_TIMEOUT,
            exception=Exception(
                <span class="hljs-string">"Retrieving data from {} device {} timed out after {} seconds"</span>.<span class="hljs-built_in">format</span>(
                    <span class="hljs-built_in">repr</span>(self), self._name, self.SCAN_TIMEOUT
                )
            ),
        ):
            <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> scan_processor.ready:
                time.sleep(<span class="hljs-number">1</span>)
            <span class="hljs-keyword">return</span> scan_processor.results

        <span class="hljs-keyword">return</span> scan_processor.results

<span class="hljs-keyword">class</span> <span class="hljs-title class_">ScanProcessor</span>:

    ADV_TYPE_SERVICE_DATA = <span class="hljs-number">0x16</span> <span class="hljs-comment">#设置数据格式为十六进制</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name</span>):
        self._ready = <span class="hljs-literal">False</span>
        self._name = name
        self._results = MiBeaconData()

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handleDiscovery</span>(<span class="hljs-params">self, dev, isNewDev, _</span>):
        is_nodemcu = <span class="hljs-literal">False</span>
        <span class="hljs-keyword">if</span> isNewDev:
            <span class="hljs-keyword">for</span> (adtype, desc, value) <span class="hljs-keyword">in</span> dev.getScanData():
                <span class="hljs-comment">#Service Data UUID == 0xFE95 according to MiBeacon</span>
                <span class="hljs-keyword">if</span> adtype == self.ADV_TYPE_SERVICE_DATA <span class="hljs-keyword">and</span> value.startswith(<span class="hljs-string">"95fe"</span>):
                    <span class="hljs-built_in">print</span>(<span class="hljs-string">"FOUND service Data:"</span>,adtype, desc, value)
                    <span class="hljs-comment">#Object ID == 0x1007 according to MiBeacon</span>
                    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(value) == <span class="hljs-number">38</span> <span class="hljs-keyword">and</span> value[<span class="hljs-number">26</span>:<span class="hljs-number">30</span>] == <span class="hljs-string">'0710'</span>:
                        light_den = <span class="hljs-built_in">int</span>((value[-<span class="hljs-number">2</span>:] + value[-<span class="hljs-number">4</span>:-<span class="hljs-number">2</span>]), <span class="hljs-number">16</span>)
                        mac = value[<span class="hljs-number">14</span>:<span class="hljs-number">26</span>]

                        self._results.lightlevel = light_den
                        self._results.mac = mac

                        self.ready = <span class="hljs-literal">True</span>

<span class="hljs-meta">    @property</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">mac</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self._mac

<span class="hljs-meta">    @property</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">ready</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self._ready

<span class="hljs-meta">    @ready.setter</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">ready</span>(<span class="hljs-params">self, var</span>):
        self._ready = var

<span class="hljs-meta">    @property</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">results</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self._results

<span class="hljs-keyword">class</span> <span class="hljs-title class_">MiBeaconData</span>:
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):
        self._lightlevel = <span class="hljs-literal">None</span>
        self._mac = <span class="hljs-literal">None</span>

<span class="hljs-meta">    @property</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">lightlevel</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self._lightlevel

<span class="hljs-meta">    @lightlevel.setter</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">lightlevel</span>(<span class="hljs-params">self, var</span>):
        self._lightlevel = var

<span class="hljs-meta">    @property</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">mac</span>(<span class="hljs-params">self</span>):
        <span class="hljs-keyword">return</span> self._mac

<span class="hljs-meta">    @mac.setter</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">mac</span>(<span class="hljs-params">self, var</span>):
        self._mac = var
</code></pre>
<pre class="highlight"><code class="py"><span class="hljs-comment"># gateway.py</span>
<span class="hljs-keyword">from</span> blescan <span class="hljs-keyword">import</span> LightScanner, MiBeaconData

<span class="hljs-keyword">import</span> time 
<span class="hljs-keyword">import</span> asyncio
<span class="hljs-keyword">import</span> json
<span class="hljs-keyword">import</span> uuid
<span class="hljs-keyword">import</span> paho.mqtt.client <span class="hljs-keyword">as</span> MQTTClient

<span class="hljs-string">"""
QCloud Device Info
"""</span>
DEVICE_NAME = <span class="hljs-string">"Lightsensor_1"</span>
PRODUCT_ID = <span class="hljs-string">"X2OQT7NRTP"</span>
DEVICE_KEY = <span class="hljs-string">"h0ftJ153maTi6jJWg9KCQA=="</span>

<span class="hljs-string">"""
MQTT topic
"""</span>
MQTT_CONTROL_TOPIC = <span class="hljs-string">"$thing/down/property/"</span>+PRODUCT_ID+<span class="hljs-string">"/"</span>+DEVICE_NAME
MQTT_CONTROL_REPLY_TOPIC = <span class="hljs-string">"$thing/up/property/"</span>+PRODUCT_ID+<span class="hljs-string">"/"</span>+DEVICE_NAME

<span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_callback</span>(<span class="hljs-params">client, userdata, msg</span>):
    <span class="hljs-comment"># Callback</span>
    <span class="hljs-comment"># print(f"Received `{msg.payload.decode()}` from `{msg.topic}` topic")</span>
    <span class="hljs-keyword">return</span>

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_connect</span>():
    <span class="hljs-comment">#connect callback</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_connect</span>(<span class="hljs-params">client, userdata, flags, rc</span>):
        <span class="hljs-keyword">if</span> rc == <span class="hljs-number">0</span>:
            <span class="hljs-built_in">print</span>(<span class="hljs-string">"Connected to MQTT Broker!"</span>)
        <span class="hljs-keyword">else</span>:
            <span class="hljs-built_in">print</span>(<span class="hljs-string">"Failed to connect, return code %d\n"</span>, rc)

    mqtt_client = <span class="hljs-literal">None</span>
    MQTT_SERVER = PRODUCT_ID + <span class="hljs-string">".iotcloud.tencentdevices.com"</span>
    MQTT_PORT = <span class="hljs-number">1883</span>
    MQTT_CLIENT_ID = PRODUCT_ID+DEVICE_NAME
    MQTT_USER_NAME = <span class="hljs-string">"X2OQT7NRTPLightsensor_1;12010126;DTXFZ;1655263739"</span>
    MQTTT_PASSWORD = <span class="hljs-string">"c02c6980d125f3846de11e1ab1d256f864e78f7377d2d4f94d992c5703a056c1;hmacsha256"</span>

    mqtt_client = MQTTClient.Client(MQTT_CLIENT_ID)
    mqtt_client.username_pw_set(MQTT_USER_NAME, MQTTT_PASSWORD)
    mqtt_client.on_connect = on_connect
    
    mqtt_client.connect(MQTT_SERVER, MQTT_PORT, <span class="hljs-number">60</span>)

    <span class="hljs-keyword">return</span> mqtt_client

<span class="hljs-keyword">def</span> <span class="hljs-title function_">mqtt_report</span>(<span class="hljs-params">client, light_level</span>):
    client_token = <span class="hljs-string">"clientToken-"</span> + <span class="hljs-built_in">str</span>(uuid.uuid4())

    msg = {
        <span class="hljs-string">"method"</span>: <span class="hljs-string">"report"</span>,
        <span class="hljs-string">"clientToken"</span>: client_token,
        <span class="hljs-string">"params"</span>: {
            <span class="hljs-string">"Illuminance"</span>: light_level
        }
    }

    client.publish(MQTT_CONTROL_REPLY_TOPIC, json.dumps(msg))

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">light_loop</span>(<span class="hljs-params">mclient</span>):

    bles = LightScanner(<span class="hljs-string">'Nodemcu'</span>)

    mclient.subscribe(MQTT_CONTROL_TOPIC)
    mclient.on_message = mqtt_callback

    mclient.loop_start()

    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:
        <span class="hljs-keyword">try</span>:
            <span class="hljs-comment">#调用bles成员函数读取扫描到的光照强度数值</span>
            data = bles._get_data()
        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:
            <span class="hljs-built_in">print</span>(<span class="hljs-string">"BLE SCAN error:"</span>, e)
            <span class="hljs-keyword">continue</span>
		<span class="hljs-comment">#上传扫描到的光照强度数值</span>
        mqtt_report(mclient, data)
        
        <span class="hljs-keyword">await</span> time.sleep(<span class="hljs-number">0.3</span>)

<span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():
    mqtt_client = <span class="hljs-literal">None</span>
    <span class="hljs-comment"># MQTT connection</span>
    <span class="hljs-keyword">try</span>:
        mqtt_client = <span class="hljs-keyword">await</span> asyncio.wait_for(mqtt_connect(), <span class="hljs-number">20</span>)
    <span class="hljs-keyword">except</span> asyncio.TimeoutError:
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"mqtt connected timeout!"</span>)

    <span class="hljs-keyword">if</span> mqtt_client <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
        <span class="hljs-keyword">await</span> asyncio.gather(light_loop(mqtt_client))

asyncio.get_event_loop().run_until_complete(main())
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>梦</title>
    <url>/blog/2022/12f1aaadb6.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8cdf9e0a8c33ad6b9f3b40214d9d8fdf3fed8b016ceff1989ca4446b1f429335">d33bff33cf6a3d4d00d3ad92404d4389569d4d3751395041367bc5d5ad743a7fc5fb8f2a909f9d7c7e4fbc22c430f1a290355195a7fda9a641eb2b8d184705a860827dc19f28d0b9164b0201aa48d269</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>添加公式渲染功能</title>
    <url>/blog/2022/06c538da4.html</url>
    <content><![CDATA[<blockquote>
<p>主题添加公式渲染功能</p>
</blockquote>
<p>本文以 Hexo 主题 <a href="https://github.com/zheli-design/hexo-theme-one-paper">one-paper</a> (其他博客理论上都可以使用这种方法配置)为例，介绍如何添加对数学公式的显示支持。</p>
<h2 id="配置过程"><a class="markdownIt-Anchor" href="#配置过程"></a> 配置过程</h2>
<h3 id="安装渲染插件"><a class="markdownIt-Anchor" href="#安装渲染插件"></a> 安装渲染插件</h3>
<p>首先执行以下命令卸载掉hexo默认的渲染插件<code>hexo-renderer-marked</code> ，替换为<code>hexo-renderer-markdown-it-plus</code> 。</p>
<pre class="highlight"><code class="C++">npm un hexo-renderer-marked --save
npm i hexo-renderer-markdown-it-plus --save
</code></pre>
<h3 id="修改文章模板"><a class="markdownIt-Anchor" href="#修改文章模板"></a> 修改文章模板</h3>
<p>修改<code>hexo_root/scaffolds/post.md</code> 文件，在末尾添加一行 <code>math: true</code>。</p>
<p>之后当你执行<code>hexo new title</code>生成一篇新的文章时，文章内部默认配置如下所示：<br>
<img src="https://s2.loli.net/2022/06/16/qt5NvLhundmMoce.png" alt="20220616213508"></p>
<p>这样公式渲染默认是开启的，我们直接编写文章正文即可，如果想关闭数学公式支持，将<code>true</code>修改为<code>false</code>即可。</p>
<h3 id="修改主题布局模板"><a class="markdownIt-Anchor" href="#修改主题布局模板"></a> 修改主题布局模板</h3>
<p>有以下两种选择：</p>
<ol>
<li>
<p>阅读全文后启用支持<br>
编辑<code>hexo_root/themes/landscape/layout/_partial/article.ejs</code> ，在 <code>&lt;/article&gt;</code> (即article标签结束前)前加入一行代码，添加后效果如下：</p>
<pre class="highlight"><code class="C++">&lt;% <span class="hljs-keyword">if</span> (!index &amp;&amp; post.math){ %&gt;
    &lt;script&gt;
    var assetsString = <span class="hljs-string">'&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.10.0/katex.min.css" rel="stylesheet" type="text/css"&gt;'</span>
    var pHead = document.<span class="hljs-built_in">getElementsByTagName</span>(<span class="hljs-string">'head'</span>)[<span class="hljs-number">0</span>];
    pHead.innerHTML = pHead.innerHTML + assetsString;
    &lt;/script&gt;
&lt;% } %&gt;
&lt;/article&gt;
</code></pre>
<p>故需将 <code>&lt;!--more--&gt;</code> 放在公式之前。</p>
</li>
<li>
<p>直接全部启用支持(推荐使用)<br>
编辑 <code>hexo_root/themes/landscape/layout/_partial/head.ejs</code> ，在 <code>&lt;/head&gt;</code> (即head标签结束前)前加入一行代码，添加后效果如下：</p>
<pre class="highlight"><code class="C++">&lt;link href=<span class="hljs-string">"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.10.0/katex.min.css"</span> rel=<span class="hljs-string">"stylesheet"</span> type=<span class="hljs-string">"text/css"</span>&gt;
&lt;/head&gt;
</code></pre>
</li>
</ol>
<h3 id="编辑配置文件"><a class="markdownIt-Anchor" href="#编辑配置文件"></a> 编辑配置文件</h3>
<p>在<code>根目录下</code>配置站点配置文件 <code>_config.yml</code>，在最后面加入如下配置：</p>
<pre class="highlight"><code class="C++">markdown_it_plus:
  highlight: <span class="hljs-literal">true</span>
  html: <span class="hljs-literal">true</span>
  xhtmlOut: <span class="hljs-literal">true</span>
  breaks: <span class="hljs-literal">true</span>
  langPrefix:
  linkify: <span class="hljs-literal">true</span>
  typographer:
  quotes: “”‘’
  pre_class: highlight
</code></pre>
<h2 id="测试效果"><a class="markdownIt-Anchor" href="#测试效果"></a> 测试效果</h2>
<h3 id="整行"><a class="markdownIt-Anchor" href="#整行"></a> 整行</h3>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>sin<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> + cos<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> = 1<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mi>θ</mi><mo>+</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mn>2</mn></msup><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sin^2\theta + cos^2\theta = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<h3 id="行内"><a class="markdownIt-Anchor" href="#行内"></a> 行内</h3>
<pre class="highlight"><code class="Latex">这是一个行内公式： <span class="hljs-built_in">$</span>sin<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> + cos<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\theta</span> = 1<span class="hljs-built_in">$</span>
</code></pre>
<p>效果：<br>
这是一个行内公式： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mi>θ</mi><mo>+</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mn>2</mn></msup><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sin^2\theta + cos^2\theta = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<h3 id="数学公式测试"><a class="markdownIt-Anchor" href="#数学公式测试"></a> 数学公式测试</h3>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
<span class="hljs-keyword">\begin</span>{aligned}
f<span class="hljs-built_in">_</span>Y(y) <span class="hljs-built_in">&amp;</span> = f<span class="hljs-built_in">_</span>X[h(y)]|h'(y)| <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = f<span class="hljs-built_in">_</span>X[h(y)]h'(y) <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{-<span class="hljs-keyword">\frac</span>{x}{<span class="hljs-keyword">\theta</span>}}[<span class="hljs-keyword">\frac</span>{dx}{dy}(-<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{ln(1-y)})] <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{-<span class="hljs-keyword">\frac</span>{-<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{ln(1-y)}}{<span class="hljs-keyword">\theta</span>}}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\theta</span>}e<span class="hljs-built_in">^</span>{ln(1-y)}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = <span class="hljs-keyword">\frac</span>{1-y}{<span class="hljs-keyword">\theta</span>}<span class="hljs-keyword">\frac</span>{<span class="hljs-keyword">\theta</span>}{1-y} <span class="hljs-keyword">\\</span>[2ex]
<span class="hljs-built_in">&amp;</span> = 1
<span class="hljs-keyword">\end</span>{aligned}
<span class="hljs-keyword">\tag</span>{1}
<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>f</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">[</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">[</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mi>x</mi><mi>θ</mi></mfrac></mrow></msup><mo stretchy="false">[</mo><mfrac><mrow><mi>d</mi><mi>x</mi></mrow><mrow><mi>d</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>θ</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo>−</mo><mfrac><mi>θ</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><mi>θ</mi></mfrac></mrow></msup><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>θ</mi></mfrac><msup><mi>e</mi><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow><mi>θ</mi></mfrac><mfrac><mi>θ</mi><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
f_Y(y) &amp; = f_X[h(y)]|h'(y)| \\[2ex]
&amp; = f_X[h(y)]h'(y) \\[2ex]
&amp; = \frac{1}{\theta}e^{-\frac{x}{\theta}}[\frac{dx}{dy}(-\frac{\theta}{ln(1-y)})] \\[2ex]
&amp; = \frac{1}{\theta}e^{-\frac{-\frac{\theta}{ln(1-y)}}{\theta}}\frac{\theta}{1-y} \\[2ex]
&amp; = \frac{1}{\theta}e^{ln(1-y)}\frac{\theta}{1-y} \\[2ex]
&amp; = \frac{1-y}{\theta}\frac{\theta}{1-y} \\[2ex]
&amp; = 1
\end{aligned}
\tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:18.01824em;vertical-align:-8.75912em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.25912em;"><span style="top:-12.01104em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-9.64904em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-6.755599999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-3.641679999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:-0.7482399999999989em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:2.145200000000001em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span><span style="top:4.507199999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.75912em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.25912em;"><span style="top:-12.01104em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-9.64904em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-6.755599999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89708em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span><span style="top:-3.641679999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.59192em;"><span style="top:-3.59192em;margin-right:0.05em;"><span class="pstrut" style="height:3.1789199999999997em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6841714285714287em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.911714285714286em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.08144em;"><span style="top:-2.4265em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8235em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.7482399999999989em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:2.145200000000001em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:4.507199999999999em;"><span class="pstrut" style="height:3.59192em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.75912em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:18.01824em;vertical-align:-8.75912em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
<span class="hljs-keyword">\frac</span>{1}{<span class="hljs-keyword">\sigma</span>} 
<span class="hljs-keyword">\tag</span>{this is a test}
<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mfrac><mn>1</mn><mi>σ</mi></mfrac></mtd><mtd width="50%"></mtd><mtd><mtext>(this&nbsp;is&nbsp;a&nbsp;test)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\frac{1}{\sigma} 
\tag{this is a test}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">t</span><span class="mord">h</span><span class="mord">i</span><span class="mord">s</span><span class="mord">&nbsp;</span><span class="mord">i</span><span class="mord">s</span><span class="mord">&nbsp;</span><span class="mord">a</span><span class="mord">&nbsp;</span><span class="mord">t</span><span class="mord">e</span><span class="mord">s</span><span class="mord">t</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h3 id="latex语法测试"><a class="markdownIt-Anchor" href="#latex语法测试"></a> Latex语法测试</h3>
<pre class="highlight"><code class="Latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><span class="hljs-keyword">\underline</span>{给这条语句加一个下划线}<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>
</code></pre>
<p>效果：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder accentunder="true"><mtext>给这条语句加一个下划线</mtext><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{给这条语句加一个下划线}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:-0.20000000000000007em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">语</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">划</span><span class="mord cjk_fallback">线</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20000000000000007em;"><span></span></span></span></span></span></span></span></span></span></p>
<blockquote>
<p>参考：<a href="https://blog.chaos.run/dreams/hexo-enable-math-support/index.html">Hexo 博客启用对数学公式的支持</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>物联网安全复习总结</title>
    <url>/blog/2022/018a8f3fb6.html</url>
    <content><![CDATA[<blockquote>
  <p>
    <font size="4" color="#7E0C6E">
      复习时随手记录，并不完整
    </font>
  </p>
</blockquote>
<h1 id="物联网安全"><a class="markdownIt-Anchor" href="#物联网安全"></a> 物联网安全</h1>
<p>根据国际电信联盟的定义, 物联网( internet of things, IOT) 主要解决:</p>
<ul>
<li>物品到物品( thing to thing,T2T)</li>
<li>人到物品( human to thing, H2T)</li>
<li>人到人( human to human, H2H)之间的互联</li>
</ul>
<h2 id="第1章-物联网安全需求分析"><a class="markdownIt-Anchor" href="#第1章-物联网安全需求分析"></a> 第1章 物联网安全需求分析</h2>
<p>与其他传统网络相比, 物联网感知节点大都部署在无人监控的场景中, 具有<strong>能力脆弱、资源受限</strong>等特点,这些都导致很难直接将传统计算机网络的安全算法和协议应用于物联网</p>
<p>从物联网的功能上来说，应该具备四个特征：</p>
<ul>
<li>一是<strong>全面感知能力</strong>，可以利用RFID、传感器、二维条形码等获取被控/被测物体的信息;</li>
<li>二是<strong>数据信息的可靠传递</strong>，可以通过各种电信网络与互联网的融合，将物体的信息实时准确地传递出去;</li>
<li>三是<strong>可以智能处理</strong>，利用现代控制技术提供的智能计算方法，对大量数据和信息进行分析和处理，对物体实施智能化的控制。</li>
<li>四是可以根据各个行业、各种业务的具体特点形成各种单独的业务应用，或者整个行业及系统的建成应用解决方案</li>
</ul>
<p><strong>物联网结构和层次：</strong></p>
<ul>
<li>感知识别层：重点考虑数据隐私的保护；
<ul>
<li>传感器，RFID，二维条形码…</li>
</ul>
</li>
<li>网络构建层：重点考虑网络传输安全；
<ul>
<li>互联网</li>
<li>无线宽带网</li>
<li>无线低速网</li>
<li>移动通信网</li>
</ul>
</li>
<li>管理服务层：重点考虑信息安全；
<ul>
<li>管理服务层位于感知识别和网络构建层之上，综合应用层之下，人们通常把物联网应用冠以“智能”的名称，如智能电网、智能交通、智能物流等，其中的智慧就来自这一层</li>
<li>数据库：海量性，多态性，关联性，语义性</li>
<li>海量信息存储：网络附加存储（NAS ，Network Attached Storage）和专用存储区域网络（SAN ,Storage Area Network）</li>
<li>数据中心</li>
<li>搜索引擎</li>
<li>数据挖掘技术</li>
</ul>
</li>
<li>综合应用层：重点考虑应用系统安全；
<ul>
<li>智能物流</li>
<li>智能交通</li>
<li>绿色建筑</li>
<li>智能电网</li>
<li>环境监测</li>
</ul>
</li>
</ul>
<p>与互联网相比, 物联网主要实现人与物、物与物之间的通信, 通信的对象扩大到了物品。</p>
<p>感知层的安全需求可以总结为如下几点：</p>
<ol>
<li>机密性：多数网络内部不需要认证和密钥管理，如统一部署的共享一个密钥的传感网。</li>
<li>密钥协商：部分内部节点进行数据传输前需要预先协商会话密钥。</li>
<li>节点认证：个别网络（特别当数据共享时）需要节点认证，确保非法节点不能接入。</li>
<li>信誉评估：一些重要网络需要对可能被敌手控制的节点行为进行评估，以降低敌手入侵后的危害（某种程度上相当于入侵检测）。</li>
<li>安全路由：几乎所有网络内部都需要不同的安全路由技术。</li>
</ol>
<p>物联网网络构建层将会主要遇到下列安全挑战：</p>
<ol>
<li>拒绝服务攻击（DOS）攻击、分布式拒绝服务攻击（DDOS）攻击；</li>
<li>假冒攻击、中间人攻击等；</li>
<li>跨异构网络的网络攻击。</li>
</ol>
<p>网络构建层的安全机制可分为端到端机密性和节点到节点机密性。</p>
<p>对于端到端机密性，需要建立如下安全机制：</p>
<ul>
<li>端到端认证机制、</li>
<li>端到端密钥协商机制、</li>
<li>密钥管理机制</li>
<li>机密性算法选取机制等。</li>
</ul>
<p>管理服务层的安全挑战包括如下几个方面：</p>
<ol>
<li>来自于超大量终端的海量数据的识别和处理；</li>
<li>智能变为低能；</li>
<li>自动变为失控（可控性是信息安全的重要指标之一）；</li>
<li>灾难控制和恢复；</li>
<li>非法人为干预（内部攻击）；</li>
<li>设备（特别是移动设备）的丢失</li>
</ol>
<p>为了满足物联网智能管理服务层的基本安全需求，需要如下的安全机制。</p>
<ol>
<li>可靠的认证机制和密钥管理方案；</li>
<li>高强度数据机密性和完整性服务；</li>
<li>可靠的密钥管理机制，包括PKI和对称密钥的有机结合机制；</li>
<li>可靠的高智能处理手段；</li>
<li>入侵检测和病毒检测；</li>
<li>恶意指令分析和预防，访问控制及灾难恢复机制；</li>
<li>保密日志跟踪和行为分析，恶意行为模型的建立；</li>
<li>密文查询、秘密数据挖掘、安全多方计算、安全云计算技术等；</li>
<li>移动设备文件（包括秘密文件）的可备份和恢复；</li>
<li>移动设备识别、定位和追踪机制</li>
</ol>
<p>应用层的安全挑战和安全需求主要来自于：</p>
<ol>
<li>如何根据不同访问权限对同一数据库内容进行筛选；</li>
<li>如何提供用户隐私信息保护，同时又能正确认证；</li>
<li>如何解决信息泄露追踪问题；</li>
<li>如何进行计算机取证；</li>
<li>如何销毁计算机数据；</li>
<li>如何保护电子产品和软件的知识产权。</li>
</ol>
<p>基于物联网综合应用层的安全挑战和安全需求，需要如下的安全机制：</p>
<ol>
<li>有效的数据库访问控制和内容筛选机制；</li>
<li>不同场景的隐私信息保护技术；</li>
<li>叛逆追踪和其他信息泄露追踪机制；</li>
<li>有效的计算机取证技术；</li>
<li>安全的计算机数据销毁技术；</li>
<li>安全的电子产品和软件的知识产权保护技术</li>
</ol>
<h2 id="第2章-物联网安全技术框架"><a class="markdownIt-Anchor" href="#第2章-物联网安全技术框架"></a> 第2章 物联网安全技术框架</h2>
<p>现代经常涉及的信息安全技术主要有数据加密、身份认证、访问控制和口令、数字证书、电子签证机关（CA）、数字签名等常用信息安全技术</p>
<h3 id="安全技术简介"><a class="markdownIt-Anchor" href="#安全技术简介"></a> 安全技术简介</h3>
<ol>
<li>数据加密</li>
<li>身份验证</li>
<li>访问控制
<ol>
<li>自由访问控制：用户有权对自身所创建的访问对象进行访问</li>
<li>强制访问控制，按照系统规则对用户所创建对象进行控制，即便是创建者，也可能无权访问对象</li>
</ol>
</li>
<li>口令（密码）：实际上，弱口令。缺省口令和没有口令的账号均应该从数据库中删除
<ol>
<li>网络数据流窃听口令，如果明文传输，则可能被窃取</li>
<li>认证消息截取/重放，用加密口令实现系统登录</li>
<li>字典攻击</li>
<li>穷举攻击，字典攻击的加强版，使用字符串的全集作为字典</li>
<li>窥探，窥探合法用户输入口令过程</li>
<li>社交工程</li>
<li>垃圾搜索</li>
</ol>
</li>
<li>数字证书：一个数字文件，一般由四部分构成
<ol>
<li>持有人的姓名，地址等信息</li>
<li>公开密钥</li>
<li>证书序号，有效期限</li>
<li>发证单位的数字签名</li>
</ol>
</li>
<li>数字签名
<ol>
<li>本身是一种解密过程，而且是非对称密钥，类似于与校验和</li>
<li>使用用途，区别身份，鉴权，保证完整性，不可抵赖（即承认发送来源）</li>
</ol>
</li>
</ol>
<p>数据加密</p>
<ul>
<li>分类
<ul>
<li>私用密钥（对称密钥）
<ul>
<li>信息的发送方和接收方使用同一个密钥进行加密和解密</li>
<li>适合对大数据量进行加密，密钥管理困难</li>
</ul>
</li>
<li>公共密钥（非对称密钥）
<ul>
<li>信息发送者用公开密钥去加密，而信息接收者则用私用密钥去解密。公钥机制灵活，但加密和解密速度却比对称密钥加密慢得多</li>
<li>能够完成发送方的身份认证和接收方无法伪造报文的功能</li>
</ul>
</li>
<li>通过公钥推算出私钥的算法必须不可能实现</li>
</ul>
</li>
</ul>
<h3 id="物联网中的加密机制"><a class="markdownIt-Anchor" href="#物联网中的加密机制"></a> 物联网中的加密机制</h3>
<p>传统的IP网络加密：需要在感知层运行加密/解密算法，需要存储开销，CPU开销，而且需要能量</p>
<ol>
<li>节点认证机制：PKI（Public Key Infrastructure ）即“公钥基础设施”，是一种遵循既定标准的密钥管理平台,它能够为所有网络应用提供加密和数字签名等密码服务及所必需的密钥和证书管理体系。简单来说，PKI就是利用公钥理论和技术建立的提供安全服务的基础设施</li>
<li>访问控制，由给人授权访问转变为给机器授权访问</li>
<li>态势分析及其他：评估现在以及未来一段时间内的网络运行状态</li>
</ol>
<p>实现统一的密钥管理系统可以采用两种方式:</p>
<ul>
<li>一是以互联网为中心的集中式管理方式</li>
<li>二是以各自网络为中心的分布式管理方式</li>
</ul>
<p>其安全需求体现在</p>
<ol>
<li>密钥生成或更新算法的安全性</li>
<li>前向私密性</li>
<li>后向私密性或可扩展性</li>
<li>抗同谋攻击</li>
<li>源端认证和新鲜性</li>
</ol>
<h2 id="第3章-密码与身份认证技术"><a class="markdownIt-Anchor" href="#第3章-密码与身份认证技术"></a> 第3章 密码与身份认证技术</h2>
<h3 id="密码学基本概念"><a class="markdownIt-Anchor" href="#密码学基本概念"></a> 密码学基本概念</h3>
<p>密码学是主要研究通信安全和保密的学科，他包括两个分支：密码编码学和密码分析学</p>
<ul>
<li>密码编码学主要研究对信息进行变换，以保护信息在传递过程中不被敌方窃取、解读和利用的方法</li>
<li>密码分析学则于密码编码学相反，它主要研究如何分析和破译密码</li>
</ul>
<p>使用密码学可以达到以下目的：</p>
<ol>
<li>保密性：防止用户的标识或数据被读取。</li>
<li>数据完整性：防止数据被更改。</li>
<li>身份验证：确保数据发自特定的一方</li>
</ol>
<p>加密算法应在公开时不影响明文和密钥的安全</p>
<p>从密码学发展历程来看，可分为：</p>
<ul>
<li>古典密码（以字符为基本加密单元的密码）
<ul>
<li>代替密码
<ul>
<li>单表替换密码
<ul>
<li>凯撒密码：某字母用右边第k个字母表示，Z后面是A</li>
<li>密钥短语密码</li>
</ul>
</li>
<li>同音替换密码</li>
<li>多字母 组替换 密码</li>
<li>多表替换密码</li>
</ul>
</li>
<li>置换密码</li>
</ul>
</li>
<li>现代密码（以信息块为基本加密单元的密码）
<ul>
<li>分组密码</li>
<li>流密码</li>
</ul>
</li>
</ul>
<p>密钥加密系统</p>
<ul>
<li>对称密码系统的安全性依赖于以下两个因素。
<ul>
<li>第一，加密算法必须是足够强的，仅仅基于密文本身去解密信息在实践上是不可能的；</li>
<li>第二，加密方法的安全性依赖于密钥的秘密性，而不是算法的秘密性，因此我们没有必要确保算法的秘密性，而需要保证密钥的秘密性</li>
<li>对称密码体制的特点是：对称加密算法使用起来简单快捷，密钥较短，且破译困难。
<ol>
<li>密钥难于安全传送。</li>
<li>密钥量太大，难于进行管理。</li>
<li>无法满足互不相识的人进行私人谈话时保密要求。</li>
<li>难于解决数字签名验证的问题。</li>
</ol>
</li>
</ul>
</li>
<li>相对于对称密钥密码体系，非对称密钥加密系统最大的特点在于加密和解密使用不同的密钥
<ul>
<li>非对称密钥技术的优点是：易于实现，使用灵活，密钥较少，可以满足互不相识的人之间进行私人谈话时的保密性要求，可以完成数字签名和数字鉴别。</li>
<li>弱点在于：要取得较好的加密效果和强度，必须使用较长的密钥。</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2022/01/05/yjtSYm7vFAwiCfh.png" alt="image-20220105204726516"></p>
<h3 id="现代加密算法"><a class="markdownIt-Anchor" href="#现代加密算法"></a> 现代加密算法</h3>
<h4 id="对称加密算法"><a class="markdownIt-Anchor" href="#对称加密算法"></a> 对称加密算法</h4>
<p>在对称加密算法中，只有一个密钥用来加密和解密信息，即加密和解密采用相同的密钥。常用的算法包括：</p>
<ul>
<li>DES（Data Encryption Standard）：
<ul>
<li>数据加密标准，速度较快，适用于加密大量数据的场合。</li>
</ul>
</li>
<li>3DES（Triple DES）：
<ul>
<li>是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。</li>
</ul>
</li>
<li>AES（Advanced Encryption Standard）：
<ul>
<li>AES高级加密标准，是下一代的加密算法标准，速度快，安全级别高</li>
</ul>
</li>
</ul>
<h4 id="非对称加密算法"><a class="markdownIt-Anchor" href="#非对称加密算法"></a> 非对称加密算法</h4>
<ul>
<li>RSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的；
<ul>
<li>RSA是第一个既能用于数据加密也能用于数字签名的算法</li>
</ul>
</li>
<li>DSA（Digital Signature Algorithm）：
<ul>
<li>数字签名算法，是一种标准的 DSS（数字签名标准）；</li>
<li>除了加密外，公开密钥密码学最显著的成就是实现了数字签名。</li>
</ul>
</li>
</ul>
<p>加密算法的选择</p>
<p>我们应该根据自己的使用特点来确定：</p>
<ul>
<li>由于非对称加密算法的运行速度比对称加密算法的速度慢很多，当我们需要加密大量的数据时，建议采用对称加密算法，提高加解密速度。</li>
<li><strong>对称加密算法不能实现签名</strong>，因此签名只能非对称算法。</li>
<li>由于对称加密算法的密钥管理是一个复杂的过程，密钥的管理直接决定着他的安全性，因此当数据量很小时，我们可以考虑采用非对称加密算法。</li>
</ul>
<p>在实际的操作过程中，我们通常采用的方式是：</p>
<ul>
<li>采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。</li>
</ul>
<h3 id="认证与身份证明"><a class="markdownIt-Anchor" href="#认证与身份证明"></a> 认证与身份证明</h3>
<p>身份证明系统的组成</p>
<ol>
<li>示证者P(Prover)，出示证件的人，又称作申请者(Claimant)，提出某种要求；</li>
<li>验证者V(Verifier)，检验示证者提出的证件的正确性和合法性，决定是否满足其要求；</li>
<li>攻击者，可以窃听和伪装示证者骗取验证者的信任。</li>
<li>可信赖者，参与调解纠纷。必要时的第四方</li>
</ol>
<h3 id="物联网认证与访问控制"><a class="markdownIt-Anchor" href="#物联网认证与访问控制"></a> 物联网认证与访问控制</h3>
<p>目前常用的身份识别技术可以分为两大类</p>
<ul>
<li>一类是基于密码技术的各种电子ID身份鉴别技术；</li>
<li>另一类是基于生物特征识别的识别技术</li>
</ul>
<p>基于零知识证明的识别技术</p>
<ul>
<li>零知识洞穴</li>
</ul>
<h2 id="第4章-rfid系统安全与隐私"><a class="markdownIt-Anchor" href="#第4章-rfid系统安全与隐私"></a> 第4章 RFID系统安全与隐私</h2>
<p>RFID系统一般由3大部分构成：</p>
<ul>
<li>标签
<ul>
<li>标签放置在要识别的物体上，携带目标识别数据，是RFID系统真正的数据载体，由耦合元件以及微电子芯片(包含调制器、编码发生器、时钟及存储器)组成</li>
</ul>
</li>
<li>读写器
<ul>
<li>用于读或读/写标签数据的装置，由射频模块(发送器和接收器)、控制单元、与标签连接的藕合单元组成</li>
</ul>
</li>
<li>后台数据库
<ul>
<li>后台服务器包含数据库处理系统，存储和管理标签相关信息，如标签标识、阅读器定位、读取时间等</li>
</ul>
</li>
</ul>
<p>工作原理</p>
<ul>
<li>RFID系统的基本工作原理是：阅读器与标签之间通过无线信号建立双方通信的通道，阅读器通过天线发出电磁信号，电磁信号携带了阅读器向标签的查询指令。</li>
<li>当标签处于阅读器工作范围时，标签将从电磁信号中获得指令数据和能量，并根据指令将标签标识和数据以电磁信号的形式发送给阅读器，或根据阅读器的指令改写存储在RFID标签中的数据</li>
<li>阅读器可接收RFID标签发送的数据或向标签发送数据，并能通过标准接口与后台服务器通信网络进行对接，实现数据的通信传输。</li>
<li>根据标签能量获取方式，RFID系统工作方式可分为：近距离的电感耦合方式和远距离的电磁耦合方式</li>
</ul>
<p>RFID的安全和攻击模式</p>
<ul>
<li>安全
<ol>
<li>信息及隐私泄露</li>
<li>RFID的隐私威胁
<ol>
<li>隐私信息泄露</li>
<li>跟踪</li>
<li>效率和隐私保护的矛盾</li>
</ol>
</li>
</ol>
</li>
<li>攻击模式
<ol>
<li>窃听</li>
<li>中间人攻击</li>
<li>欺骗、重放、克隆
<ol>
<li>欺骗(spoofing)：基于已掌握的标签数据通过阅读器</li>
<li>重放(replaying)：将标签的回复记录并回放</li>
<li>克隆(cloning)：形成原来标签的一个副本</li>
</ol>
</li>
<li>拒绝服务攻击(Denial-of-service attack, DoS)拒绝服务攻击是通过不完整的交互请求消耗系统资源，使系统不能正常工作</li>
<li>物理破解(corrupt)物理破解采用如下一些步骤对RFID射频系统进行破坏</li>
<li>篡改信息(modification)进行非授权的修改或擦除标签数据，从而达到篡改信息的目的。</li>
<li>RFID病毒(virus, malware)包括EPC标签在内的RFID标签可以被用来携带病毒，并能攻击电脑系统。</li>
<li>其他隐患：RFID的安全和隐私问题涉及到的其他隐患还包括：电子破坏、屏蔽干扰和拆除等。</li>
</ol>
</li>
</ul>
<p>RFID系统根据分层模型可划分为3层：应用层、通信层和物理层，ISO／IEC 18000标准定义了读写器与标签之间的双向通信协议，其基本的通信模型如下图。</p>
<p><img src="https://s2.loli.net/2022/01/05/6SzTRxg5KlDH2cC.png" alt="image-20220105214519785"></p>
<p>安全RFID系统的基本特征</p>
<ol>
<li>机密性</li>
<li>完整性</li>
<li>可用性</li>
<li>真实性</li>
<li>隐私性</li>
</ol>
<h2 id="第5章-wsn无线传感器网络安全"><a class="markdownIt-Anchor" href="#第5章-wsn无线传感器网络安全"></a> 第5章 WSN无线传感器网络安全</h2>
<p>无线传感器网络与安全相关的特点</p>
<ol>
<li>资源受限，通信环境恶劣。</li>
<li>部署区域的安全无法保证，节点易失效。</li>
<li>网络无基础框架。</li>
<li>部署前地理位置具有不确定性。</li>
</ol>
]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>物联网安全</tag>
        <tag>复习</tag>
      </tags>
  </entry>
  <entry>
    <title>盲区</title>
    <url>/blog/2022/11b8858517.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ab42d57062e1bb6a69bea4523ec831a07254bacaf92df1b8f0b2b490bdfaaa0d"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>物联网通信技术总结</title>
    <url>/blog/2022/084e33805f.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a45aaef078f921af088c1f6cf4e37a1887c9c3b9d54d83adb893cb9f840ef250"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>矩阵的等价、相似、合同之间的关系</title>
    <url>/blog/2022/082689765e.html</url>
    <content><![CDATA[<h2 id="矩阵等价"><a class="markdownIt-Anchor" href="#矩阵等价"></a> 矩阵等价</h2>
<ul>
<li>定义：对同型矩阵A、B，存在可逆阵P和Q，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mi>P</mi><mi>A</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">B=PAQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mord mathnormal">Q</span></span></span></span></li>
<li>充要条件：A和B的秩相等</li>
</ul>
<h2 id="矩阵合同"><a class="markdownIt-Anchor" href="#矩阵合同"></a> 矩阵合同</h2>
<ul>
<li>定义：对同型方阵A、B，存在可逆阵P使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mi>T</mi></msup><mi>A</mi><mi>P</mi><mo>=</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">P^{T}AP = B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>,记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>≃</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A ≃ B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li>
</ul>
<h2 id="矩阵相似"><a class="markdownIt-Anchor" href="#矩阵相似"></a> 矩阵相似</h2>
<ul>
<li>比等价严苛</li>
<li>定义：对同型方阵A、B，存在可逆阵P，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>A</mi><mi>P</mi><mo>=</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">P^{-1}AP = B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>,记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A ∼ B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li>
</ul>
<h2 id="三者关系"><a class="markdownIt-Anchor" href="#三者关系"></a> 三者关系</h2>
<p>等价（只有秩相同）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 合同（秩和正负惯性指数相同）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 相似（秩，正负惯性指数，特征值均相同），矩阵亲密关系的一步步深化。</p>
<ul>
<li>
<p>相似矩阵必为等价矩阵，但等价矩阵未必为相似矩阵</p>
</li>
<li>
<p>PQ = E的等价矩阵是相似矩阵</p>
</li>
<li>
<p>合同矩阵必为等价矩阵，等价矩阵未必为合同矩阵</p>
<ul>
<li>正惯性指数相同的等价矩阵是合同矩阵</li>
</ul>
</li>
<li>
<p>合同矩阵未必是相似矩阵</p>
</li>
<li>
<p>相似矩阵未必合同</p>
</li>
<li>
<p>正交相似矩阵必为合同矩阵，正交合同矩阵必为相似矩阵</p>
</li>
<li>
<p>如果A与B都是n阶实对称矩阵，且有相同的特征根．则A与B既相似又合同</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>编译系统原理复习提纲</title>
    <url>/blog/2022/0178868943.html</url>
    <content><![CDATA[<h1 id="编译系统原理"><a class="markdownIt-Anchor" href="#编译系统原理"></a> 编译系统原理</h1>
<p>[toc]</p>
<p><strong>内容过多，未完全整理</strong></p>
<h2 id="题型设计"><a class="markdownIt-Anchor" href="#题型设计"></a> 题型设计</h2>
<ul>
<li>单项选择（12*2）
<ul>
<li>编译阶段所做事情考察</li>
<li>编译器和解释器的区分</li>
<li>ϵ是空符号串</li>
<li>正则表达式本质上表述的是符号串集合</li>
<li>NFA，DFA和CFG</li>
</ul>
</li>
<li>设计题（6*4）
<ul>
<li>正则表达式表示的含义</li>
<li>设计正则表达式</li>
<li>设计上下文无关文法</li>
<li><img src="https://s2.loli.net/2022/01/02/qnjOP91pUJG8AND.png" alt="image-20220102183721573"></li>
</ul>
</li>
<li>解答题
<ul>
<li>Thompson构造法</li>
<li>子集构造法</li>
<li>终结符，非终结符，开始符号</li>
<li>消除左递归</li>
<li>构造预测分析表</li>
<li>流图</li>
<li>三地址码</li>
<li>优化</li>
</ul>
</li>
</ul>
<h2 id="真题"><a class="markdownIt-Anchor" href="#真题"></a> 真题</h2>
<p>C++编译器检查数组下标越界是在_____阶段?<br>
ϵ为空符号串</p>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>广义的编译器：浏览器</p>
<p><img src="https://s2.loli.net/2022/01/02/3Anf8JchwoUvt17.png" alt="image-20220102012213479"></p>
<h3 id="分析-综合模型"><a class="markdownIt-Anchor" href="#分析-综合模型"></a> 分析-综合模型</h3>
<p>两个基本部分</p>
<ul>
<li>分析：将源程序分解为基本组成部分，生成中间表示形式
<ul>
<li>中间表示形式：树</li>
<li>节点-操作</li>
<li>孩子-参数</li>
</ul>
</li>
<li>综合：从中间表示形式构建目标程序</li>
</ul>
<p>源程序分析的三个阶段</p>
<ul>
<li>线性分析/词法分析/扫描
<ul>
<li>由左至右扫描源程序字符序列➔token，单词（记号）——具有组合意义的字符序列</li>
<li>忽略空格、回车等，将字符组合为单词</li>
</ul>
</li>
<li>层次分析/语法分析
<ul>
<li>单词序列➔有意义的集合，语法单位</li>
<li>将词法分析产生的单词组合为语法短语</li>
<li>语法分析树：内部节点-运算符，叶节点-运算对象</li>
</ul>
</li>
<li>语义分析
<ul>
<li>检查程序各部分是否正确符合语义</li>
</ul>
</li>
</ul>
<p>语法结构的递归定义</p>
<ul>
<li>表达式</li>
</ul>
<ol>
<li>标识符是表达式</li>
<li>数是表达式</li>
<li>若expression1和expression2是表达式，则expression1 + expression2 、expression1 * expression2、( expression1 )也是表达式</li>
</ol>
<ul>
<li>1、2——基本规则，3——递归定义</li>
</ul>
<p>文法（grammar）</p>
<ul>
<li>语句（statement）定义</li>
</ul>
<ol>
<li>若identifier1是一个标识符，expression2是一个表达式，则identifier1 := expression2是一个语句</li>
<li>若expression1是一个表达式，statement2是一个语句，则while ( expression1 ) do statement2和if ( expression1 ) then statement2也是语句</li>
</ol>
<ul>
<li>文法：处理token相互关系和结构的一组规则</li>
</ul>
<p>程序优化技术现状</p>
<ul>
<li>CPU上的过程内优化基本成熟</li>
<li>过程间优化能力仍然受限</li>
<li>面向GPU等新型体系结构的编译优化还有空间</li>
</ul>
<h2 id="一个简单的编译器"><a class="markdownIt-Anchor" href="#一个简单的编译器"></a> 一个简单的编译器</h2>
<p>字符流 → 词法分析器 → 单词流 → 语法制导翻译器 → 中间表示形式</p>
<p>语法制导翻译器：语法分析 + 中间代码生成</p>
<h3 id="语法定义"><a class="markdownIt-Anchor" href="#语法定义"></a> 语法定义</h3>
<p>上下文无关文法：描述语言的语法结构</p>
<p>组成：</p>
<ol>
<li>一组终结符号，单词，基本符号</li>
<li>一组非终结符号（语法变量），语法范畴，语法概念</li>
<li>一组产生式，定义语法范畴
<ul>
<li>产生式：A→α</li>
<li>A—一个非终结符，左部</li>
<li>α—终结符或/与非终结符串，右部</li>
</ul>
</li>
<li>一个特定的非终结符——开始符号，start symbol</li>
</ol>
<p>几个概念</p>
<ul>
<li>Σ：有穷字母表，元素——符号</li>
<li>符号串：Σ中符号构成的有穷序列</li>
<li>空字：不含任何符号的序列，ε</li>
<li>Σ*：符号串全体，包括空字</li>
<li>φ：空集{}，区分ε，{}，{ε}</li>
<li>Σ*的子集U、V的积（连接）{ αβ|α ∈ U 且 β ∈ V}</li>
<li>UV≠VU，(UV)W=U(VW)</li>
<li>V自身的n次积（连接）记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">V^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mn>0</mn></msup><mo>=</mo><mi>ε</mi></mrow><annotation encoding="application/x-tex">V^{0}={ε}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">ε</span></span></span></span></span></li>
<li>V的闭包（closure）
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>∗</mo><mo>=</mo><msup><mi>V</mi><mn>0</mn></msup><mo>⋃</mo><msup><mi>V</mi><mn>1</mn></msup><mo>⋃</mo><msup><mi>V</mi><mn>2</mn></msup><mo>⋃</mo><msup><mi>V</mi><mn>3</mn></msup><mo>⋃</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">V* = V^{0} ⋃ V^{1} ⋃ V^{2} ⋃ V^{3} ⋃ ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064118em;vertical-align:-0.25001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></li>
<li>每个符号串，都是V中符号串有限次连接</li>
</ul>
</li>
<li>正则闭包，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mo lspace="0em" rspace="0em">+</mo></msup><mo>=</mo><mi>V</mi><mi>V</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">V^{+}=VV*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∗</span></span></span></span></li>
</ul>
<p>四元式定义上下文无关文法</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>V</mi><mi>T</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>N</mi></msub><mo separator="true">,</mo><mi>S</mi><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(V_{T}, V_{N}, S, P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">V_{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：非空有限集，终结符号集合</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">V_{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：非空有限集，非终结符号集合</li>
<li>S：开始符号</li>
<li>P：产生式集合（有限集）
<ul>
<li>每个产生式形式A→α，其中</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub><mo separator="true">,</mo><mi>α</mi><mo>∈</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>T</mi></msub><mo>⋃</mo><msub><mi>V</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">A ∈ V_{N},α ∈(V_{T} ⋃ V_{N})*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∗</span></span></span></span></li>
<li>关于A的产生式S至少在某个产生式左部出现一次</li>
</ul>
</li>
</ul>
<p>符号约定</p>
<ul>
<li>
<p><em>expr → expr + digit</em></p>
</li>
<li>
<p><em>expr → expr – digit</em></p>
</li>
<li>
<p><em>expr → digit</em></p>
</li>
<li>
<p><em>digit</em> → 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9</p>
</li>
<li>
<p>数字、运算符、黑体字符串——终结符</p>
</li>
<li>
<p>斜体字符串——非终结符</p>
</li>
<li>
<p>左部相同可合并，‘|’——“或”的意思<em>expr → expr + digit |  expr - digit | digit</em>候选式</p>
</li>
</ul>
<p>推导</p>
<ul>
<li>单词串(string)：0个或多个单词构成的序列</li>
<li>推导(derive)
<ul>
<li>由<strong>开始符号作为推导起点</strong></li>
<li>用产生式<strong>右部</strong>替换左部非终结符</li>
<li>反复替换，最终得到单词串</li>
</ul>
</li>
<li>语言(language)
<ul>
<li>语法所定义的语言——可由开始符号推导出的所有单词串的集合</li>
</ul>
</li>
</ul>
<p>二义性：多个语法分析树生成相同的单词串——多个意义</p>
<h3 id="语法制导翻译"><a class="markdownIt-Anchor" href="#语法制导翻译"></a> 语法制导翻译</h3>
<ul>
<li>翻译：为生成代码，需保存语言结构的类型、代码位置、代码数量等</li>
<li>属性(attribute)：类型、串、内存位置等</li>
<li>语法制导翻译syntax-directed translation
<ul>
<li>语法制导定义syntax-directed definition</li>
<li>属性与语法结构相关联➔指明翻译方法</li>
<li>翻译模式，translation scheme</li>
</ul>
</li>
<li>表达式E的后缀形式Postfix(E)如何生成：
<ol>
<li>E为变量或常量：Postfix(E) = E</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mi>o</mi><mi>p</mi><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E = E_{1} op E_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，op—二元运算符，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_{1}、E_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>—子表达式：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mi>o</mi><mi>p</mi><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">Postfix(E) = Postfix(E_{1} op E_{2})= Postfix(E_{1}) Postfix(E_{2}) op</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E = (E_{1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>i</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Postfix(E) = Postfix(E_{1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ol>
</li>
<li>(9 - 5) + 2 ➔9 5 - 2 +</li>
<li>9 - (5 + 2) ➔9 5 2 + -</li>
</ul>
<p>语法制导定义</p>
<ul>
<li>基于语言的上下文无关文法</li>
<li>语法符号——一组属性</li>
<li>产生式——一组语义规则(semantic rule)——属性值计算规则</li>
<li>CFG+语义规则➔语法制导定义</li>
</ul>
<p>语法制导翻译的基本过程（翻译——输入→输出映射过程）</p>
<ol>
<li>输入单词串x➔语法分析树</li>
<li>节点n标记为X，X.a——X的属性</li>
<li>计算节点n的X.a的值——利用X产生式的语义规则➔</li>
<li>“注释语法分析树”（annotated parse tree）</li>
</ol>
<p>语法制导定义的实现</p>
<ul>
<li>树的遍历：计算完所有孩子节点的属性，父节点才能计算自身属性</li>
<li>后序遍历，深度优先</li>
</ul>
<p>翻译模式</p>
<ul>
<li>translation scheme</li>
<li>同样基于上下文无关文法</li>
<li>语义动作（semantic action，程序片断）嵌入产生式的右部</li>
<li><img src="https://s2.loli.net/2022/01/02/a8GclC5wADqj6mY.png" alt="image-20220102171537472"></li>
<li>语法分析树添加额外节点</li>
<li>指明了语义动作执行顺序</li>
</ul>
<h3 id="语法分析"><a class="markdownIt-Anchor" href="#语法分析"></a> 语法分析</h3>
<ul>
<li>确定一个单词串是否可由一个文法生成</li>
<li>构造语法分析树</li>
<li>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mtext>➔</mtext><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)➔O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">➔</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li>自顶向下分析方法，top-down<br>
语法树构造——由根向叶<br>
适合手工编写语法分析器</li>
<li>自底向上分析方法，bottom-up<br>
语法树构造——由叶向根<br>
适用更多文法，自动生成工具</li>
</ul>
<p>自顶向下分析方法</p>
<ul>
<li>从根节点（标记为开始符号）开始构造语法树，不断重复以下步骤</li>
</ul>
<ol>
<li>对标记为NT A的节点n,选择一个关于A的产生式,利用产生式右部构造n的孩子节点</li>
<li>选择下一个没有扩展（构造孩子节点）的节点，对它执行1</li>
</ol>
<p><strong>平凡算法</strong></p>
<ol>
<li>初始状态，只有一个根节点，标记为开始符号，输入指针指向第一个单词</li>
<li>对于NT节点<br>
a) 选择产生式（尝试、回溯）构造孩子节点<br>
b) 对孩子节点从左至右继续分析</li>
<li>对于T节点<br>
a) 与当前输入单词进行比较<br>
b) 若匹配，输入指针前移，处理下一个节点<br>
c) 不匹配，可能需要回溯或报告错误</li>
</ol>
]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>Lex</tag>
        <tag>Yacc</tag>
        <tag>编译系统原理</tag>
        <tag>编译器</tag>
      </tags>
  </entry>
  <entry>
    <title>背包理论基础01背包2</title>
    <url>/blog/2022/08517e3a8f.html</url>
    <content><![CDATA[<blockquote>
<p>转载自<a href="https://programmercarl.com/">代码随想录</a>，侵删</p>
</blockquote>
<p>建议按照如下顺序观看：<br>
<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
<h1 id="动态规划关于01背包问题你该了解这些滚动数组"><a class="markdownIt-Anchor" href="#动态规划关于01背包问题你该了解这些滚动数组"></a> 动态规划：关于01背包问题，你该了解这些！（滚动数组）</h1>
<p>昨天<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a>中是用二维dp数组来讲解01背包。</p>
<p>今天我们就来说一说滚动数组，其实在前面的题目中我们已经用到过滚动数组了，就是把二维dp降为一维dp，一些录友当时还表示比较困惑。</p>
<p>那么我们通过01背包，来彻底讲一讲滚动数组！</p>
<p>接下来还是用如下这个例子来进行讲解</p>
<p>背包最大重量为4。</p>
<p>物品为：</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">重量</th>
<th style="text-align:center">价值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">物品0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">物品1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">物品2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">30</td>
</tr>
</tbody>
</table>
<p>问背包能背的物品最大价值是多少？</p>
<h2 id="一维dp数组滚动数组"><a class="markdownIt-Anchor" href="#一维dp数组滚动数组"></a> 一维dp数组（滚动数组）</h2>
<p>对于背包问题其实状态都是可以压缩的。</p>
<p>在使用二维数组的时候，递推公式：dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);</p>
<p><strong>其实可以发现如果把dp[i - 1]那一层拷贝到dp[i]上，表达式完全可以是：dp[i][j] = max(dp[i][j], dp[i][j - weight[i]] + value[i]);</strong></p>
<p><strong>与其把dp[i - 1]这一层拷贝到dp[i]上，不如只用一个一维数组了</strong>，只用dp[j]（一维数组，也可以理解是一个滚动数组）。</p>
<p>这就是滚动数组的由来，需要满足的条件是上一层可以重复利用，直接拷贝到当前层。</p>
<p>读到这里估计大家都忘了 dp[i][j]里的i和j表达的是什么了，i是物品，j是背包容量。</p>
<p><strong>dp[i][j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p>
<p>一定要时刻记住这里i和j的含义，要不然很容易看懵了。</p>
<p>动规五部曲分析如下：</p>
<ol>
<li>确定dp数组的定义</li>
</ol>
<p>在一维dp数组中，dp[j]表示：容量为j的背包，所背的物品价值可以最大为dp[j]。</p>
<ol start="2">
<li>一维dp数组的递推公式</li>
</ol>
<p>dp[j]为 容量为j的背包所背的最大价值，那么如何推导dp[j]呢？</p>
<p>dp[j]可以通过dp[j - weight[i]]推导出来，dp[j - weight[i]]表示容量为j - weight[i]的背包所背的最大价值。</p>
<p>dp[j - weight[i]] + value[i] 表示 容量为 j - 物品i重量 的背包 加上 物品i的价值。（也就是容量为j的背包，放入物品i了之后的价值即：dp[j]）</p>
<p>此时dp[j]有两个选择，一个是取自己dp[j] 相当于 二维dp数组中的dp[i-1][j]，即不放物品i，一个是取dp[j - weight[i]] + value[i]，即放物品i，指定是取最大的，毕竟是求最大价值，</p>
<p>所以递归公式为：</p>
<pre class="highlight"><code class="cpp">dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
</code></pre>
<p>可以看出相对于二维dp数组的写法，就是把dp[i][j]中i的维度去掉了。</p>
<ol start="3">
<li>一维dp数组如何初始化</li>
</ol>
<p><strong>关于初始化，一定要和dp数组的定义吻合，否则到递推公式的时候就会越来越乱</strong>。</p>
<p>dp[j]表示：容量为j的背包，所背的物品价值可以最大为dp[j]，那么dp[0]就应该是0，因为背包容量为0所背的物品的最大价值就是0。</p>
<p>那么dp数组除了下标0的位置，初始为0，其他下标应该初始化多少呢？</p>
<p>看一下递归公式：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);</p>
<p>dp数组在推导的时候一定是取价值最大的数，如果题目给的价值都是正整数那么非0下标都初始化为0就可以了。</p>
<p><strong>这样才能让dp数组在递归公式的过程中取的最大的价值，而不是被初始值覆盖了</strong>。</p>
<p>那么我假设物品价值都是大于0的，所以dp数组初始化的时候，都初始为0就可以了。</p>
<ol start="4">
<li>一维dp数组遍历顺序</li>
</ol>
<p>代码如下：</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
        dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);

    }
}
</code></pre>
<p><strong>这里大家发现和二维dp的写法中，遍历背包的顺序是不一样的！</strong></p>
<p>二维dp遍历的时候，背包容量是从小到大，而一维dp遍历的时候，背包是从大到小。</p>
<p>为什么呢？</p>
<p><strong>倒序遍历是为了保证物品i只被放入一次！</strong>。但如果一旦正序遍历了，那么物品0就会被重复加入多次！</p>
<p>举一个例子：物品0的重量weight[0] = 1，价值value[0] = 15</p>
<p>如果正序遍历</p>
<p>dp[1] = dp[1 - weight[0]] + value[0] = 15</p>
<p>dp[2] = dp[2 - weight[0]] + value[0] = 30</p>
<p>此时dp[2]就已经是30了，意味着物品0，被放入了两次，所以不能正序遍历。</p>
<p>为什么倒序遍历，就可以保证物品只放入一次呢？</p>
<p>倒序就是先算dp[2]</p>
<p>dp[2] = dp[2 - weight[0]] + value[0] = 15  （dp数组已经都初始化为0）</p>
<p>dp[1] = dp[1 - weight[0]] + value[0] = 15</p>
<p>所以从后往前循环，每次取得状态不会和之前取得状态重合，这样每种物品就只取一次了。</p>
<p><strong>那么问题又来了，为什么二维dp数组历的时候不用倒序呢？</strong></p>
<p>因为对于二维dp，dp[i][j]都是通过上一层即dp[i - 1][j]计算而来，本层的dp[i][j]并不会被覆盖！</p>
<p>（如何这里读不懂，大家就要动手试一试了，空想还是不靠谱的，实践出真知！）</p>
<p><strong>再来看看两个嵌套for循环的顺序，代码中是先遍历物品嵌套遍历背包容量，那可不可以先遍历背包容量嵌套遍历物品呢？</strong></p>
<p>不可以！</p>
<p>因为一维dp的写法，背包容量一定是要倒序遍历（原因上面已经讲了），如果遍历背包容量放在上一层，那么每个dp[j]就只会放入一个物品，即：背包里只放入了一个物品。</p>
<p>倒序遍历的原因是，本质上还是一个对二维数组的遍历，并且右下角的值依赖上一层左上角的值，因此需要保证左边的值仍然是上一层的，从右向左覆盖。</p>
<p>（这里如果读不懂，就在回想一下dp[j]的定义，或者就把两个for循环顺序颠倒一下试试！）</p>
<p><strong>所以一维dp数组的背包在遍历顺序上和二维其实是有很大差异的！</strong>，这一点大家一定要注意。</p>
<ol start="5">
<li>举例推导dp数组</li>
</ol>
<p>一维dp，分别用物品0，物品1，物品2 来遍历背包，最终得到结果如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20210110103614769.png" alt="动态规划-背包问题9"></p>
<h2 id="一维dp01背包完整c测试代码"><a class="markdownIt-Anchor" href="#一维dp01背包完整c测试代码"></a> 一维dp01背包完整C++测试代码</h2>
<pre class="highlight"><code class="CPP"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_1_wei_bag_problem</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    <span class="hljs-type">int</span> bagWeight = <span class="hljs-number">4</span>;

    <span class="hljs-comment">// 初始化</span>
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(bagWeight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
            dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
        }
    }
    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;
}

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_1_wei_bag_problem</span>();
}

</code></pre>
<p>可以看出，一维dp 的01背包，要比二维简洁的多！ 初始化 和 遍历顺序相对简单了。</p>
<p><strong>所以我倾向于使用一维dp数组的写法，比较直观简洁，而且空间复杂度还降了一个数量级！</strong></p>
<p><strong>在后面背包问题的讲解中，我都直接使用一维dp数组来进行推导</strong>。</p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>以上的讲解可以开发一道面试题目（毕竟力扣上没原题）。</p>
<p>就是本文中的题目，要求先实现一个纯二维的01背包，如果写出来了，然后再问为什么两个for循环的嵌套顺序这么写？反过来写行不行？再讲一讲初始化的逻辑。</p>
<p>然后要求实现一个一维数组的01背包，最后再问，一维数组的01背包，两个for循环的顺序反过来写行不行？为什么？</p>
<p>注意以上问题都是在候选人把代码写出来的情况下才问的。</p>
<p>就是纯01背包的题目，都不用考01背包应用类的题目就可以看出候选人对算法的理解程度了。</p>
<p><strong>相信大家读完这篇文章，应该对以上问题都有了答案！</strong></p>
<p>此时01背包理论基础就讲完了，我用了两篇文章把01背包的dp数组定义、递推公式、初始化、遍历顺序从二维数组到一维数组统统深度剖析了一遍，没有放过任何难点。</p>
<p>大家可以发现其实信息量还是挺大的。</p>
<p>如果把<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a>和本篇的内容都理解了，后面我们在做01背包的题目，就会发现非常简单了。</p>
<p>不用再凭感觉或者记忆去写背包，而是有自己的思考，了解其本质，代码的方方面面都在自己的掌控之中。</p>
<p>即使代码没有通过，也会有自己的逻辑去debug，这样就思维清晰了。</p>
<p><a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
]]></content>
  </entry>
  <entry>
    <title>背包理论基础01背包1</title>
    <url>/blog/2022/08c8776b35.html</url>
    <content><![CDATA[<blockquote>
<p>转载自<a href="https://programmercarl.com/">代码随想录</a>，侵删</p>
</blockquote>
<p>建议按照如下顺序观看：<br>
<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
<h1 id="动态规划关于01背包问题你该了解这些"><a class="markdownIt-Anchor" href="#动态规划关于01背包问题你该了解这些"></a> 动态规划：关于01背包问题，你该了解这些！</h1>
<p>这周我们正式开始讲解背包问题！</p>
<p>如果这几种背包，分不清，我这里画了一个图，如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20210117171307407.png" alt="416.分割等和子集1"></p>
<p>至于背包九讲其其他背包，面试几乎不会问，都是竞赛级别的了，leetcode上连多重背包的题目都没有，所以题库也告诉我们，01背包和完全背包就够用了。</p>
<p>而完全背包又是也是01背包稍作变化而来，即：完全背包的物品数量是无限的。</p>
<p><strong>所以背包问题的理论基础重中之重是01背包，一定要理解透！</strong></p>
<p>leetcode上没有纯01背包的问题，都是01背包应用方面的题目，也就是需要转化为01背包问题。</p>
<p><strong>所以我先通过纯01背包问题，把01背包原理讲清楚，后续再讲解leetcode题目的时候，重点就是讲解如何转化为01背包问题了</strong>。</p>
<p>之前可能有些录友已经可以熟练写出背包了，但只要把这个文章仔细看完，相信你会意外收获！</p>
<h2 id="01-背包"><a class="markdownIt-Anchor" href="#01-背包"></a> 01 背包</h2>
<p>有n件物品和一个最多能背重量为w 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。<strong>每件物品只能用一次</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>
<p><img src="https://img-blog.csdnimg.cn/20210117175428387.jpg" alt="动态规划-背包问题"></p>
<p>这是标准的背包问题，以至于很多同学看了这个自然就会想到背包，甚至都不知道暴力的解法应该怎么解了。</p>
<p>这样其实是没有从底向上去思考，而是习惯性想到了背包，那么暴力的解法应该是怎么样的呢？</p>
<p>每一件物品其实只有两个状态，取或者不取，所以可以使用回溯法搜索出所有的情况，那么时间复杂度就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，这里的n表示物品数量。</p>
<p><strong>所以暴力的解法是指数级别的时间复杂度。进而才需要动态规划的解法来进行优化！</strong></p>
<p>在下面的讲解中，我举一个例子：</p>
<p>背包最大重量为4。</p>
<p>物品为：</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">重量</th>
<th style="text-align:center">价值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">物品0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">物品1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">物品2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">30</td>
</tr>
</tbody>
</table>
<p>问背包能背的物品最大价值是多少？</p>
<p>以下讲解和图示中出现的数字都是以这个例子为例。</p>
<h2 id="二维dp数组01背包"><a class="markdownIt-Anchor" href="#二维dp数组01背包"></a> 二维dp数组01背包</h2>
<p>依然动规五部曲分析一波。</p>
<ol>
<li>确定dp数组以及下标的含义</li>
</ol>
<p>对于背包问题，有一种写法， 是使用二维数组，即<strong>dp[i][j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p>
<p>只看这个二维数组的定义，大家一定会有点懵，看下面这个图：</p>
<p><img src="https://img-blog.csdnimg.cn/20210110103003361.png" alt="动态规划-背包问题1"></p>
<p><strong>要时刻记着这个dp数组的含义，下面的一些步骤都围绕这dp数组的含义进行的</strong>，如果哪里看懵了，就来回顾一下i代表什么，j又代表什么。</p>
<ol start="2">
<li>确定递推公式</li>
</ol>
<p>再回顾一下dp[i][j]的含义：从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少。</p>
<p>那么可以有两个方向推出来dp[i][j]，</p>
<ul>
<li><strong>不放物品i</strong>：由dp[i - 1][j]推出，即背包容量为j，里面不放物品i的最大价值，此时dp[i][j]就是dp[i - 1][j]。(其实就是当物品i的重量大于背包j的重量时，物品i无法放进背包中，所以被背包内的价值依然和前面相同。)</li>
<li><strong>放物品i</strong>：由dp[i - 1][j - weight[i]]推出，dp[i - 1][j - weight[i]] 为背包容量为j - weight[i]的时候不放物品i的最大价值，那么dp[i - 1][j - weight[i]] + value[i] （物品i的价值），就是背包放物品i得到的最大价值</li>
</ul>
<p>所以递归公式： dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);</p>
<ol start="3">
<li>dp数组如何初始化</li>
</ol>
<p><strong>关于初始化，一定要和dp数组的定义吻合，否则到递推公式的时候就会越来越乱</strong>。</p>
<p>首先从dp[i][j]的定义出发，如果背包容量j为0的话，即dp[i][0]，无论是选取哪些物品，背包价值总和一定为0。如图：</p>
<p><img src="https://img-blog.csdnimg.cn/2021011010304192.png" alt="动态规划-背包问题2"></p>
<p>在看其他情况。</p>
<p>状态转移方程 dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 可以看出i 是由 i-1 推导出来，那么i为0的时候就一定要初始化。</p>
<p>dp[0][j]，即：i为0，存放编号0的物品的时候，各个容量的背包所能存放的最大价值。</p>
<p>那么很明显当 j &lt; weight[0]的时候，dp[0][j] 应该是 0，因为背包容量比编号0的物品重量还小。</p>
<p>当j &gt;= weight[0]时，dp[0][j] 应该是value[0]，因为背包容量放足够放编号0物品。</p>
<p>代码初始化如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span> ; j &lt; weight[<span class="hljs-number">0</span>]; j++) {  <span class="hljs-comment">// 当然这一步，如果把dp数组预先初始化为0了，这一步就可以省略，但很多同学应该没有想清楚这一点。</span>
    dp[<span class="hljs-number">0</span>][j] = <span class="hljs-number">0</span>;
}
<span class="hljs-comment">// 正序遍历</span>
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = weight[<span class="hljs-number">0</span>]; j &lt;= bagweight; j++) {
    dp[<span class="hljs-number">0</span>][j] = value[<span class="hljs-number">0</span>];
}
</code></pre>
<p>此时dp数组初始化情况如图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/20210110103109140.png" alt="动态规划-背包问题7"></p>
<p>dp[0][j] 和 dp[i][0] 都已经初始化了，那么其他下标应该初始化多少呢？</p>
<p>其实从递归公式： dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 可以看出dp[i][j]  是由左上方数值推导出来了，那么 其他下标初始为什么数值都可以，因为都会被覆盖。</p>
<p><strong>初始-1，初始-2，初始100，都可以！</strong></p>
<p>但只不过一开始就统一把dp数组统一初始为0，更方便一些。</p>
<p>如图：</p>
<p><img src="https://code-thinking.cdn.bcebos.com/pics/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%9810.jpg" alt="动态规划-背包问题10"></p>
<p>最后初始化代码如下：</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// 初始化 dp</span>
vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">dp</span>(weight.<span class="hljs-built_in">size</span>(), <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(bagweight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>));
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = weight[<span class="hljs-number">0</span>]; j &lt;= bagweight; j++) {
    dp[<span class="hljs-number">0</span>][j] = value[<span class="hljs-number">0</span>];
}

</code></pre>
<p><strong>费了这么大的功夫，才把如何初始化讲清楚，相信不少同学平时初始化dp数组是凭感觉来的，但有时候感觉是不靠谱的</strong>。</p>
<ol start="4">
<li>确定遍历顺序</li>
</ol>
<p>在如下图中，可以看出，有两个遍历的维度：物品与背包重量</p>
<p><img src="https://img-blog.csdnimg.cn/2021011010314055.png" alt="动态规划-背包问题3"></p>
<p>那么问题来了，<strong>先遍历 物品还是先遍历背包重量呢？</strong></p>
<p><strong>其实都可以！！ 但是先遍历物品更好理解</strong>。</p>
<p>那么我先给出先遍历物品，然后遍历背包重量的代码。</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// weight数组的大小 就是物品个数</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagweight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
        <span class="hljs-keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="hljs-number">1</span>][j]; 
        <span class="hljs-keyword">else</span> dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]);

    }
}
</code></pre>
<p><strong>先遍历背包，再遍历物品，也是可以的！（注意我这里使用的二维dp数组）</strong></p>
<p>例如这样：</p>
<pre class="highlight"><code class="C++"><span class="hljs-comment">// weight数组的大小 就是物品个数</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagweight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="hljs-number">1</span>][j];
        <span class="hljs-keyword">else</span> dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]);
    }
}
</code></pre>
<p>为什么也是可以的呢？</p>
<p><strong>要理解递归的本质和递推的方向</strong>。</p>
<p>dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 递归公式中可以看出dp[i][j]是靠dp[i-1][j]和dp[i - 1][j - weight[i]]推导出来的。</p>
<p>dp[i-1][j]和dp[i - 1][j - weight[i]] 都在dp[i][j]的左上角方向（包括正上方向），那么先遍历物品，再遍历背包的过程如图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/202101101032124.png" alt="动态规划-背包问题5"></p>
<p>再来看看先遍历背包，再遍历物品呢，如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20210110103244701.png" alt="动态规划-背包问题6"></p>
<p><strong>大家可以看出，虽然两个for循环遍历的次序不同，但是dp[i][j]所需要的数据就是左上角，根本不影响dp[i][j]公式的推导！</strong></p>
<p>但先遍历物品再遍历背包这个顺序更好理解。</p>
<p><strong>其实背包问题里，两个for循环的先后循序是非常有讲究的，理解遍历顺序其实比理解推导公式难多了</strong>。</p>
<ol start="5">
<li>举例推导dp数组</li>
</ol>
<p>来看一下对应的dp数组的数值，如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20210118163425129.jpg" alt="动态规划-背包问题4"></p>
<p>最终结果就是dp[2][4]。</p>
<p>建议大家此时自己在纸上推导一遍，看看dp数组里每一个数值是不是这样的。</p>
<p><strong>做动态规划的题目，最好的过程就是自己在纸上举一个例子把对应的dp数组的数值推导一下，然后在动手写代码！</strong></p>
<p>很多同学做dp题目，遇到各种问题，然后凭感觉东改改西改改，怎么改都不对，或者稀里糊涂就改过了。</p>
<p>主要就是自己没有动手推导一下dp数组的演变过程，如果推导明白了，代码写出来就算有问题，只要把dp数组打印出来，对比一下和自己推导的有什么差异，很快就可以发现问题了。</p>
<h2 id="完整c测试代码"><a class="markdownIt-Anchor" href="#完整c测试代码"></a> 完整c++测试代码</h2>
<pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_2_wei_bag_problem1</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    <span class="hljs-type">int</span> bagweight = <span class="hljs-number">4</span>;

    <span class="hljs-comment">// 二维数组</span>
    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">dp</span>(weight.<span class="hljs-built_in">size</span>(), <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(bagweight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>));

    <span class="hljs-comment">// 初始化</span>
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = weight[<span class="hljs-number">0</span>]; j &lt;= bagweight; j++) {
        dp[<span class="hljs-number">0</span>][j] = value[<span class="hljs-number">0</span>];
    }

    <span class="hljs-comment">// weight数组的大小 就是物品个数</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagweight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
            <span class="hljs-keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="hljs-number">1</span>][j];
            <span class="hljs-keyword">else</span> dp[i][j] = <span class="hljs-built_in">max</span>(dp[i - <span class="hljs-number">1</span>][j], dp[i - <span class="hljs-number">1</span>][j - weight[i]] + value[i]);

        }
    }

    cout &lt;&lt; dp[weight.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>][bagweight] &lt;&lt; endl;
}

<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_2_wei_bag_problem1</span>();
}

</code></pre>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>讲了这么多才刚刚把二维dp的01背包讲完，<strong>这里大家其实可以发现最简单的是推导公式了，推导公式估计看一遍就记下来了，但难就难在如何初始化和遍历顺序上</strong>。</p>
<p>可能有的同学并没有注意到初始化 和 遍历顺序的重要性，我们后面做力扣上背包面试题目的时候，大家就会感受出来了。</p>
<p>下一篇 还是理论基础，我们再来讲一维dp数组实现的01背包（滚动数组），分析一下和二维有什么区别，在初始化和遍历顺序上又有什么差异，敬请期待！</p>
<p><a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
]]></content>
  </entry>
  <entry>
    <title>计算机网络复习摘要</title>
    <url>/blog/2021/1210d148d4.html</url>
    <content><![CDATA[<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>IPV4：32位地址<br>
IPv6：128位地址</p>
<p>Internet三个重要理念：<br>
➢ 互联网的开放理念<br>
➢ 互联网的自组织理念<br>
➢ 互联网的分享理念</p>
<p>统计多路复用：主机A和B的报文分组没有固定的到达模式，带宽按需共享，这<br>
种方式称为统计多路复用(statistical multiplexing)</p>
<p>网络流量具有很强的突发性，即不平稳，每个独立的流的峰值可能出现在不同时间</p>
<ul>
<li>结论：流越多，网络平均流量越平滑</li>
</ul>
<p>报文长度P ：单位“位(bit)”<br>
链路长度L ：单位“米”<br>
传输速率R ：单位“位/秒”<br>
传播时延PROP：电磁波在介质上传播的时间，单位“秒”</p>
<ul>
<li>PROP = L/C，其中C为电磁波传播速度</li>
</ul>
<p>传输时间TRANSP ：发送长度为P的报文所用的时间</p>
<ul>
<li>TRANSP = P/R，其中R为传输速率</li>
</ul>
<p>端端时延Latency：发送端开始传送第一位到接收端接收到最后一位所用的时间，在单一链路上计算方法为：</p>
<ul>
<li>Latency = PROP + TRANSP</li>
</ul>
<p>当报文分组到达时，如果出口链路忙，报文分组需要在路由器缓存中排队等待，会引入排队时延</p>
<p>往返时延RTT (Round-Trip Time)：从发送方发送数据开始，到发送方收到来自接收方的确认，经历的总时间</p>
<p>时延带宽积</p>
<ul>
<li>时延带宽积= 传播时延×带宽，即按比特计数的链路长度</li>
<li>若发送端连续发送数据，则在发送的第一个bit即将达到终点时，发送端就已经发送了时延带宽积个bit ，而这些bit都在链路上向前移动</li>
</ul>
<p>如何将端系统连接到边缘路由器？</p>
<ul>
<li>有线接入
<ul>
<li>数字用户线路(xDSL),电话线</li>
<li>混合光纤同轴电缆(HFC)，电视</li>
<li>光纤宽带(FTTH)，光纤</li>
<li>以太网(Ethernet)</li>
</ul>
</li>
<li>无线接入
<ul>
<li>无线局域网(WiFi)</li>
<li>移动通信网(4G/5G)</li>
</ul>
</li>
<li>注意两个指标：接入网速率、共享或专用</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/7tWiPUJMr5pfYGh.png" alt=""></p>
<p>网络协议的组成要素：</p>
<ul>
<li>语法：数据与控制信息的结构或格式(协议数据单元PDU)</li>
<li>语义：需要发出何种控制信息，完成何种动作以及做出何种响应</li>
<li>时序：事件实现顺序的详细说明</li>
</ul>
<p>接口层通常包括数据链路层和物理层</p>
<h2 id="应用层协议及网络编程"><a class="markdownIt-Anchor" href="#应用层协议及网络编程"></a> 应用层协议及网络编程</h2>
<h3 id="应用协议与进程通信模型"><a class="markdownIt-Anchor" href="#应用协议与进程通信模型"></a> 应用协议与进程通信模型</h3>
<p>应用：可进行通信的、分布式进程<br>
➢ 运行于主机的用户空间<br>
➢ 通过交换消息(Messages)实现应用之间的交互<br>
➢ 例如：Email、Web等</p>
<p>应用层协议：应用层实体之间的通信规范<br>
➢ 定义应用交换的消息和收到消息后采取的行动<br>
➢ 使用下层协议(TCP、UDP)提供的通信服务</p>
<ul>
<li>内容：
<ul>
<li>消息的类型
<ul>
<li>如请求request、响应response</li>
</ul>
</li>
<li>消息的语法
<ul>
<li>如消息包含哪些字段、字段之间如何分割等</li>
</ul>
</li>
<li>消息的语义
<ul>
<li>字段中信息代表的具体含义</li>
</ul>
</li>
<li>消息的处理
<ul>
<li>进程何时发送消息、收到消息后的动作等</li>
</ul>
</li>
</ul>
</li>
<li>类型：
<ul>
<li>公共协议
<ul>
<li>RFC中定义的协议</li>
<li>可相互兼容</li>
<li>例如：HTTP、SMTP等</li>
</ul>
</li>
<li>专有协议
<ul>
<li>公司或组织专有</li>
<li>例如：Skype、QQ等</li>
</ul>
</li>
</ul>
</li>
<li>服务指标
<ul>
<li>数据丢失率
<ul>
<li>音视频等应用可以容忍一定的数据丢失</li>
<li>文件传输、远程登录等应用要求100%的数据可靠</li>
</ul>
</li>
<li>时延
<ul>
<li>网络电话、交互游戏等应用对时延有一定的要求</li>
</ul>
</li>
<li>带宽
<ul>
<li>多媒体等应用需要一定的带宽保证</li>
<li>有些应用则是弹性的</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>主机的地址标识</strong>:主机拥有一个唯一的32位的IPv4地址(或128位的IPv6地址)<br>
<strong>进程标识符</strong>：包括IP地址和端口号</p>
<ul>
<li>端口号举例:
<ul>
<li>Web服务器进程: 80</li>
<li>Email(SMTP)服务器进程: 25</li>
</ul>
</li>
</ul>
<h3 id="进程间通信"><a class="markdownIt-Anchor" href="#进程间通信"></a> 进程间通信</h3>
<p>进程：主机中运行的程序</p>
<p>在同一台主机中，两个进程之间按照进程间通信方式进行交互通信(操作系统中定义)<br>
不同主机上的进程通信，需要通过交换信息来完成</p>
<p>客户/服务器(C/S)模型</p>
<ul>
<li>客户向服务器发出服务请求，并接收服务器的响应；服务器等待客户的请求并为客户提供服务</li>
<li>例如：Web浏览器/Web服务器；Email客户端/Email服务器</li>
<li>过程
<ul>
<li>服务器进程
<ul>
<li>被动等待</li>
<li>长久在线</li>
<li>固定IP地址</li>
<li>利用集群/云提供扩展性</li>
</ul>
</li>
<li>客户进程
<ul>
<li>启动与服务器的通信</li>
<li>可能为间歇性连接</li>
<li>可能使用动态IP地址</li>
<li>不与其他客户进行直接通信</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>对等计算(P2P)模型</p>
<ul>
<li>最小化(或根本不用)专用服务器</li>
<li>例如：Skype, BitTorrent等</li>
<li>过程
<ul>
<li>无长久在线的服务器</li>
<li>任意的终端系统之间都可能进行直接通信</li>
<li>端系统之间可能间歇性地进行连接</li>
<li>端系统可能使用动态的IP地址</li>
<li>高可扩展性但维护困难</li>
</ul>
</li>
</ul>
<h3 id="传输层服务对应用层的支持"><a class="markdownIt-Anchor" href="#传输层服务对应用层的支持"></a> 传输层服务对应用层的支持</h3>
<p>TCP服务:</p>
<ul>
<li>面向连接：客户与服务器之间需要建立连接</li>
<li>可靠传输：可保证传递数据无差错</li>
<li>流量控制：发送数据不会超过接收端的容纳容量</li>
<li>拥塞控制: 提供拥塞解决方案</li>
<li>不能提供：时延和带宽保证</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/FxYWvJU3wZMa8TK.png" alt="image-20211230165317149"></p>
<p>UDP服务:</p>
<ul>
<li>不可靠：不可靠的数据投递</li>
<li>不能提供：连接建立、可靠性、流量控制、拥塞控制、时延和带宽保证</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/Rcu3XknhwasqUFB.png" alt="image-20211230165144908"></p>
<p>一些常见Socket函数：</p>
<ul>
<li>
<p>accept():流方式</p>
</li>
<li>
<p>connect()：流方式</p>
</li>
<li>
<p>recv()：流方式</p>
</li>
<li>
<p>sendto()：数据报方式</p>
</li>
<li>
<p>recvfrom()：数据报方式</p>
</li>
</ul>
<p>常见CPU的字节序</p>
<ul>
<li>Big-Endian : PowerPC、IBM、Sun</li>
<li>Little-Endian : x86、DEC</li>
<li>ARM既可工作在Big-Endian，也可工作在Little-endian</li>
<li>网络使用的字节序：网络通信协议都使用Big-Endian编码序</li>
</ul>
<h3 id="电子邮件系统"><a class="markdownIt-Anchor" href="#电子邮件系统"></a> 电子邮件系统</h3>
<ul>
<li>用户代理 (接口)
<ul>
<li>编辑和发送邮件</li>
<li>接收、读取和管理邮件</li>
<li>管理地址簿</li>
<li>无统一标准</li>
</ul>
</li>
<li>邮件服务器
<ul>
<li>邮箱：保存用户收到的消息</li>
<li>消息输出队列：消息的发送队列</li>
<li>SMTP协议：邮件服务器之间传递邮件使用的协议
<ul>
<li>smtp客户: 发送邮件端</li>
<li>smtp服务器: 接收邮件端</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>邮件地址：一对字符串，用于指定邮件接收者</p>
<ul>
<li>local-part@domain-name
<ul>
<li>domain-name: 域名</li>
<li>local-part: 域名中的邮箱名</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/d2qxW8JsOVpHjwC.png" alt="image-20211230173610962"></p>
<p>SMTP: 向服务器传递邮件</p>
<p>邮件访问协议: 从邮件服务器的邮箱中获取邮件</p>
<ul>
<li>POP: 邮局协议[RFC 1939]</li>
<li>IMAP: Internet邮件访问协议[RFC 2060]</li>
<li>HTTP: 超文本传输协议</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/R4gTbayMNApCIZu.png" alt="image-20211230173849016"></p>
<p>邮件消息格式</p>
<ul>
<li>信封
<ul>
<li>封装消息</li>
<li>内含传输邮件消息所需的一些信息
<ul>
<li>目的地址、优先级、安全级别等</li>
</ul>
</li>
</ul>
</li>
<li>消息
<ul>
<li>消息头
<ul>
<li>包含用户代理所需的一些控制信息</li>
</ul>
</li>
<li>消息体</li>
</ul>
</li>
</ul>
<h3 id="文件传输服务与协议"><a class="markdownIt-Anchor" href="#文件传输服务与协议"></a> 文件传输服务与协议</h3>
<p><img src="https://s2.loli.net/2021/12/30/iIXSD1yjdH9zcam.png" alt="image-20211230174829409"></p>
<ul>
<li>基于TCP/IP的文件传输系统</li>
<li>客户/服务器模型
<ul>
<li>client: 初始化传输(无论上传还是下载)</li>
<li>server: 远端</li>
</ul>
</li>
<li>客户使用TCP协议连接远端服务器</li>
</ul>
<p>FTP进程模型-- 双连接</p>
<ul>
<li>控制连接
<ul>
<li>带外控制</li>
<li>TCP的21端口</li>
<li>客户和服务器之间维护的一个FTP会话</li>
<li>用于客户和服务器之间交换命令和响应</li>
<li>在整个会话期间保持活跃</li>
</ul>
</li>
<li>数据传输连接
<ul>
<li>TCP的20端口</li>
<li>用于传输数据</li>
<li>客户可以在一个会话上向服务器传输多个请求</li>
<li>每个文件请求都会建立一个数据连接</li>
<li>数据传输结束后，释放数据连接</li>
</ul>
</li>
</ul>
<h3 id="域名系统dnsdomain-name-system"><a class="markdownIt-Anchor" href="#域名系统dnsdomain-name-system"></a> 域名系统DNS(Domain Name System)</h3>
<p>互联网中使用IP地址寻址主机</p>
<p>DNS基本思想：</p>
<ul>
<li>名字和地址映射关系分布式存放，形成具有层次结构的分布式数据库系统(分布式管理)</li>
<li>通过查询分布式数据库，获得名字到地址的映射，或相反</li>
</ul>
<p>关键：</p>
<ul>
<li>如何组织分布式数据库</li>
<li>如何在分布式数据库中查找</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/30/96iWGVjezCDtTwn.png" alt="image-20211230183539098"></p>
<p>DNS服务器组织</p>
<p>顶级域名服务器(Top-Level Domain, TLD)</p>
<ul>
<li><a href="https://root-servers.org">根服务器</a></li>
<li>负责顶级域名的解析</li>
</ul>
<p>授权域名服务器</p>
<ul>
<li>对于名字与地址映射，保留其初始数据来源的服务器</li>
<li>主要区分名字与地址映射是原始的还是被缓存的(非授权)</li>
</ul>
<p>本地域名服务器(或称默认域名服务器)</p>
<ul>
<li>一般每个ISP都部署有域名服务器，其用户可将该服务器设置成本地域名服务器(或默认域名服务器)</li>
<li>当进行域名解析时，查询请求首先发送到本地域名服务器(即查询的起点)</li>
</ul>
<p>域名解析：名字到地址映射(通过名字查地址)</p>
<ul>
<li>分布式：层级的服务器组织，协同实现解析</li>
<li>有效性：大多数解析可以在本地完成，一部分会产生互联网流量</li>
<li>可靠性：通过冗余设置，避免单点失效</li>
</ul>
<p>解析方式</p>
<ul>
<li>反复解析
<ul>
<li><img src="https://s2.loli.net/2021/12/31/XuThn51oeCDrcMR.png" alt="image-20211231040419503"></li>
</ul>
</li>
<li>递归解析
<ul>
<li><img src="https://s2.loli.net/2021/12/31/CXITrglfzqS7tNu.png" alt="image-20211231040439528"></li>
</ul>
</li>
</ul>
<p>主机缓存</p>
<ul>
<li>基本方法
<ul>
<li>在启动时从本地域名服务器下载名字-地址映射数据库</li>
<li>定期获取新的映射</li>
<li>缓存最近用过的名字和地址映射</li>
</ul>
</li>
<li>优点
<ul>
<li>无需访问域名服务器，名字解析速度快</li>
<li>本地服务器的故障不影响名字解析</li>
<li>减低服务器的负载</li>
</ul>
</li>
<li>缺点？</li>
</ul>
<p>DNS包括query和reply两种报文</p>
<p>域名格式压缩？</p>
<p>客户-服务器模式</p>
<ul>
<li>域名服务器：
<ul>
<li>保存名字到地址映射关系(数据库)</li>
<li>接收客户端请求，并给出响应</li>
</ul>
</li>
<li>域名解析器(客户端)：
<ul>
<li>请求域名解析的客户进程</li>
<li>向域名服务器发起解析请求，并等待服务器的响应</li>
</ul>
</li>
</ul>
<h3 id="web服务与http协议"><a class="markdownIt-Anchor" href="#web服务与http协议"></a> Web服务与HTTP协议</h3>
<p><img src="https://s2.loli.net/2021/12/31/DIbMfJm3a41nuPz.png" alt="image-20211231041632897"></p>
<p>服务器</p>
<ul>
<li>Web页面(HTML文档)：包含到多种对象的链接</li>
<li>对象：可以是 HTML文档、图像文件、视频文件、声音文件、脚本文件等</li>
<li>对象用URL(统一资源定位符)编址：<strong>协议类型://主机名//路径和文件名</strong></li>
</ul>
<p>客户端</p>
<ul>
<li>发出请求、接收响应、解释HTML文档并显示</li>
<li>有些对象需要浏览器安装插件</li>
</ul>
<p>HTTP(HyperText Transfer Protocol)</p>
<ul>
<li>传输层通常使用TCP协议，缺省使用TCP的80端口</li>
<li>HTTP为无状态协议，服务器端不保留之前请求的状态信息
<ul>
<li>无状态协议：效率低、但简单</li>
<li>有状态协议：维护状态相对复杂，需要维护历史信息，在客户端或服务器出现故障时，需要保持状态的一致性等</li>
</ul>
</li>
<li>HTTP标准
<ul>
<li>HTTP/1.0: RFC 1945(1996年)
<ul>
<li>每请求一个文件都要建立连接和断开</li>
<li>eg:请求一个index.html，里面包含3张jpg图片，先发送html文件，后重新建立三次连接发送图片</li>
</ul>
</li>
<li>HTTP/1.1: RFC 2616(1999年)
<ul>
<li>HTTP 1.1的问题</li>
<li>队头阻塞问题
<ul>
<li>基于文本协议的问答有序模式，先请求的必须先响应</li>
</ul>
</li>
<li>传输效率问题
<ul>
<li>文本格式、冗长重复的头部等</li>
</ul>
</li>
<li>HTTP 1.1队头阻塞的解决策略
<ul>
<li>浏览器建立多个TCP连接
<ul>
<li>一般最多可以建立6个TCP连接</li>
<li>通过不同TCP连接传送的请求没有响应顺序的要求</li>
<li><strong>耗费较多的计算和存储资源</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>HTTP/2: RFC 7540(2015年)、RFC 8740(2020年)
<ul>
<li>二进制分帧传输
<ul>
<li>不改变HTTP原有的语义</li>
<li>将HTTP请求和响应分割成帧，采用二进制编码</li>
<li>帧为最小传输单位</li>
</ul>
</li>
<li>最常用的HTTP 请求/ 响应的帧形式
<ul>
<li><img src="https://s2.loli.net/2021/12/31/XOEZmktsLlHJw9A.png" alt="image-20211231044314806"></li>
</ul>
</li>
<li>TCP连接复用：提高连接利用率，解决HTTP的队头阻塞问题
<ul>
<li>消息(Message)：HTTP一次请求或响应，包含一个或多个帧</li>
<li>流(Stream)：简单看成一次请求和应答，包含多个帧</li>
<li>每个TCP连接中可以承载多个流，不同流的帧可以交替穿插传输</li>
<li>流的创建与标识
<ul>
<li>Stream ID：标识一个流。客户端创建的流，ID为奇数；服务器创建的流，ID为偶数；0x00和0x01用于特定场景；Stream ID 不能重复使用，如果一条连接上ID分配完，会新建一条连接。接收端通过Stream ID进行消息的组装。</li>
</ul>
</li>
<li>流创建：发送和接收到HEADERS帧(包含新Stream ID)时创建</li>
<li>流优先级：可以依据重要性为流设置不同的优先级(1~256)，在HEADERS帧中承载</li>
</ul>
</li>
<li>服务器推送：提高响应速度
<ul>
<li>服务器在请求之前先推送响应信息到客户端，推送的响应信息可以在客户端被缓存</li>
</ul>
</li>
<li>HTTP头压缩(HPACK)
<ul>
<li>请求头由大量的键值组成，多个请求的键值重复程度很高</li>
<li>静态表：定义通用HTTP头域，常用键值无需重复传送，直接引用内部字典的整数索引</li>
<li>动态表：两边交互发现新的头域，添加到动态表</li>
<li>自定义键值：采用Huffman编码</li>
</ul>
</li>
</ul>
</li>
<li><img src="https://s2.loli.net/2021/12/31/hepyn8aqvFjQ9RO.png" alt="image-20211231044859390">
<ul>
<li><a href="https://http2.akamai.com/demo">http测试</a></li>
<li>HTTP 2.0协议解决的问题
<ul>
<li>通过引入流机制，解决了HTTP队头阻塞问题，提高了传输效率</li>
<li>通过二进制编码、头压缩机制提高了网络带宽利用率</li>
<li>通过服务器推送，加快了页面响应速度</li>
</ul>
</li>
<li>HTTP 2.0协议没有解决的问题
<ul>
<li>TCP+TLS的多次交互，造成启动延迟问题</li>
<li>对移动主机和多宿主机的连接迁移问题</li>
<li>TCP队头阻塞问题</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>HTTP报文类型</p>
<ul>
<li>HTTP两种报文：请求(request)、响应(response)</li>
<li>HTTP请求报文：采用ASCII，数据部分采用MIME格式
<ul>
<li><img src="https://s2.loli.net/2021/12/31/C2MqVlQL16kovxy.png" alt="image-20211231042351105"></li>
</ul>
</li>
<li>HTTP响应报文：数据部分采用MIME格式
<ul>
<li><img src="https://s2.loli.net/2021/12/31/FsNty7l6DbVEM58.png" alt="image-20211231042523583"></li>
</ul>
</li>
<li>几个比较典型的状态码
<ul>
<li>200 OK
<ul>
<li>请求成功，被请求的对象包含在该响应的数据部分</li>
</ul>
</li>
<li>301 Moved Permanently
<ul>
<li>请求的对象被移走，新的位置在响应中通过Location: 给出</li>
</ul>
</li>
<li>400 Bad Request
<ul>
<li>服务器不能解释请求报文</li>
</ul>
</li>
<li>404 Not Found
<ul>
<li>服务器中找不到请求的文档</li>
</ul>
</li>
<li>505 HTTP Version Not Supported
<ul>
<li>服务器不支持相应的HTTP版本</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>用户-服务器交互：认证</p>
<ul>
<li>认证：控制对服务器内容的访问
<ul>
<li>认证方法：通常使用“名字-口令”</li>
<li>无状态：客户端需要在每个请求中携带认证信息</li>
<li>每个请求头中包含authorization:</li>
<li>如果请求头中无authorization:，则服务器拒绝访问，并在响应头中包含WWW authenticate：</li>
</ul>
</li>
</ul>
<p>用户-服务器状态：Cookies</p>
<ul>
<li>服务器使用cookies保持状态
<ul>
<li>HTTP响应头中使用set-cookie：
<ul>
<li>选择的cookie号具有唯一性</li>
</ul>
</li>
<li>后继的HTTP请求中使用cookie：</li>
<li>Cookie文件保存在用户的主机中，由用户主机中的浏览器管理</li>
<li>Web服务器建立后端数据库，记录用户信息</li>
<li>例如：
<ul>
<li>Set-Cookie: SID=31d4d96e407aad42; Path=/; <a href="http://Domain=example.com">Domain=example.com</a></li>
<li>Cookie:  SID=31d4d96e407aad42</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Web缓存机制：客户端缓存</p>
<ul>
<li>目标：如果被请求的对象在客户端缓存有最近版本，则不需要发送该对象</li>
<li>客户端：在发送的HTTP请求中指定缓存的时间，请求头包含
<ul>
<li>If-modified-since: &lt; date &gt;</li>
</ul>
</li>
<li>服务器：如果缓存的对象是最新的，在响应时无需包含该对象，响应头包含
<ul>
<li>HTTP/1.1 304 Not Modified</li>
</ul>
</li>
</ul>
<p>Web缓存机制：代理服务器缓存</p>
<ul>
<li>目标：由代理服务器进行缓存，尽量减少原始服务器参与</li>
<li>用户设置浏览器：通过代理服务器进行Web访问</li>
<li>浏览器将所有的HTTP请求发送到代理服务器
<ul>
<li>如果缓存中有被请求的对象，则直接返回对象</li>
<li>否则，代理服务器向原始服务器请求对象，再将对象返回给客户端</li>
</ul>
</li>
<li>优点：降低时延，减少网络流量</li>
</ul>
<p>HTTP发展现状</p>
<p><img src="https://s2.loli.net/2021/12/31/ZMUPObjTRiFwEnA.png" alt="image-20211231043947154"></p>
<p><img src="https://s2.loli.net/2021/12/31/smEkrBd5QFT1O9Y.png" alt="image-20211231044010995"></p>
<h3 id="内容分发网络cdncontent-distribution-network"><a class="markdownIt-Anchor" href="#内容分发网络cdncontent-distribution-network"></a> 内容分发网络CDN(Content Distribution Network)</h3>
<p>基本思想源于MIT对Web服务瞬间拥塞问题的解决(1998)</p>
<ul>
<li>一种Web缓存系统，靠近网络边缘(用户)提供内容服务</li>
<li>目前提供更丰富的服务，包括静态内容、流媒体、用户上传视频等</li>
</ul>
<p>主要优点</p>
<ul>
<li>降低响应时延，避免网络拥塞</li>
<li>避免原始服务器过载及防止DDoS攻击</li>
<li>分布式架构，具有良好的可扩展性</li>
<li>对用户透明，无需用户感知</li>
</ul>
<p>DNS辅助</p>
<ul>
<li>负载均衡DNS负责决策CDN服务器选择</li>
<li>负载均衡DNS需要收集CDN服务器的位置和负载情况</li>
<li>如果找不到被请求的对象，需要从原始服务器获取</li>
</ul>
<h3 id="动态自适应流媒体协议dashdynamic-adaptive-streaming-over-http重点"><a class="markdownIt-Anchor" href="#动态自适应流媒体协议dashdynamic-adaptive-streaming-over-http重点"></a> 动态自适应流媒体协议DASHDynamic Adaptive Streaming over HTTP)(重点)</h3>
<p>基本思想：</p>
<ul>
<li>完整视频被拆分为固定时长(2s-10s)、不同码率的视频片段(segment)</li>
<li>视频片段与媒体表示描述(Media  Presentation Description, MPD) 文件一同存放于DASH服务器</li>
<li>客户端根据自身设备性能、当前网络条件、客户端缓冲大小等自适应选择一种视频码率进行下载
<ul>
<li>例如：HTTP服务器中保存有高中低三种质量的视频片段，DASH客户端评估网络状况，通常在保证视频流畅的前提下，获取最高质量的视频片段</li>
</ul>
</li>
</ul>
<p>自适应码率(Adaptive bitrate，ABR)规则</p>
<ul>
<li><img src="https://s2.loli.net/2021/12/31/6omO3QPRnuV4LxC.png" alt="image-20211231050348506"></li>
</ul>
<h2 id="传输层协议"><a class="markdownIt-Anchor" href="#传输层协议"></a> 传输层协议</h2>
<h3 id="传输层需要解决的基本问题"><a class="markdownIt-Anchor" href="#传输层需要解决的基本问题"></a> 传输层需要解决的基本问题</h3>
<ul>
<li>网络层：将IP数据包从源主机传送到目的主机，提供无连接不可靠服务</li>
<li>数据包传输存在的问题：延迟、乱序、出错、丢失等</li>
<li>传输层解决的问题之一：可靠性，向应用层提供可靠服务</li>
<li>应用层运行多个应用进程</li>
<li>共享单一的网络层协议(IP)和网络接口</li>
<li>传输层解决的问题之二：复用(Multiplexing)和分用(Demultiplexing)</li>
</ul>
<h3 id="tcpip体系结构中传输层协议与服务"><a class="markdownIt-Anchor" href="#tcpip体系结构中传输层协议与服务"></a> TCP/IP体系结构中传输层协议与服务</h3>
<p>传输层协议的基本功能</p>
<ul>
<li>复用和分用</li>
<li>可靠性保证</li>
</ul>
<p>传输层实体执行的动作</p>
<ul>
<li>发送端：将应用层的消息封装成传输层的数据单元，传递到网络层</li>
<li>接收端：将从网络层接收的传输层数据单元，处理后交给应用层</li>
</ul>
<p>传输控制协议TCP(Transport Control Protocol)</p>
<ul>
<li>为进程间通信提供面向连接的、可靠的传输服务</li>
<li>实现复用分用、差错检测、确认重传、流量控制等传输层功能</li>
</ul>
<p>用户数据报协议UDP(User Datagram Protocol)</p>
<ul>
<li>为进程间通信提供非连接的、不可靠的传输服务</li>
<li>实现复用分用、差错检测等传输层功能</li>
</ul>
<h3 id="用户数据报协议udp"><a class="markdownIt-Anchor" href="#用户数据报协议udp"></a> 用户数据报协议(UDP)</h3>
<p>UDP协议特点</p>
<ul>
<li>发送方和接收方<strong>不需要握手过程</strong></li>
<li>每个UDP数据单元(数据报)<strong>独立传输</strong></li>
<li>提供复用分用功能和<strong>可选</strong>的差错检测功能</li>
<li>支持组播通信(点到多点通信)</li>
<li>不提供可靠性保证：无确认重传、可能有出错、丢失、乱序等现象</li>
</ul>
<p>UDP数据报格式</p>
<ul>
<li>长度：包含头部、以字节计数</li>
<li>校验和：为可选项，用于差错检测</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/cXEOlLAbGeoQTRC.png" alt="image-20211231075450673"></p>
<p>进程标识：目的IP地址+目的端口号</p>
<p>UDP数据报的差错检测</p>
<ul>
<li>可选项，利用数据报中携带冗余位(校验和域段)来检测数据报传输过程中出现的差错</li>
<li>发送端：利用自己产生的伪首部和发送的UDP数据报计算校验和</li>
<li>接收端：利用自己产生的伪首部和接收的UDP数据报计算校验和</li>
<li>伪首部：包含源IP地址、目的IP地址、协议类型等域段</li>
<li><img src="https://s2.loli.net/2021/12/31/QHyv8zbWYxZO1IU.png" alt="image-20211231080125754"></li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/S2rTLfn47j8Zypi.png" alt="image-20211231080316195"></p>
<p><img src="https://s2.loli.net/2021/12/31/PXY8N91el32xR4o.png" alt="image-20211231080615368"></p>
<p>UDP校验和计算几点说明</p>
<ul>
<li>IPv4中UDP校验和是可选项，IPv6中变成强制项
<ul>
<li>0无，非0有(如果计算结果为0，则以全1代替)</li>
</ul>
</li>
<li>UDP校验和覆盖的范围超出了UDP数据报本身，使用伪首部的目的是检验UDP数据报是否到达真正的目的地
<ul>
<li>正确的目的地包括了特定的主机和该主机上特定的端口</li>
</ul>
</li>
<li>伪首部不随用户数据报一起传输，接收方需自己形成伪首部进行校验</li>
<li>伪首部的使用破坏了层次划分的基本前提，即每一层的功能独立
<ul>
<li>目的主机的IP地址UDP通常知道，源IP的使用需要通过路由选择决定</li>
</ul>
</li>
</ul>
<pre class="highlight"><code class="C++"><span class="hljs-function">u_short <span class="hljs-title">cksum</span><span class="hljs-params">(u_short *buf, <span class="hljs-type">int</span> count)</span></span>{
  <span class="hljs-keyword">register</span> u_long sum = <span class="hljs-number">0</span>;
  <span class="hljs-keyword">while</span> (count--){
    sum += *buf++;
    <span class="hljs-keyword">if</span> (sum &amp; <span class="hljs-number">0XFFFF0000</span>){
      sum &amp;= <span class="hljs-number">0XFFFF</span>;
      sum++;
      }
    }
    Return ~(sum &amp; <span class="hljs-number">0XFFFF</span>);
}
</code></pre>
<p>IP首部、ICMP、UDP、TCP都需要计算校验和，方法类似</p>
<p>使用UDP服务的应用：</p>
<ul>
<li>流媒体应用(实时音频和视频)通常使用UDP服务
<ul>
<li>能够容忍一定的丢失</li>
<li>对时延敏感</li>
</ul>
</li>
<li>其他使用UDP服务的应用，如：
<ul>
<li>DNS</li>
<li>SNMP</li>
</ul>
</li>
<li>需要在UDP之上实现可靠传输，即在应用层增加可靠机制</li>
</ul>
<p>为什么提供UDP服务？</p>
<ul>
<li>不需要建立连接，建立连接需要增加延时，特别对于简单的交互应用</li>
<li>协议简单：在发送端和接收端不需要维护连接状态</li>
<li>数据报头部短，额外开销小</li>
<li>无拥塞控制</li>
</ul>
<h3 id="可靠数据传输"><a class="markdownIt-Anchor" href="#可靠数据传输"></a> 可靠数据传输</h3>
<p>rdt：reliable data transfer protocol(可靠数据传输协议)</p>
<p>停等机制：发送端发送一个分组，然后等待接收端响应</p>
<p>两种典型的流水线协议：</p>
<ul>
<li>回退N：Go-Back-N (GBN)
<ul>
<li>允许发送端发出N个未得到确认的分组</li>
<li>需要增加序列号范围
<ul>
<li>分组首部中增加k位的序列号，序列号空间为[0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>]</li>
</ul>
</li>
<li>采用累积确认，只确认连续正确接收分组的最大序列号
<ul>
<li>可能接收到重复的ACK</li>
<li>发送端设置定时器，定时器超时时，重传所有未确认的分组</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/klQUiJLCaKuSwcD.png" alt="image-20211231082548837"></p>
<ul>
<li>选择重传：Selective Repeat (SR)
<ul>
<li>接收端独立确认每个正确接收的分组，必要时缓存分组，对高层按序交付</li>
<li>每个分组独立定时，发送端只重传未收到ACK的分组</li>
<li>过程
<ul>
<li>发送端
<ul>
<li>接收上层数据：如果发送窗口中有可用的序号，则发送分组</li>
<li>超时(n)：重传分组n，重启定时器</li>
<li>接收ACK(n)：n在[send_base, send_base+N-1]区间，将分组n标记为已接收，如果是窗口中最小的未确认的分组，则窗口向前滑动，基序号为下一个未确认分组的序号</li>
</ul>
</li>
<li>接收端：接收分组n：
<ul>
<li>n在[rcv_base, rcv_base+N-1]区间，发送ACK(n)，缓存失序分组，按序到达的分组交付给上层，窗口向前滑动</li>
<li>n在[rcv_base-N, rcv_base-1]区间，发送ACK(n)<br>
<img src="https://s2.loli.net/2021/12/31/zkCltjSLX1QEqVu.png" alt="image-20211231082946085"></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="传输控制协议tcp"><a class="markdownIt-Anchor" href="#传输控制协议tcp"></a> 传输控制协议(TCP)</h3>
<p>TCP协议特点提供可靠服务：按序、可靠交付</p>
<ul>
<li>提供字节流服务，不识别消息边界可靠传输机制</li>
<li>提供差错检测(校验和)功能，正确接收返回确认</li>
<li>使用序列号检测丢失和乱序</li>
<li>超时重传机制，解决出错、丢失问题</li>
<li>支持流水线机制，自适应窗口</li>
<li>面向连接：发送数据之前发送方和接收方之间需要握手
<ul>
<li>三次握手建立连接</li>
<li>初始化所需的参数及分配缓冲区</li>
</ul>
</li>
<li>提供复用分用功能</li>
<li><strong>只提供点对点通信</strong></li>
<li>具有<strong>流量控制</strong>和<strong>拥塞控制</strong>功能</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/4OPMgFIq6tH5Vda.png" alt="image-20211231151005112"></p>
<ul>
<li>头长度：四个字节为计数单位，包含选项部分</li>
<li>接收窗口通告：指示接收缓冲区可接收的字节数</li>
<li>标志位：URG, ACK, PUSH, RESET, SYN, FIN</li>
<li>选项格式：Kind(1字节)|Length(1字节)|Info(n字节)</li>
</ul>
<p>TCP连接与复用、分用机制</p>
<ul>
<li>通信之前通过三次握手建立TCP连接
<ul>
<li>分配缓冲区、协商参数(初始序号、接收缓冲区大小、最大段尺寸等)</li>
</ul>
</li>
<li>连接标识(四元组)：源IP地址、目的IP地址、源端口号、目的端口号</li>
<li>通过建立的TCP连接为应用进程提供可靠的字节流服务</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/PSk5mrhXMDI2wA8.png" alt="image-20211231153628750"></p>
<table>
<thead>
<tr>
<th style="text-align:center">事件</th>
<th style="text-align:center">TCP接收端动作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">期望序号的报文段按序到达，之前的报文段均已被确认</td>
<td style="text-align:center">延迟发送ACK，等待下一个报文段到达；等500毫秒，仍未收到下一个报文段，则发送ACK</td>
</tr>
<tr>
<td style="text-align:center">期望序号的报文段按序到达，之前有一个延迟确认的报文段</td>
<td style="text-align:center">发送ACK，确认两个按序到达的报文段</td>
</tr>
<tr>
<td style="text-align:center">报文段未按序到达，到达的报文段序号高于期望的序号，数据流不连续</td>
<td style="text-align:center">发送重复ACK，确认序号中包含期望接收的序号</td>
</tr>
<tr>
<td style="text-align:center">到达的报文段填补了之前数据流不连续部分</td>
<td style="text-align:center">发送ACK，确认序号中包含期望接收的序号</td>
</tr>
</tbody>
</table>
<p>TCP采用自适应方法计算重传超时时间(原因？)</p>
<ul>
<li>基于往返时间(RTT)确定重传超时间(RTO)</li>
</ul>
<p>问题：如何准确估算</p>
<ul>
<li>上一次RTT可以测得，下一次RTT需要估算</li>
<li>网络拥塞和路由变化，每次往返时间可能不同，有时会有较大变化</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/GJ8SaATt97lKnkL.png" alt="image-20211231163820280"></p>
<p>流量控制的目的：避免发送端发送数据过快，接收端不能及时处理，造成接收缓冲区溢出</p>
<ul>
<li>增加流控功能后，发送窗口还需要受接收能力的约束</li>
</ul>
<p>可变的滑动窗口：接收端利用“接收窗口通告”域段告知发送端接收端缓冲区剩余的空间，发送端依据该通告调整发送窗口的大小</p>
<p><img src="https://s2.loli.net/2021/12/31/i284GfTShLI6HQn.png" alt="image-20211231221341669"></p>
<p>接收窗口大小对性能的影响</p>
<ul>
<li>较小的缓冲区会影响网络的吞吐率</li>
<li>过大的缓冲区会浪费主机的存储资源</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/2TpMvr9eWJHzQyF.png" alt="image-20211231223846068"></p>
<p><img src="https://s2.loli.net/2021/12/31/LusX27OZbCENlR9.png" alt="image-20211231224024602"></p>
<p>连接的半打开状态：连接的一端存在、而另一端不存在</p>
<ul>
<li>当一个进程终止连接未能通知到另一方时，例如：掉电、异常关闭等</li>
</ul>
<p>TCP定时器:</p>
<ul>
<li>连接建立定时器(75秒)</li>
<li>重传定时器(RTO)</li>
<li>延迟ACK定时器(500毫秒)</li>
<li>持续定时器(避免0窗口死锁)</li>
<li>保活定时器(避免半打开)</li>
<li>静默定时器(避免端口号重用等)</li>
</ul>
<h3 id="理解网络拥塞"><a class="markdownIt-Anchor" href="#理解网络拥塞"></a> 理解网络拥塞</h3>
<p>拥塞控制方法：两种广泛使用的拥塞控制方法</p>
<ul>
<li>端到端拥塞控制
<ul>
<li>网络中无明确的反馈</li>
<li>端系统通过观察丢失、延迟推断是否发生拥塞</li>
<li>TCP采用的拥塞控制策略</li>
</ul>
</li>
<li>网络辅助的拥塞控制
<ul>
<li>路由器提供到端系统的反馈</li>
<li>例如：可以使用1位指示拥塞(如X.25, ATM)</li>
</ul>
</li>
</ul>
<h3 id="tcp拥塞控制机制"><a class="markdownIt-Anchor" href="#tcp拥塞控制机制"></a> TCP拥塞控制机制</h3>
<p>带宽探测：接收到ACK提高传输速率，发生丢失事件降低传输速率</p>
<ul>
<li>ACK返回：说明网络并未拥塞，可以继续提高发送速率</li>
<li>丢失事件：假设所有丢失是由于拥塞造成的，降低发送速率</li>
</ul>
<p>TCP拥塞控制控制窗口：采用基于窗口的方法，通过拥塞窗口的增大或减小控制发送速率</p>
<p><img src="https://s2.loli.net/2021/12/31/fMoXjtWZzKB8lNx.png" alt="image-20211231225911836"></p>
<p>实际发送窗口取决于接收通告窗口和拥塞控制窗口中较小值</p>
<p>TCP拥塞控制</p>
<ul>
<li>慢启动阶段
<ul>
<li>初始拥塞窗口：cwnd=1(MSS)</li>
<li>每个RTT，cwnd翻倍(指数增长)</li>
<li>每接收到一个ACK，cwnd增1(MSS)</li>
<li>当<strong>连接初始建立</strong>或<strong>报文段超时未得到确认时</strong>，TCP拥塞控制进入慢启动阶段</li>
<li>特点：<strong>初始值小，增长速度快</strong></li>
</ul>
</li>
<li>拥塞避免阶段
<ul>
<li>阈值ssthresh：拥塞窗口达到该阈值时，慢启动阶段结束，进入拥塞避免阶段</li>
<li>每个RTT，cwnd增1(线性增长)</li>
<li>注意：TCP使用字节计数，当收到ACK时，拥塞窗口计算如下：
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mo>=</mo><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mo>+</mo><mi>M</mi><mi>S</mi><mi>S</mi><mo>×</mo><mfrac><mrow><mi>M</mi><mi>S</mi><mi>S</mi></mrow><mrow><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">cwnd = cwnd + MSS \times \frac{MSS}{cwnd}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
</li>
</ul>
</li>
<li>丢失检测
<ul>
<li>通过超时检测丢失：
<ul>
<li>阈值ssthresh = cwnd/2</li>
<li>cwnd=1，进入慢启动阶段</li>
</ul>
</li>
<li>通过三次重复ACK检测丢失(TCP RENO算法)：
<ul>
<li>阈值ssthresh = cwnd/2</li>
<li>cwnd= ssthresh+3，进入线性增长(拥塞避免阶段)</li>
<li>注：重复ACK指明网络仍可以交付一些报文段(拥塞不严重)</li>
</ul>
</li>
<li>TCP Tahoe算法对于两种丢失情况均将cwnd设成1，并进入慢启动阶段</li>
</ul>
</li>
</ul>
<h2 id="网络层协议"><a class="markdownIt-Anchor" href="#网络层协议"></a> 网络层协议</h2>
<h3 id="网络层功能"><a class="markdownIt-Anchor" href="#网络层功能"></a> 网络层功能</h3>
<p>网络层功能部署</p>
<ul>
<li>网络层在每台主机和路由器中实现</li>
<li>发送端：将传输层数据单元封装在数据包中</li>
<li>接收端：解析接收的数据包中，取出传输层数据单元，交付给传输层</li>
<li>路由器：检查数据包首部，转发数据包</li>
</ul>
<p>网络层关键功能</p>
<ul>
<li>路由(控制面): 决定数据包从源主机到目的主机的路径核心：路由算法与路由协议</li>
<li>转发(数据面): 将数据包从路由器的输入接口送到输出接口的过程</li>
</ul>
<h3 id="ip协议-ip服务"><a class="markdownIt-Anchor" href="#ip协议-ip服务"></a> IP协议- IP服务</h3>
<p>IP层服务</p>
<ul>
<li>面向无连接的数据报服务
<ul>
<li>不需要提前建立连接</li>
<li>数据包基于目的主机地址进行转发</li>
<li>数据包独立转发，相同源-目的的数据包可能经过不同的路径</li>
</ul>
</li>
<li>尽力而为(Best-effort)的不可靠服务
<ul>
<li>数据包可能会产生较长的时延</li>
<li>数据包可能会丢失、失序、重复</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/2wFgTdesuCoBxpj.png" alt="image-20211231232948070"></p>
<h4 id="ipv4"><a class="markdownIt-Anchor" href="#ipv4"></a> IPv4</h4>
<p>IPv4地址</p>
<ul>
<li>IP地址：32位二进制逻辑地址(四部分，0~255)，实现互联网络统一编址，标识主机和路由器的接口</li>
<li>接口：将主机和路由器连接到物理网络
<ul>
<li>路由器一般有多个接口</li>
<li>主机可以有一个或多个接口</li>
<li>IP与物理接口绑定</li>
</ul>
</li>
<li>IP地址表示：点分割的十进制，如：223.1.1.1</li>
<li>IP地址层次：
<ul>
<li>网络号部分(net-id)</li>
<li>主机号部分(host-id)</li>
</ul>
</li>
<li>什么是一个IP网络：
<ul>
<li>位于同一个物理网络</li>
<li>设备接口的IP地址的网络号部分相同，主机号部分不同</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2021/12/31/Qq97R3rbdh5zA8U.png" alt="image-20211231233725315"></p>
<p><img src="https://s2.loli.net/2021/12/31/FEDiy6RS3QOM4tV.png" alt="image-20211231234113153"></p>
<p>IPv4地址：如何获取</p>
<ul>
<li>公有IP地址要求全球唯一，由区域互联网注册机构(RIR，Regional Internet Registry)或ISP分配</li>
<li>静态设定：
<ul>
<li>申请固定IP地址，手工设定</li>
</ul>
</li>
<li>动态获取：
<ul>
<li>使用DHCP协议或其他动态配置协议</li>
<li>当主机加入IP网络，允许主机从DHCP服务器动态获取IP地址</li>
<li>可以有效利用IP地址，方便移动主机的地址获取</li>
</ul>
</li>
</ul>
<p>路由器转发IP数据包过程：总结</p>
<ul>
<li>路由器确定IP数据包中目的地址的网络号</li>
<li>如果目的主机与路由器属于相同的IP网络，则直接转发到目的主机</li>
<li>如果目的主机与路由器不属于相同的IP网络，则查找路由表，确定下一跳路由器地址
<ul>
<li>如果存在相应的路由信息，则转发</li>
<li>如果没有相应的路由信息，则丢弃</li>
</ul>
</li>
<li>减小TTL值，修改首部的校验和</li>
<li>将数据包转发到相应的接口</li>
</ul>
<p>无类地址划分CIDR: Classless Inter-Domain Routing</p>
<ul>
<li>IP地址分为前缀和后缀两部分
<ul>
<li>一个前缀不一定标识一个物理网络</li>
</ul>
</li>
<li>前缀可以是任意长度，前缀和后缀长度用32位掩码标识
<ul>
<li>也可以表示成：a.b.c.d /x，x为前缀长度</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2022/01/01/Hpgju3D9dzIW81x.png" alt="image-20220101020031705"></p>
<p>私有IP地址和NAT</p>
<ul>
<li>私有IP地址的使用
<ul>
<li>可以在私有网络(本地网络)中自由使用，但不能出现在公网上</li>
<li>如果数据包要进入公网，需要进行私有地址到公有地址的转换</li>
<li>承担地址转换的设备称为NAT(Network Address Translation)</li>
</ul>
</li>
<li>本地网络使用私有IP地址，NAT 面向公网侧使用公网IP地址
<ul>
<li>只需要一个或少量的公网IP地址</li>
<li>公网IP地址变化，不影响本地网络地址配置</li>
<li>安全性增强</li>
</ul>
</li>
<li>NAT 的基本实现方法离开本地网络的数据包：用(NAT 的IP地址+新端口号)代替(源IP地址+端口号)，远端的主机返回的数据包将使用(NAT 的IP地址+新端口号)作为目的IP地址和目的端口
<ul>
<li>NAT 在转换表中记录(NAT 的IP地址+新端口号)到(源IP地址+端口号)的映射</li>
</ul>
</li>
<li>进入本地网络的数据包：用转换表中的(源IP地址+端口号)替换数据包中的目的IP地址和端口号(NAT 的IP地址+新端口号)</li>
</ul>
<h4 id="ipv6"><a class="markdownIt-Anchor" href="#ipv6"></a> IPv6</h4>
<p>IPv6互联网的优势</p>
<ul>
<li>解决地址耗尽问题：更大的地址空间(32位→128位)
<ul>
<li>340,282,366,920,938,463,463,374,607,431,768,211,456个IP地址</li>
<li>地球上每平方米范围：6.67×1023个IP地址</li>
</ul>
</li>
<li>自动配置的支持(即插即用)
<ul>
<li>无状态地址自动配置</li>
<li>有状态地址自动配置：对DHCP协议改进和扩展，网络管理更加方便和快捷</li>
</ul>
</li>
<li>改善网络性能
<ul>
<li>IP包头的合理改善，提高了路由器对数据包的处理速率</li>
<li>路由聚合，使路由表更小，提高转发效率</li>
</ul>
</li>
<li>方便各项业务开展
<ul>
<li>无需使用NAT 设备</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2022/01/01/EHaehtWOXU5zMmp.png" alt="image-20220101022814088"></p>
<ul>
<li>IPv6数据包由一个IPv6基本头、多个扩展头和上层数据单元组成</li>
<li>IPv6基本头：40字节固定长度，包含了发送和转发该数据包必须处理的一些字段</li>
<li>IPv6数据包可以包含0个或多个扩展头，扩展头位于基本头之后</li>
<li>基本头和扩展头中“下一包头”字段指出下一个扩展头的类型。最后一个扩展头中的“下一包头”字段指出高层协议的类型</li>
<li><img src="https://s2.loli.net/2022/01/01/xR4hdkFtozbDsji.png" alt="image-20220101022954509"></li>
<li>128位地址：由冒号分开的8组十六进制字段组成</li>
<li><img src="https://s2.loli.net/2022/01/01/NeX9lOsSE5nIpuZ.png" alt="image-20220101023110999"></li>
<li>完全形式：1080:0000:0000:0000:0008:0800:200C:417A</li>
<li>圧缩形式：1080:0:0:0:8:800:200C:417A / 1080::8:800:200C:417A
<ul>
<li>地址段中有时会出现连续的几组0，这时这些0可以用“::”代替，但一个地址中只能出现一次“::“，例如：FF01:0:0:0:0:0:0:101=FF01::101，0:0:0:0:0:0:0:1=::1</li>
</ul>
</li>
<li>内嵌IPv4地址的IPv6地址：0:0:0:0:0:0:61.1.133.1 或::61.1.133.1</li>
<li>URL的IPv6地址表示：https://[2001:410:0:1:250:fcee:e450:33ab]:8443/abc.html</li>
</ul>
<h3 id="icmp协议"><a class="markdownIt-Anchor" href="#icmp协议"></a> ICMP协议</h3>
<p>ICMP: 互联网控制消息协议</p>
<p><img src="https://s2.loli.net/2022/01/01/726xsaDrmcMYtlK.png" alt="image-20220101040334497"></p>
<h3 id="路由算法"><a class="markdownIt-Anchor" href="#路由算法"></a> 路由算法</h3>
<p>目标：确定从源主机到目的主机的最优路径</p>
<p>最优路径：一般为代价最小的路径</p>
<ul>
<li>代价：有不同的定义方法，例如：距离、时延、费用、拥塞等</li>
</ul>
<p>路由算法的分布式实现</p>
<ul>
<li>路由器之间交互路由信息或链路状态信息</li>
<li>每台路由器独立计算最优路径</li>
</ul>
<p>相对于数据包转发，所有路由协议的开销都属于额外管理开销</p>
<p>网络结构的图抽象</p>
<ul>
<li>路由器：图中的点</li>
<li>物理链路：图中的边</li>
<li>代价：图中边的权值</li>
</ul>
<p>用G = (N, E) 表示图</p>
<ul>
<li>N = { u, v, w, x, y, z }，路由器集合</li>
<li>E = { (u, v), (u, x), (v, x), (v, w), (x, w),(x,y), (w,y), (w,z), (y,z) } ，链路的集合</li>
<li><img src="https://s2.loli.net/2022/01/06/9AaEyulJpTFowZt.png" alt="image-20220106062001540"></li>
</ul>
<p>链路代价：相邻节点之间的代价值，表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(x_i,x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<ul>
<li>如果xi和xj不相邻，链路代价记为无穷</li>
<li>例如, c(w, z) = 5</li>
</ul>
<p>路径代价：路径上所有链路代价和</p>
<ul>
<li>例如，路径<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mtext>的代价</mtext><mo>=</mo><mi>c</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>c</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1, x_2,x_3,..., x_p)的代价= c(x_1,x_2) + c(x_2,x_3) + ... + c(x_{p-1},x_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">价</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<p><a href="https://zhuanlan.zhihu.com/p/338414118">Dijkstra算法详解</a></p>
<p>Bellman-Ford公式<br>
假设：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">D_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(y) = 从x到y最小代价路径的代价值<br>
则：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">D_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(y) = min { c(x,m) + Dm(y) }</p>
<ul>
<li>m为x的邻居</li>
</ul>
<p>距离向量路由算法</p>
<ul>
<li>算法符号定义
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">D_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(y) = 从x到y最小代价路径的代价值节点x可以获知到每个邻居的链路代价c(x, m)</li>
<li>节点x维护自己的距离向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>D</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">D_x = [D_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(y): y єN ]</li>
<li>节点x维护其邻居的距离向量，对于每个邻居m，x维护<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>m</mi></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>D</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">D_m = [D_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(y): y єN ]</li>
</ul>
</li>
<li>基本思想
<ul>
<li>当节点的距离向量值发生变化时，向邻居节点发送自己的距离向量</li>
<li>如果节点x接收到邻居节点发送的距离向量，使用Bellman-Ford公式重新计算到所有其他节点的路径代价
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>←</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">D_x(y) ← min {c(x,m) + D_m(y)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span>    每个节点y ∊N</li>
</ul>
</li>
<li>经过反复迭代，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_x(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>会逐渐收敛到实际的最小路径代价值</li>
</ul>
</li>
</ul>
<h3 id="互联网路由协议"><a class="markdownIt-Anchor" href="#互联网路由协议"></a> 互联网路由协议</h3>
<p>扩展性问题</p>
<ul>
<li>络路由表庞大，存储、查找困难</li>
<li>路由信息交互量大，额外开销高</li>
</ul>
<p>管理的自治问题</p>
<ul>
<li>互联网由大量自治域构成</li>
<li>每个自治域独立管理，每个自治域可能运行不同的路由协议</li>
</ul>
<p>层次化路由</p>
<ul>
<li>自治域内路由
<ul>
<li>相同的自治域中的所有路由器运行相同的自治域内路由协议</li>
<li>不同的自治域的路由器可以运行不同的自治域内路由协议</li>
<li>网关路由器(或边界路由器)：与其他自治域的路由器相连接的路由器</li>
</ul>
</li>
<li>自治域间路由
<ul>
<li>不同自治域网关路由器(或边界路由器)之间运行的路由协议</li>
<li>网关路由器：既执行自治域内的路由协议，也执行路由器之间的路由协议
<ul>
<li>路由表由自治域内和自治域间路由算法产生</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>运行协议</p>
<ul>
<li>自治域内路由：也称为内部网关协议IGP
<ul>
<li>路由信息协议RIP: Routing Information Protocol
<ul>
<li>使用距离向量法</li>
<li>两种基本的报文类型
<ul>
<li>请求报文</li>
<li>响应报文</li>
</ul>
</li>
<li>定期发送通告：相邻路由器每隔30秒发送一次响应报文
<ul>
<li>IP目的地址：255.255.255.255(本地广播地址)</li>
<li>跳步数定义：直接相连=1</li>
<li>每个通告可以最多携带25个目的网络</li>
</ul>
</li>
<li>触发更新：如果发现链路失效或变化，立即发送响应报文</li>
<li>如果超过180秒没有接收到邻居通告，则认为链路失效
<ul>
<li>通过邻居的路径失效</li>
<li>向邻居发送通告</li>
<li>如果邻居的路由表项发生变化，则继续通告</li>
<li>链路失效信息会传播到整个网络</li>
<li>使用毒性逆转可以防止暂时环路的产生</li>
<li>设置16跳为无穷值，提高收敛速度</li>
</ul>
</li>
<li>RIP协议在应用层实现
<ul>
<li>路由器中运行守候进程(routed)</li>
<li>使用UDP的520端口</li>
<li>发送和接收RIP报文，管理路由表</li>
</ul>
</li>
</ul>
</li>
<li>开放最短路径优先协议OSPF: Open Shortest Path First
<ul>
<li>几个概念
<ul>
<li>邻居(Neighbor)：两台路由器属于相同的IP网络，并通过交换Hello报文协商成功，则可以成为邻居</li>
<li>邻接关系(Adjacency)：形成邻居关系后，如果两台路由器成功交换DBD(数据库描述)报文以及LSA，则建立邻接关系</li>
<li>链路状态通告(Link State Advertisement，LSA)：每台路由器会在所有形成邻接关系的邻居之间发送LSA，LSA描述了路由器的链路、接口、邻居等信息</li>
<li>链路状态数据库(LSDB)：路由器将收到的LSA记录在LSDB中，并发送LSA拷贝给该路由器的其他所有邻居。当LSA传播到整个区域后，区域内所有的路由器都会形成同样的LSDB</li>
</ul>
</li>
<li>OSPF直接运行在IP协议之上，OSPF报文由IP数据包直接承载，协议类型为89</li>
<li><img src="https://s2.loli.net/2022/01/06/5UDPCgy8x1cb3Iu.png" alt="image-20220106075537488"></li>
<li>三张表
<ul>
<li>邻居列表：列出全部已经建立邻接关系的邻居路由器</li>
<li>链路状态数据库：列出网络中其他路由器的信息，由此显示全网的网络拓扑</li>
<li>路由表：列出通过最短路径优先算法计算出到达每个相连网络的最佳路径</li>
</ul>
</li>
<li>OSPF工作过程</li>
<li>邻居发现
<ul>
<li>通过Hello报文发现并形成邻居关系，建立邻居表</li>
</ul>
</li>
<li>路由通告
<ul>
<li>邻接路由器之间通过LSU洪泛LSA，通告链路状态信息，最终区域内所有路由器的LSDB完全相同，即实现同步</li>
<li>通过DBD、LSR、LSACK辅助LSA的同步</li>
</ul>
</li>
<li>路由计算
<ul>
<li>LSDB同步后，每台路由器独立计算最优路由，将最优路由信息写入路由表</li>
</ul>
</li>
</ul>
</li>
<li>中间系统到中间系统路由协议IS-IS：Intermediate System-to-Intermediate System (ISO)</li>
<li>内部网关路由协议IGRP: Interior Gateway Routing Protocol (Cisco)</li>
</ul>
</li>
<li>自治域间路由
<ul>
<li>边界网关协议BGP-4: Border Gateway Protocol</li>
<li>目前互联网中唯一实际运行的自治域间的路由协议</li>
<li><strong>BGP</strong>功能
<ul>
<li>eBGP: 从相邻的AS获得网络可达信息</li>
<li>iBGP: 将网络可达信息传播给AS内的路由器</li>
<li>基于网络可达信息和策略决定到其他网络的“最优”路由</li>
</ul>
</li>
<li>BGP报文
<ul>
<li>BGP通过TCP的179端口交换报文</li>
<li>BGP报文包括:
<ul>
<li>Open报文：用于建立BGP对等体（peer）之间的会话连接，协商BGP参数（该过程需要认证）</li>
<li>Update报文：用于在对等体之间交换路由信息</li>
<li>Keepalive报文：用于保持BGP会话连接</li>
<li>Notification报文：用于差错报告和关闭BGP连接</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2022/01/06/8ZwSsmYBAJGlK6T.png" alt="image-20220106221244307"></p>
<h3 id="软件定义网络sdn"><a class="markdownIt-Anchor" href="#软件定义网络sdn"></a> 软件定义网络(SDN)</h3>
<p>软件定义网络核心思想</p>
<ul>
<li>解耦：
<ul>
<li>将控制平面和数据平面进行分离，解决传统网络中控制平面和数据平面在物理上紧耦合导致的问题解决的问题</li>
<li>控制平面和数据平面之间不需要相互依赖，只需要遵循一定的开放接口即可进行通信</li>
<li>控制平面：负责决策控制，由软件实现，灵活</li>
<li>数据平面：专注数据转发，可有由通用硬件实现</li>
</ul>
</li>
<li>抽象：
<ul>
<li>转发抽象：将数据平面抽象为通用的转发模型，如Openflow的交换机模型，各种转发表项，如MAC地址表、路由表、NAT 转换表等，抽象为统一的流表</li>
<li>分布状态抽象：控制层将设备的分布状态，抽象成全局的网络视图，从而实现逻辑的集中控制，具体可以通过网络操作系统来实现
<ul>
<li>网络操作系统（NOS）：下发控制命令，收集设备和链路状态，为上层应用提供全局网络视图</li>
</ul>
</li>
<li>配置抽象：网络行为的表达通过编程语言实现，将抽象配置映射为物理配置，利用控制器提供的API，通过控制器配置全局设备</li>
</ul>
</li>
</ul>
<p><img src="https://s2.loli.net/2022/01/06/bFHhCoIPLWt2xEU.png" alt="image-20220106090124317"></p>
<h2 id="接口层原理与协议"><a class="markdownIt-Anchor" href="#接口层原理与协议"></a> 接口层原理与协议</h2>
<ul>
<li>接口层提供同一<strong>物理网络</strong>中各节点之间的连接和通信</li>
<li>同一个<strong>物理网络</strong>必须执行相同的接口层协议</li>
<li>不同的<strong>物理网络</strong>接口层协议可以不同</li>
</ul>
<h3 id="接口层基础"><a class="markdownIt-Anchor" href="#接口层基础"></a> 接口层基础</h3>
<p>物理网络连接方式：节点到节点连接、共享式连接、交换式连接</p>
<p>接口层功能</p>
<ul>
<li>物理层：提供位流服务
<ul>
<li>传输介质和拓扑结构定义</li>
<li>编码与解码(数据→信号)</li>
<li>信号的发送与接收</li>
<li>时钟同步</li>
</ul>
</li>
<li>数据链路层：提供可靠或不可靠的传输服务
<ul>
<li>数据单元及寻址方式定义</li>
<li>链路层差错检测</li>
<li>链路层的复用和分用</li>
<li>可靠数据传输</li>
<li>共享式连接：提供介质访问控制方法</li>
<li>交换式连接：数据单元转发</li>
</ul>
</li>
</ul>
<p>接口层技术分类</p>
<ul>
<li>有多种接口层技术，传统上大致可以分成三类
<ul>
<li>局域网技术(LAN, Local Area Network )
<ul>
<li>如：以太网(Ethernet)、无线局域网(WiFi)</li>
</ul>
</li>
<li>城域网技术(MAN, Metropolitan Area Network)
<ul>
<li>如：FDDI、交换式Ethernet</li>
</ul>
</li>
<li>广域网技术Wide Area Network (WAN)
<ul>
<li>如：ATM</li>
</ul>
</li>
</ul>
</li>
<li>其他接口技术
<ul>
<li>个人区域网
<ul>
<li>如：蓝牙技术(Bluetooth)</li>
</ul>
</li>
<li>无线传感网络
<ul>
<li>如：Zigbee技术</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="局域网体系结构与组网方法"><a class="markdownIt-Anchor" href="#局域网体系结构与组网方法"></a> 局域网体系结构与组网方法</h3>
<p>介质访问控制层(Medium Access Control )</p>
<ul>
<li>物理节点寻址</li>
<li>差错控制</li>
<li>介质访问控制（共享式连接）</li>
</ul>
<p>逻辑链路控制层（Logical Link Control）</p>
<ul>
<li>
<p>链路层的复用和分用</p>
</li>
<li>
<p>可靠数据传输</p>
</li>
<li>
<p>共享式局域网</p>
<ul>
<li>网络中任一节点发送的信息会被网络中所有节点收到（广播传输）
<ul>
<li>例如，共享式以太网，无线局域网，FDDI等</li>
</ul>
</li>
<li>需要协调节点对共享介质的访问
<ul>
<li>介质访问控制方法</li>
</ul>
</li>
</ul>
</li>
<li>
<p>交换式局域网</p>
<ul>
<li>链路采用点到点连接
<ul>
<li>例如，交换式以太网</li>
</ul>
</li>
<li>交换机成为网络连接的核心
<ul>
<li>完成链路层数据单元的转发</li>
<li>通常采用统计多路复用</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>MAC地址—物理地址</p>
<ul>
<li>32位IP地址:
<ul>
<li>网络层地址（逻辑地址）：标识主机或路由器的一个接口</li>
<li>主要用于IP数据包的路由转发</li>
</ul>
</li>
<li>48位MAC地址（物理地址）:
<ul>
<li>物理地址：在相同的物理网络中，标识一个节点</li>
<li>对于大多数局域网，采用48位MAC地址
<ul>
<li>位于网卡的ROM或EPROM中</li>
<li>扁平地址，无层次，需要唯一</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="局域网编址与arp协议"><a class="markdownIt-Anchor" href="#局域网编址与arp协议"></a> 局域网编址与ARP协议</h3>
<p>ARP协议ARP: Address Resolution Protocol</p>
<ul>
<li>局域网的每个IP节点（主机或路由器）都有ARP表</li>
<li>ARP表缓存IP地址和MAC地址的映射关系</li>
</ul>
<h3 id="链路层差错控制"><a class="markdownIt-Anchor" href="#链路层差错控制"></a> 链路层差错控制</h3>
<p>在数据链路层中，广泛使用循环冗余校验（Cyclic Redundancy Check ）<br>
CRC校验码计算方法</p>
<ol>
<li>设原始数据D为k位二进制位模式</li>
<li>如果要产生n位CRC校验码，事先选定一个n+1位二进制位模式G（称为生成多项式），G的最高位为1</li>
<li>将原始数据D乘以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> （相当于在D后面添加n 个0），产生k+n位二进制位模式，用G对该位模式做模2除，得到余数R（n位，不足n位前面用0补齐）即为CRC校验码</li>
</ol>
<p><img src="https://s2.loli.net/2022/01/06/KsIS3ClMEv4jNLi.png" alt="image-20220106084342460"></p>
<h3 id="共享式与交换式以太网"><a class="markdownIt-Anchor" href="#共享式与交换式以太网"></a> 共享式与交换式以太网</h3>
<p>共享式以太网：连接方式与功能</p>
<ul>
<li>连接方式
<ul>
<li>方式1：通过同轴电缆连接（10Mbps以太网）</li>
<li>方式2：通过双绞线、光纤与集线器连接</li>
</ul>
</li>
<li>服务：面向非连接的不可靠服务</li>
<li>功能
<ul>
<li>物理层
<ul>
<li>信号编码、时钟同步等，如差分曼彻斯特编码</li>
</ul>
</li>
<li>介质访问控制层
<ul>
<li>介质访问控制：CSMA/CD</li>
<li>差错检测</li>
</ul>
</li>
<li>逻辑链路控制层
<ul>
<li>复用与分用</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="虚拟局域网"><a class="markdownIt-Anchor" href="#虚拟局域网"></a> 虚拟局域网</h3>
<p>基于端口的VLAN: 交换机的端口被分组，单个物理交换机能够作为多个虚拟交换机运行</p>
<p>基于端口VLAN原理：</p>
<ul>
<li>隔离通信流量: 来自于或到达端口1-8的流量只能到达1-8
<ul>
<li>也可以基于MAC地址定义VLAN</li>
</ul>
</li>
<li>动态配置: 端口能够在VLAN之间动态配置</li>
<li>VLAN之间转发:类似独立的交换机，通过路由进行转发</li>
</ul>
<h3 id="无线局域网"><a class="markdownIt-Anchor" href="#无线局域网"></a> 无线局域网</h3>
<p>802.11无线局域网组网模式</p>
<p>基础架构模式：</p>
<ul>
<li>站点（STA）</li>
<li>访问点（AP）</li>
<li>基本服务器（BSS）</li>
<li>扩展服务器（ESS）</li>
</ul>
<p>注：每个BSS中的站点和AP共享同一无线信道；站点通过AP转发数据</p>
<p>自组织模式：</p>
<ul>
<li>站点（STA）</li>
<li>独立基本服务器（IBSS）</li>
<li>站点之间直接通信</li>
<li>共享同一无线信道</li>
</ul>
<p>注：每个站点在某个时刻只能工作在一种模式</p>
]]></content>
      <categories>
        <category>复习</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>背包理论基础多重背包</title>
    <url>/blog/2022/0871e46bfb.html</url>
    <content><![CDATA[<blockquote>
<p>转载自<a href="https://programmercarl.com/">代码随想录</a>，侵删</p>
</blockquote>
<p>建议按照如下顺序观看：<br>
<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包（本文）</a></p>
<h1 id="动态规划关于多重背包你该了解这些"><a class="markdownIt-Anchor" href="#动态规划关于多重背包你该了解这些"></a> 动态规划：关于多重背包，你该了解这些！</h1>
<p>这次我们再来说一说多重背包</p>
<h2 id="多重背包"><a class="markdownIt-Anchor" href="#多重背包"></a> 多重背包</h2>
<p>对于多重背包，我在力扣上还没发现对应的题目，所以这里就做一下简单介绍，大家大概了解一下。</p>
<p>有N种物品和一个容量为V 的背包。第i种物品最多有Mi件可用，每件耗费的空间是Ci ，价值是Wi 。求解将哪些物品装入背包可使这些物品的耗费的空间 总和不超过背包容量，且价值总和最大。</p>
<p>多重背包和01背包是非常像的， 为什么和01背包像呢？</p>
<p>每件物品最多有Mi件可用，把Mi件摊开，其实就是一个01背包问题了。</p>
<p>例如：</p>
<p>背包最大重量为10。</p>
<p>物品为：</p>
<table>
<thead>
<tr>
<th></th>
<th>重量</th>
<th>价值</th>
<th>数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>物品0</td>
<td>1</td>
<td>15</td>
<td>2</td>
</tr>
<tr>
<td>物品1</td>
<td>3</td>
<td>20</td>
<td>3</td>
</tr>
<tr>
<td>物品2</td>
<td>4</td>
<td>30</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>问背包能背的物品最大价值是多少？</p>
<p>和如下情况有区别么？</p>
<table>
<thead>
<tr>
<th></th>
<th>重量</th>
<th>价值</th>
<th>数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>物品0</td>
<td>1</td>
<td>15</td>
<td>1</td>
</tr>
<tr>
<td>物品0</td>
<td>1</td>
<td>15</td>
<td>1</td>
</tr>
<tr>
<td>物品1</td>
<td>3</td>
<td>20</td>
<td>1</td>
</tr>
<tr>
<td>物品1</td>
<td>3</td>
<td>20</td>
<td>1</td>
</tr>
<tr>
<td>物品1</td>
<td>3</td>
<td>20</td>
<td>1</td>
</tr>
<tr>
<td>物品2</td>
<td>4</td>
<td>30</td>
<td>1</td>
</tr>
<tr>
<td>物品2</td>
<td>4</td>
<td>30</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>毫无区别，这就转成了一个01背包问题了，且每个物品只用一次。</p>
<p>这种方式来实现多重背包的代码如下：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_multi_pack</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; nums = {<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>};
    <span class="hljs-type">int</span> bagWeight = <span class="hljs-number">10</span>;
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++) {
        <span class="hljs-keyword">while</span> (nums[i] &gt; <span class="hljs-number">1</span>) { <span class="hljs-comment">// nums[i]保留到1，把其他物品都展开</span>
            weight.<span class="hljs-built_in">push_back</span>(weight[i]);
            value.<span class="hljs-built_in">push_back</span>(value[i]);
            nums[i]--;
        }
    }

    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(bagWeight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
            dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
        }
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagWeight; j++) {
            cout &lt;&lt; dp[j] &lt;&lt; <span class="hljs-string">" "</span>;
        }
        cout &lt;&lt; endl;
    }
    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;

}
<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_multi_pack</span>();
}

</code></pre>
<ul>
<li>时间复杂度：O(m × n × k)，m：物品种类个数，n背包容量，k单类物品数量</li>
</ul>
<p>也有另一种实现方式，就是把每种商品遍历的个数放在01背包里面在遍历一遍。</p>
<p>代码如下：（详看注释）</p>
<pre class="highlight"><code class="CPP"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_multi_pack</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; nums = {<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>};
    <span class="hljs-type">int</span> bagWeight = <span class="hljs-number">10</span>;
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(bagWeight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;


    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
            <span class="hljs-comment">// 以上为01背包，然后加一个遍历个数</span>
            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">1</span>; k &lt;= nums[i] &amp;&amp; (j - k * weight[i]) &gt;= <span class="hljs-number">0</span>; k++) { <span class="hljs-comment">// 遍历个数</span>
                dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - k * weight[i]] + k * value[i]);
            }
        }
        <span class="hljs-comment">// 打印一下dp数组</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagWeight; j++) {
            cout &lt;&lt; dp[j] &lt;&lt; <span class="hljs-string">" "</span>;
        }
        cout &lt;&lt; endl;
    }
    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;
}
<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_multi_pack</span>();
}
</code></pre>
<ul>
<li>时间复杂度：O(m × n × k)，m：物品种类个数，n背包容量，k单类物品数量</li>
</ul>
<p>从代码里可以看出是01背包里面在加一个for循环遍历一个每种商品的数量。 和01背包还是如出一辙的。</p>
<p>当然还有那种二进制优化的方法，其实就是把每种物品的数量，打包成一个个独立的包。</p>
<p>和以上在循环遍历上有所不同，因为是分拆为各个包最后可以组成一个完整背包，具体原理我就不做过多解释了，大家了解一下就行，面试的话基本不会考完这个深度了，感兴趣可以自己深入研究一波。</p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>多重背包在面试中基本不会出现，力扣上也没有对应的题目，大家对多重背包的掌握程度知道它是一种01背包，并能在01背包的基础上写出对应代码就可以了。</p>
<p>至于背包九讲里面还有混合背包，二维费用背包，分组背包等等这些，大家感兴趣可以自己去学习学习，这里也不做介绍了，面试也不会考。</p>
<p><a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包（本文）</a></p>
]]></content>
  </entry>
  <entry>
    <title>背包理论基础完全背包</title>
    <url>/blog/2022/08806f2082.html</url>
    <content><![CDATA[<blockquote>
<p>转载自<a href="https://programmercarl.com/">代码随想录</a>，侵删</p>
</blockquote>
<p>建议按照如下顺序观看：<br>
<a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
<h1 id="动态规划关于完全背包你该了解这些"><a class="markdownIt-Anchor" href="#动态规划关于完全背包你该了解这些"></a> 动态规划：关于完全背包，你该了解这些！</h1>
<h2 id="完全背包"><a class="markdownIt-Anchor" href="#完全背包"></a> 完全背包</h2>
<p>有N件物品和一个最多能背重量为W的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。<strong>每件物品都有无限个（也就是可以放入背包多次）</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>
<p><strong>完全背包和01背包问题唯一不同的地方就是，每种物品有无限件</strong>。</p>
<p>同样leetcode上没有纯完全背包问题，都是需要完全背包的各种应用，需要转化成完全背包问题，所以我这里还是以纯完全背包问题进行讲解理论和原理。</p>
<p>在下面的讲解中，我依然举这个例子：</p>
<p>背包最大重量为4。</p>
<p>物品为：</p>
<table>
<thead>
<tr>
<th></th>
<th>重量</th>
<th>价值</th>
</tr>
</thead>
<tbody>
<tr>
<td>物品0</td>
<td>1</td>
<td>15</td>
</tr>
<tr>
<td>物品1</td>
<td>3</td>
<td>20</td>
</tr>
<tr>
<td>物品2</td>
<td>4</td>
<td>30</td>
</tr>
</tbody>
</table>
<p><strong>每件商品都有无限个！</strong></p>
<p>问背包能背的物品最大价值是多少？</p>
<p>01背包和完全背包唯一不同就是体现在遍历顺序上，所以本文就不去做动规五部曲了，我们直接针对遍历顺序经行分析！</p>
<p>关于01背包我如下两篇已经进行深入分析了：</p>
<ul>
<li><a href="https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html">动态规划：关于01背包问题，你该了解这些！</a></li>
<li><a href="https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.html">动态规划：关于01背包问题，你该了解这些！（滚动数组）</a></li>
</ul>
<p>首先在回顾一下01背包的核心代码</p>
<pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="hljs-comment">// 遍历背包容量</span>
        dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
    }
}
</code></pre>
<p>我们知道01背包内嵌的循环是从大到小遍历，为了保证每个物品仅被添加一次。</p>
<p>而完全背包的物品是可以添加多次的，所以要从小到大去遍历，即：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-comment">// 先遍历物品，再遍历背包</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = weight[i]; j &lt;= bagWeight ; j++) { <span class="hljs-comment">// 遍历背包容量</span>
        dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);

    }
}
</code></pre>
<p>至于为什么，我在<a href="https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.html">动态规划：关于01背包问题，你该了解这些！（滚动数组）</a>中也做了讲解。</p>
<p>dp状态图如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20210126104510106.jpg" alt="动态规划-完全背包"></p>
<p>相信很多同学看网上的文章，关于完全背包介绍基本就到为止了。</p>
<p><strong>其实还有一个很重要的问题，为什么遍历物品在外层循环，遍历背包容量在内层循环？</strong></p>
<p>这个问题很多题解关于这里都是轻描淡写就略过了，大家都默认 遍历物品在外层，遍历背包容量在内层，好像本应该如此一样，那么为什么呢？</p>
<p>难道就不能遍历背包容量在外层，遍历物品在内层？</p>
<p>看过这两篇的话：</p>
<ul>
<li><a href="https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html">动态规划：关于01背包问题，你该了解这些！</a></li>
<li><a href="https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.html">动态规划：关于01背包问题，你该了解这些！（滚动数组）</a></li>
</ul>
<p>就知道了，01背包中二维dp数组的两个for遍历的先后循序是可以颠倒了，一维dp数组的两个for循环先后循序一定是先遍历物品，再遍历背包容量。</p>
<p><strong>在完全背包中，对于一维dp数组来说，其实两个for循环嵌套顺序同样无所谓！</strong></p>
<p>因为dp[j] 是根据 下标j之前所对应的dp[j]计算出来的。 只要保证下标j之前的dp[j]都是经过计算的就可以了。</p>
<p>遍历物品在外层循环，遍历背包容量在内层循环，状态如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20210126104529605.jpg" alt="动态规划-完全背包1"></p>
<p>遍历背包容量在外层循环，遍历物品在内层循环，状态如图：</p>
<p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20210729234011.png" alt="动态规划-完全背包2"></p>
<p>看了这两个图，大家就会理解，完全背包中，两个for循环的先后循序，都不影响计算dp[j]所需要的值（这个值就是下标j之前所对应的dp[j]）。</p>
<p>先遍历背包在遍历物品，代码如下：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-comment">// 先遍历背包，再遍历物品</span>
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagWeight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">if</span> (j - weight[i] &gt;= <span class="hljs-number">0</span>) dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
    }
    cout &lt;&lt; endl;
}
</code></pre>
<h2 id="c测试代码"><a class="markdownIt-Anchor" href="#c测试代码"></a> C++测试代码</h2>
<p>完整的C++测试代码如下：</p>
<pre class="highlight"><code class="CPP"><span class="hljs-comment">// 先遍历物品，在遍历背包</span>
<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_CompletePack</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    <span class="hljs-type">int</span> bagWeight = <span class="hljs-number">4</span>;
    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(bagWeight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = weight[i]; j &lt;= bagWeight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
            dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
        }
    }
    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;
}
<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_CompletePack</span>();
}

</code></pre>
<pre class="highlight"><code class="CPP">
<span class="hljs-comment">// 先遍历背包，再遍历物品</span>
<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_CompletePack</span><span class="hljs-params">()</span> </span>{
    vector&lt;<span class="hljs-type">int</span>&gt; weight = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};
    vector&lt;<span class="hljs-type">int</span>&gt; value = {<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>};
    <span class="hljs-type">int</span> bagWeight = <span class="hljs-number">4</span>;

    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(bagWeight + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>;

    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= bagWeight; j++) { <span class="hljs-comment">// 遍历背包容量</span>
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; weight.<span class="hljs-built_in">size</span>(); i++) { <span class="hljs-comment">// 遍历物品</span>
            <span class="hljs-keyword">if</span> (j - weight[i] &gt;= <span class="hljs-number">0</span>) dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);
        }
    }
    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;
}
<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-built_in">test_CompletePack</span>();
}

</code></pre>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>细心的同学可能发现，<strong>全文我说的都是对于纯完全背包问题，其for循环的先后循环是可以颠倒的！</strong></p>
<p>但如果题目稍稍有点变化，就会体现在遍历顺序上。</p>
<p>如果问装满背包有几种方式的话？ 那么两个for循环的先后顺序就有很大区别了，而leetcode上的题目都是这种稍有变化的类型。</p>
<p>这个区别，我将在后面讲解具体leetcode题目中给大家介绍，因为这块如果不结合具题目，单纯的介绍原理估计很多同学会越看越懵！</p>
<p>别急，下一篇就是了！哈哈</p>
<p>最后，<strong>又可以出一道面试题了，就是纯完全背包，要求先用二维dp数组实现，然后再用一维dp数组实现，最后在问，两个for循环的先后是否可以颠倒？为什么？</strong><br>
这个简单的完全背包问题，估计就可以难住不少候选人了。</p>
<p><a href="https://kpl0111.github.io/blog/2022/08c8776b35.html">背包理论基础01背包1</a><br>
<a href="https://kpl0111.github.io/blog/2022/08517e3a8f.html">背包理论基础01背包2</a><br>
<a href="https://kpl0111.github.io/blog/2022/08806f2082.html">背包基础理论完全背包（本文）</a><br>
<a href="https://kpl0111.github.io/blog/2022/0871e46bfb.html">背包基础理论多重背包</a></p>
]]></content>
  </entry>
  <entry>
    <title>随手记(政治)</title>
    <url>/blog/2022/11b85d3e4c.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="89c53edef807d44a222e16bba52667735639b44ad1f55b5c525b84bf6b8f2b5c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>随手记(除政治)</title>
    <url>/blog/2022/09aa25a989.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is wrong, please try again!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d3363aa0ad533d4a20a793695a7f16b43f6cc9fe4e0692107bd67e37ac179713"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Please input the password!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
</search>
